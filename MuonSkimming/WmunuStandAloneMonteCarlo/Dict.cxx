//
// File generated by rootcint at Wed Oct  1 06:53:08 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonBranch MuonBranch;
      #else
      class MuonBranch  :  public ::BranchBase {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~MuonBranch() throw() {};
         int Mymu_muid_n; //
         int muid_npairs; //
         float Mymu_muid_truth_dr[30]; //
         float Mymu_muid_truth_E[30]; //
         float Mymu_muid_truth_pt[30]; //
         float Mymu_muid_truth_eta[30]; //
         float Mymu_muid_truth_phi[30]; //
         int Mymu_muid_truth_type[30]; //
         int Mymu_muid_truth_status[30]; //
         int Mymu_muid_truth_barcode[30]; //
         int Mymu_muid_truth_mothertype[30]; //
         int Mymu_muid_truth_motherbarcode[30]; //
         int Mymu_muid_truth_matched[30]; //
         float Mymu_muid_E[30]; //
         float Mymu_muid_pt[30]; //
         float Mymu_muid_m[30]; //
         float Mymu_muid_eta[30]; //
         float Mymu_muid_phi[30]; //
         float Mymu_muid_px[30]; //
         float Mymuid_invMass[30]; //
         float Mymuid_massCB[900]; //
         float Mymuid_massCBSS[900]; //
         float Mymuid_massCBOS[900]; //
         vector< vector< float, allocator< float >  >  >* Vecsinglemuid_massCBOS; //
         vector< vector< int, allocator< int >  >  >* IDprobe; //
         vector< vector< int, allocator< int >  >  >* MSprobe; //
         vector< float > Vecsinglemuid_massCBOS_one; //
         vector< int > IDprobe_one; //
         vector< int > MSprobe_one; //
         float Mymu_muid_py[30]; //
         float Mymu_muid_pz[30]; //
         float Mymu_muid_charge[30]; //
         float Mymu_muid_allauthor[30]; //
         int Mymu_muid_author[30]; //
         float Mymu_muid_beta[30]; //
         float Mymu_muid_isMuonLikelihood[30]; //
         float Mymu_muid_matchchi2[30]; //
         int Mymu_muid_matchndof[30]; //
         float Mymu_muid_etcone20[30]; //
         float Mymu_muid_etcone30[30]; //
         float Mymu_muid_etcone40[30]; //
         float Mymu_muid_nucone20[30]; //
         float Mymu_muid_nucone30[30]; //
         float Mymu_muid_nucone40[30]; //
         float Mymu_muid_ptcone20[30]; //
         float Mymu_muid_ptcone30[30]; //
         float Mymu_muid_ptcone40[30]; //
         float mu_muid_ptcone10ID05[30]; //
         float mu_muid_ptcone15ID05[30]; //
         float mu_muid_ptcone20ID05[30]; //
         float mu_muid_ptcone30ID05[30]; //
         float mu_muid_ptcone40ID05[30]; //
         float mu_muid_ptcone50ID05[30]; //
         float mu_muid_ptcone10ID075[30]; //
         float mu_muid_ptcone15ID075[30]; //
         float mu_muid_ptcone20ID075[30]; //
         float mu_muid_ptcone30ID075[30]; //
         float mu_muid_ptcone40ID075[30]; //
         float mu_muid_ptcone50ID075[30]; //
         float mu_muid_ptcone10ID1[30]; //
         float mu_muid_ptcone15ID1[30]; //
         float mu_muid_ptcone20ID1[30]; //
         float mu_muid_ptcone30ID1[30]; //
         float mu_muid_ptcone40ID1[30]; //
         float mu_muid_ptcone50ID1[30]; //
         float mu_muid_ptcone10ID2[30]; //
         float mu_muid_ptcone15ID2[30]; //
         float mu_muid_ptcone20ID2[30]; //
         float mu_muid_ptcone30ID2[30]; //
         float mu_muid_ptcone40ID2[30]; //
         float mu_muid_ptcone50ID2[30]; //
         float mu_muid_ptcone10ID3[30]; //
         float mu_muid_ptcone15ID3[30]; //
         float mu_muid_ptcone20ID3[30]; //
         float mu_muid_ptcone30ID3[30]; //
         float mu_muid_ptcone40ID3[30]; //
         float mu_muid_ptcone50ID3[30]; //
         float mu_muid_ptcone10ID4[30]; //
         float mu_muid_ptcone15ID4[30]; //
         float mu_muid_ptcone20ID4[30]; //
         float mu_muid_ptcone30ID4[30]; //
         float mu_muid_ptcone40ID4[30]; //
         float mu_muid_ptcone50ID4[30]; //
         float mu_muid_ptcone10ID5[30]; //
         float mu_muid_ptcone15ID5[30]; //
         float mu_muid_ptcone20ID5[30]; //
         float mu_muid_ptcone30ID5[30]; //
         float mu_muid_ptcone40ID5[30]; //
         float mu_muid_ptcone50ID5[30]; //
         float mu_muid_ptcone10ID6[30]; //
         float mu_muid_ptcone15ID6[30]; //
         float mu_muid_ptcone20ID6[30]; //
         float mu_muid_ptcone30ID6[30]; //
         float mu_muid_ptcone40ID6[30]; //
         float mu_muid_ptcone50ID6[30]; //
         float totalMuPtCone20ID[30]; //
         float totalMuPtCone30ID[30]; //
         float Mymu_muid_energyLossPar[30]; //
         float Mymu_muid_energyLossErr[30]; //
         float Mymu_muid_etCore[30]; //
         float Mymu_muid_energyLossType[30]; //
         int Mymu_muid_caloMuonIdTag[30]; //
         float Mymu_muid_caloLRLikelihood[30]; //
         int Mymu_muid_bestMatch[30]; //
         int Mymu_muid_isStandAloneMuon[30]; //
         int Mymu_muid_isCombinedMuon[30]; //
         int Mymu_muid_isLowPtReconstructedMuon[30]; //
         int Mymu_muid_isSegmentTaggedMuon[30]; //
         int Mymu_muid_isCaloMuonId[30]; //
         int Mymu_muid_alsoFoundByLowPt[30]; //
         int Mymu_muid_alsoFoundByCaloMuonId[30]; //
         int Mymu_muid_loose[30]; //
         int Mymu_muid_medium[30]; //
         int Mymu_muid_tight[30]; //
         float Mymu_muid_d0_exPV[30]; //
         float Mymu_muid_z0_exPV[30]; //
         float Mymu_muid_phi_exPV[30]; //
         float Mymu_muid_theta_exPV[30]; //
         float Mymu_muid_qoverp_exPV[30]; //
         float Mymu_muid_cb_d0_exPV[30]; //
         float Mymu_muid_cb_z0_exPV[30]; //
         float Mymu_muid_cb_phi_exPV[30]; //
         float Mymu_muid_cb_theta_exPV[30]; //
         float Mymu_muid_cb_qoverp_exPV[30]; //
         float Mymu_muid_id_d0_exPV[30]; //
         float Mymu_muid_id_z0_exPV[30]; //
         float Mymu_muid_id_phi_exPV[30]; //
         float Mymu_muid_id_theta_exPV[30]; //
         float Mymu_muid_id_qoverp_exPV[30]; //
         float Mymu_muid_me_d0_exPV[30]; //
         float Mymu_muid_me_z0_exPV[30]; //
         float Mymu_muid_me_phi_exPV[30]; //
         float Mymu_muid_me_theta_exPV[30]; //
         float Mymu_muid_me_qoverp_exPV[30]; //
         float Mymu_muid_ie_d0_exPV[30]; //
         float Mymu_muid_ie_z0_exPV[30]; //
         float Mymu_muid_ie_phi_exPV[30]; //
         float Mymu_muid_ie_theta_exPV[30]; //
         float Mymu_muid_ie_qoverp_exPV[30]; //
         float Mymu_muid_cov_d0_exPV[30]; //
         float Mymu_muid_cov_z0_exPV[30]; //
         float Mymu_muid_cov_phi_exPV[30]; //
         float Mymu_muid_cov_theta_exPV[30]; //
         float Mymu_muid_cov_qoverp_exPV[30]; //
         float Mymu_muid_cov_d0_z0_exPV[30]; //
         float Mymu_muid_cov_d0_phi_exPV[30]; //
         float Mymu_muid_cov_d0_theta_exPV[30]; //
         float Mymu_muid_cov_d0_qoverp_exPV[30]; //
         float Mymu_muid_cov_z0_phi_exPV[30]; //
         float Mymu_muid_cov_z0_theta_exPV[30]; //
         float Mymu_muid_cov_z0_qoverp_exPV[30]; //
         float Mymu_muid_cov_phi_theta_exPV[30]; //
         float Mymu_muid_cov_phi_qoverp_exPV[30]; //
         float Mymu_muid_cov_theta_qoverp_exPV[30]; //
         float Mymu_muid_id_cov_d0_exPV[30]; //
         float Mymu_muid_id_cov_z0_exPV[30]; //
         float Mymu_muid_id_cov_phi_exPV[30]; //
         float Mymu_muid_id_cov_theta_exPV[30]; //
         float Mymu_muid_id_cov_qoverp_exPV[30]; //
         float Mymu_muid_me_cov_d0_exPV[30]; //
         float Mymu_muid_me_cov_z0_exPV[30]; //
         float Mymu_muid_me_cov_phi_exPV[30]; //
         float Mymu_muid_me_cov_theta_exPV[30]; //
         float Mymu_muid_me_cov_qoverp_exPV[30]; //
         float Mymu_muid_ms_d0[30]; //
         float Mymu_muid_ms_z0[30]; //
         float Mymu_muid_ms_phi[30]; //
         float Mymu_muid_ms_theta[30]; //
         float Mymu_muid_ms_qoverp[30]; //
         float Mymu_muid_id_d0[30]; //
         float Mymu_muid_id_z0[30]; //
         float Mymu_muid_id_phi[30]; //
         float Mymu_muid_id_theta[30]; //
         float Mymu_muid_id_qoverp[30]; //
         float Mymu_muid_me_d0[30]; //
         float Mymu_muid_me_z0[30]; //
         float Mymu_muid_me_phi[30]; //
         float Mymu_muid_me_theta[30]; //
         float Mymu_muid_me_qoverp[30]; //
         float Mymu_muid_ie_d0[30]; //
         float Mymu_muid_ie_z0[30]; //
         float Mymu_muid_ie_phi[30]; //
         float Mymu_muid_ie_theta[30]; //
         float Mymu_muid_ie_qoverp[30]; //
         int Mymu_muid_nOutliersOnTrack[30]; //
         int Mymu_muid_nBLHits[30]; //
         int Mymu_muid_nPixHits[30]; //
         int Mymu_muid_nSCTHits[30]; //
         int Mymu_muid_nTRTHits[30]; //
         int Mymu_muid_nTRTHighTHits[30]; //
         int Mymu_muid_nBLSharedHits[30]; //
         int Mymu_muid_nPixSharedHits[30]; //
         int Mymu_muid_nPixHoles[30]; //
         int Mymu_muid_nSCTSharedHits[30]; //
         int Mymu_muid_nSCTHoles[30]; //
         int Mymu_muid_nTRTOutliers[30]; //
         int Mymu_muid_nTRTHighTOutliers[30]; //
         int Mymu_muid_nGangedPixels[30]; //
         int Mymu_muid_nPixelDeadSensors[30]; //
         int Mymu_muid_nSCTDeadSensors[30]; //
         int Mymu_muid_nTRTDeadStraws[30]; //
         int Mymu_muid_expectBLayerHit[30]; //
         int Mymu_muid_nMDTHits[30]; //
         int Mymu_muid_nMDTHoles[30]; //
         int Mymu_muid_nCSCEtaHits[30]; //
         int Mymu_muid_nCSCEtaHoles[30]; //
         int Mymu_muid_nCSCPhiHits[30]; //
         int Mymu_muid_nCSCPhiHoles[30]; //
         int Mymu_muid_nRPCEtaHits[30]; //
         int Mymu_muid_nRPCEtaHoles[30]; //
         int Mymu_muid_nRPCPhiHits[30]; //
         int Mymu_muid_nRPCPhiHoles[30]; //
         int Mymu_muid_nTGCEtaHits[30]; //
         int Mymu_muid_nTGCEtaHoles[30]; //
         int Mymu_muid_nTGCPhiHits[30]; //
         int Mymu_muid_nTGCPhiHoles[30]; //
         int Mymu_muid_nMDTBIHits[30]; //
         int Mymu_muid_nMDTBMHits[30]; //
         int Mymu_muid_nMDTBOHits[30]; //
         int Mymu_muid_nMDTBEEHits[30]; //
         int Mymu_muid_nMDTBIS78Hits[30]; //
         int Mymu_muid_nMDTEIHits[30]; //
         int Mymu_muid_nMDTEMHits[30]; //
         int Mymu_muid_nMDTEOHits[30]; //
         int Mymu_muid_nMDTEEHits[30]; //
         int Mymu_muid_nRPCLayer1EtaHits[30]; //
         int Mymu_muid_nRPCLayer2EtaHits[30]; //
         int Mymu_muid_nRPCLayer3EtaHits[30]; //
         int Mymu_muid_nRPCLayer1PhiHits[30]; //
         int Mymu_muid_nRPCLayer2PhiHits[30]; //
         int Mymu_muid_nRPCLayer3PhiHits[30]; //
         int Mymu_muid_nTGCLayer1EtaHits[30]; //
         int Mymu_muid_nTGCLayer2EtaHits[30]; //
         int Mymu_muid_nTGCLayer3EtaHits[30]; //
         int Mymu_muid_nTGCLayer4EtaHits[30]; //
         int Mymu_muid_nTGCLayer1PhiHits[30]; //
         int Mymu_muid_nTGCLayer2PhiHits[30]; //
         int Mymu_muid_nTGCLayer3PhiHits[30]; //
         int Mymu_muid_nTGCLayer4PhiHits[30]; //
         int Mymu_muid_barrelSectors[30]; //
         int Mymu_muid_endcapSectors[30]; //
         float Mymu_muid_trackd0[30]; //
         float Mymu_muid_trackz0[30]; //
         float Mymu_muid_trackphi[30]; //
         float Mymu_muid_tracktheta[30]; //
         float Mymu_muid_trackqoverp[30]; //
         float Mymu_muid_trackcov_d0[30]; //
         float Mymu_muid_trackcov_z0[30]; //
         float Mymu_muid_trackcov_phi[30]; //
         float Mymu_muid_trackcov_theta[30]; //
         float Mymu_muid_trackcov_qoverp[30]; //
         float Mymu_muid_trackcov_d0_z0[30]; //
         float Mymu_muid_trackcov_d0_phi[30]; //
         float Mymu_muid_trackcov_d0_theta[30]; //
         float Mymu_muid_trackcov_d0_qoverp[30]; //
         float Mymu_muid_trackcov_z0_phi[30]; //
         float Mymu_muid_trackcov_z0_theta[30]; //
         float Mymu_muid_trackcov_z0_qoverp[30]; //
         float Mymu_muid_trackcov_phi_theta[30]; //
         float Mymu_muid_trackcov_phi_qoverp[30]; //
         float Mymu_muid_trackcov_theta_qoverp[30]; //
         float Mymu_muid_trackfitchi2[30]; //
         int Mymu_muid_trackfitndof[30]; //
         int Mymu_muid_hastrack[30]; //
         float Mymu_muid_trackd0beam[30]; //
         float Mymu_muid_trackz0beam[30]; //
         float Mymu_muid_tracksigd0beam[30]; //
         float Mymu_muid_tracksigz0beam[30]; //
         float Mymu_muid_trackd0pv[30]; //
         float Mymu_muid_trackz0pv[30]; //
         float Mymu_muid_tracksigd0pv[30]; //
         float Mymu_muid_tracksigz0pv[30]; //
         float Mymu_muid_trackIPEstimate_d0_biasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_z0_biasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_sigd0_biasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_sigz0_biasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_d0_unbiasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_z0_unbiasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased[30]; //
         float Mymu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased[30]; //
         float Mymu_muid_trackd0pvunbiased[30]; //
         float Mymu_muid_trackz0pvunbiased[30]; //
         float Mymu_muid_tracksigd0pvunbiased[30]; //
         float Mymu_muid_tracksigz0pvunbiased[30]; //
         int Mytrig_EF_trigmuonef_n; //
         int Mytrig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]; //
         int Mytrig_EF_trigmuonef_EF_mu4_L1VTE50[30]; //
         int Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]; //
         int Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]; //
         int Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]; //
         int Mytrig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]; //
         int Mytrig_EF_trigmuonef_EF_mu8[30]; //
         int Mytrig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]; //
         int Mytrig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]; //
         int Mytrig_EF_trigmuonef_track_n[30]; //
         vector< int > Mytrig_EF_trigmuonef_track_MS_hasMS_one; //
         vector< vector< int, allocator< int >  >  >* Mytrig_EF_trigmuonef_track_MS_hasMS; //
         vector< float > Mytrig_EF_trigmuonef_track_MS_phi_one; //
         vector< vector< float, allocator< float >  >  >* Mytrig_EF_trigmuonef_track_MS_phi; //
         vector< float > Mytrig_EF_trigmuonef_track_MS_eta_one; //
         vector< vector< float, allocator< float >  >  >* Mytrig_EF_trigmuonef_track_MS_eta; //
         int Mymu_muid_EFME_n_tot; //
         int Mymu_muid_EFCB_n_tot; //
         int Mymu_muid_EFMG_n_tot; //
         float Mymu_muid_EFCB_dr[30]; //
         int Mymu_muid_EFCB_n[30]; //
         int Mymu_muid_EFCB_MuonType[900]; //
         float Mymu_muid_EFCB_pt[900]; //
         float Mymu_muid_EFCB_eta[900]; //
         float Mymu_muid_EFCB_phi[900]; //
         int Mymu_muid_EFCB_hasCB[900]; //
         int Mymu_muid_EFCB_matched[30]; //
         float Mymu_muid_EFMG_dr[30]; //
         int Mymu_muid_EFMG_n[30]; //
         int Mymu_muid_EFMG_MuonType[900]; //
         float Mymu_muid_EFMG_pt[900]; //
         float Mymu_muid_EFMG_eta[900]; //
         float Mymu_muid_EFMG_phi[900]; //
         int Mymu_muid_EFMG_hasMG[900]; //
         int Mymu_muid_EFMG_matched[30]; //
         float Mymu_muid_EFME_dr[30]; //
         int Mymu_muid_EFME_n[30]; //
         int Mymu_muid_EFME_MuonType[900]; //
         float Mymu_muid_EFME_pt[900]; //
         float Mymu_muid_EFME_eta[900]; //
         float Mymu_muid_EFME_phi[900]; //
         int Mymu_muid_EFME_hasME[900]; //
         int Mymu_muid_EFME_matched[30]; //
         float Mymu_muid_L2CB_dr[30]; //
         float Mymu_muid_L2CB_pt[30]; //
         float Mymu_muid_L2CB_eta[30]; //
         float Mymu_muid_L2CB_phi[30]; //
         float Mymu_muid_L2CB_id_pt[30]; //
         float Mymu_muid_L2CB_ms_pt[30]; //
         int Mymu_muid_L2CB_nPixHits[30]; //
         int Mymu_muid_L2CB_nSCTHits[30]; //
         int Mymu_muid_L2CB_nTRTHits[30]; //
         int Mymu_muid_L2CB_nTRTHighTHits[30]; //
         int Mymu_muid_L2CB_matched[30]; //
         float Mymu_muid_L1_dr[30]; //
         float Mymu_muid_L1_pt[30]; //
         float Mymu_muid_L1_eta[30]; //
         float Mymu_muid_L1_phi[30]; //
         int Mymu_muid_L1_thrNumber[30]; //
         int Mymu_muid_L1_RoINumber[30]; //
         int Mymu_muid_L1_sectorAddress[30]; //
         int Mymu_muid_L1_firstCandidate[30]; //
         int Mymu_muid_L1_moreCandInRoI[30]; //
         int Mymu_muid_L1_moreCandInSector[30]; //
         int Mymu_muid_L1_source[30]; //
         int Mymu_muid_L1_hemisphere[30]; //
         int Mymu_muid_L1_charge[30]; //
         int Mymu_muid_L1_vetoed[30]; //
         int Mymu_muid_L1_matched[30]; //
         int Mymuid_nScatters[30]; //
         float Mymuid_scatSignificance[30]; //
         float Mymuid_neighbourSignificance[30]; //
         float Mymuid_eta[30]; //
         int isGoodMuon[30]; //
         int isGoodDiMuonOS[900]; //
         int isGoodDiMuonSS[900]; //
         int dimuid_indexOS1[900]; //
         int dimuid_indexOS2[900]; //
         int dimuid_indexSS1[900]; //
         int dimuid_indexSS2[900]; //
         int isGoodMuon2[30]; //
         int Myantikt2HIItrEM_n; //
         float Myantikt2HIItrEM_E[500]; //
         float Myantikt2HIItrEM_pt[500]; //
         float Myantikt2HIItrEM_m[500]; //
         float Myantikt2HIItrEM_eta[500]; //
         float Myantikt2HIItrEM_phi[500]; //
         float Myantikt2HIItrEM_MaxOverMean[500]; //
         float Myantikt2HIItrEM_MeanTowerEt[500]; //
         float Myantikt2HIItrEM_SubtractedEt[500]; //
         float Myantikt2HIItrEM_RMSTowerEt[500]; //
         float Myantikt2HIItrEM_GausEt[500]; //
         float Myantikt2HIItrEM_SelfEnergy[500]; //
         float Myantikt2HIItrEM_SumJt[500]; //
         float Myantikt2HIItrEM_CoreEt[500]; //
         float Myantikt2HIItrEM_EdgeEt[500]; //
         float Myantikt2HIItrEM_CryoCorr[500]; //
         float Myantikt2HIItrEM_NoFlow[500]; //
         float Myantikt2HIItrEM_NumConstituents[500]; //
         float Myantikt2HIItrEM_UncalibEt[500]; //
         float Myantikt2HIItrEM_Discriminant[500]; //
         float Myantikt2HIItrEM_MeanTowerEtUnsubtr[500]; //
         float Myantikt2HIItrEM_n90[500]; //
         float Myantikt2HIItrEM_fracSamplingMax[500]; //
         float Myantikt2HIItrEM_SamplingMax[500]; //
         float Myantikt2HIItrEM_n90constituents[500]; //
         float Myantikt2HIItrEM_Timing[500]; //
         float Myantikt2HIItrEM_LArQuality[500]; //
         float Myantikt2HIItrEM_HECQuality[500]; //
         float Myantikt2HIItrEM_TileQuality[500]; //
         int Myantikt3HIItrEM_n; //
         float Myantikt3HIItrEM_E[500]; //
         float Myantikt3HIItrEM_pt[500]; //
         float Myantikt3HIItrEM_m[500]; //
         float Myantikt3HIItrEM_eta[500]; //
         float Myantikt3HIItrEM_phi[500]; //
         float Myantikt3HIItrEM_MaxOverMean[500]; //
         float Myantikt3HIItrEM_MeanTowerEt[500]; //
         float Myantikt3HIItrEM_SubtractedEt[500]; //
         float Myantikt3HIItrEM_RMSTowerEt[500]; //
         float Myantikt3HIItrEM_GausEt[500]; //
         float Myantikt3HIItrEM_SelfEnergy[500]; //
         float Myantikt3HIItrEM_SumJt[500]; //
         float Myantikt3HIItrEM_CoreEt[500]; //
         float Myantikt3HIItrEM_EdgeEt[500]; //
         float Myantikt3HIItrEM_CryoCorr[500]; //
         float Myantikt3HIItrEM_NoFlow[500]; //
         float Myantikt3HIItrEM_NumConstituents[500]; //
         float Myantikt3HIItrEM_UncalibEt[500]; //
         float Myantikt3HIItrEM_Discriminant[500]; //
         float Myantikt3HIItrEM_MeanTowerEtUnsubtr[500]; //
         float Myantikt3HIItrEM_n90[500]; //
         float Myantikt3HIItrEM_fracSamplingMax[500]; //
         float Myantikt3HIItrEM_SamplingMax[500]; //
         float Myantikt3HIItrEM_n90constituents[500]; //
         float Myantikt3HIItrEM_Timing[500]; //
         float Myantikt3HIItrEM_LArQuality[500]; //
         float Myantikt3HIItrEM_HECQuality[500]; //
         float Myantikt3HIItrEM_TileQuality[500]; //
         int Myantikt2Truth_n; //
         float Myantikt2Truth_E[500]; //
         float Myantikt2Truth_pt[500]; //
         float Myantikt2Truth_m[500]; //
         float Myantikt2Truth_eta[500]; //
         float Myantikt2Truth_phi[500]; //
         int MyAntiKt4TopoEM_n; //
         float MyAntiKt4TopoEM_E[500]; //
         float MyAntiKt4TopoEM_pt[500]; //
         float MyAntiKt4TopoEM_m[500]; //
         float MyAntiKt4TopoEM_eta[500]; //
         float MyAntiKt4TopoEM_phi[500]; //
         float MyAntiKt4TopoEM_EtaOrigin[500]; //
         float MyAntiKt4TopoEM_PhiOrigin[500]; //
         float MyAntiKt4TopoEM_MOrigin[500]; //
         float MyAntiKt4TopoEM_EtaOriginEM[500]; //
         float MyAntiKt4TopoEM_PhiOriginEM[500]; //
         float MyAntiKt4TopoEM_MOriginEM[500]; //
         float MyAntiKt4TopoEM_WIDTH[500]; //
         float MyAntiKt4TopoEM_n90[500]; //
         float MyAntiKt4TopoEM_Timing[500]; //
         float MyAntiKt4TopoEM_LArQuality[500]; //
         float MyAntiKt4TopoEM_nTrk[500]; //
         float MyAntiKt4TopoEM_sumPtTrk[500]; //
         float MyAntiKt4TopoEM_OriginIndex[500]; //
         float MyAntiKt4TopoEM_HECQuality[500]; //
         float MyAntiKt4TopoEM_NegativeE[500]; //
         float MyAntiKt4TopoEM_AverageLArQF[500]; //
         float MyAntiKt4TopoEM_YFlip12[500]; //
         float MyAntiKt4TopoEM_YFlip23[500]; //
         float MyAntiKt4TopoEM_BCH_CORR_CELL[500]; //
         float MyAntiKt4TopoEM_BCH_CORR_DOTX[500]; //
         float MyAntiKt4TopoEM_BCH_CORR_JET[500]; //
         float MyAntiKt4TopoEM_BCH_CORR_JET_FORCELL[500]; //
         float MyAntiKt4TopoEM_ENG_BAD_CELLS[500]; //
         float MyAntiKt4TopoEM_N_BAD_CELLS[500]; //
         float MyAntiKt4TopoEM_N_BAD_CELLS_CORR[500]; //
         float MyAntiKt4TopoEM_BAD_CELLS_CORR_E[500]; //
         float MyAntiKt4TopoEM_NumTowers[500]; //
         float MyAntiKt4TopoEM_ootFracCells5[500]; //
         float MyAntiKt4TopoEM_ootFracCells10[500]; //
         float MyAntiKt4TopoEM_ootFracClusters5[500]; //
         float MyAntiKt4TopoEM_ootFracClusters10[500]; //
         int MyAntiKt4TopoEM_SamplingMax[500]; //
         float MyAntiKt4TopoEM_fracSamplingMax[500]; //
         float MyAntiKt4TopoEM_hecf[500]; //
         float MyAntiKt4TopoEM_tgap3f[500]; //
         int MyAntiKt4TopoEM_isUgly[500]; //
         int MyAntiKt4TopoEM_isBadLooseMinus[500]; //
         int MyAntiKt4TopoEM_isBadLoose[500]; //
         int MyAntiKt4TopoEM_isBadMedium[500]; //
         int MyAntiKt4TopoEM_isBadTight[500]; //
         float MyAntiKt4TopoEM_emfrac[500]; //
         float MyAntiKt4TopoEM_Offset[500]; //
         float MyAntiKt4TopoEM_EMJES[500]; //
         float MyAntiKt4TopoEM_EMJES_EtaCorr[500]; //
         float MyAntiKt4TopoEM_EMJESnooffset[500]; //
         float MyAntiKt4TopoEM_GCWJES[500]; //
         float MyAntiKt4TopoEM_GCWJES_EtaCorr[500]; //
         float MyAntiKt4TopoEM_CB[500]; //
         float MyAntiKt4TopoEM_LCJES[500]; //
         float MyAntiKt4TopoEM_emscale_E[500]; //
         float MyAntiKt4TopoEM_emscale_pt[500]; //
         float MyAntiKt4TopoEM_emscale_m[500]; //
         float MyAntiKt4TopoEM_emscale_eta[500]; //
         float MyAntiKt4TopoEM_emscale_phi[500]; //
         float MyAntiKt4TopoEM_jvtx_x[500]; //
         float MyAntiKt4TopoEM_jvtx_y[500]; //
         float MyAntiKt4TopoEM_jvtx_z[500]; //
         float MyAntiKt4TopoEM_jvtxf[500]; //
         float MyAntiKt4TopoEM_GSCFactorF[500]; //
         float MyAntiKt4TopoEM_WidthFraction[500]; //
         float MyAntiKt4TopoEM_e_PreSamplerB[500]; //
         float MyAntiKt4TopoEM_e_EMB1[500]; //
         float MyAntiKt4TopoEM_e_EMB2[500]; //
         float MyAntiKt4TopoEM_e_EMB3[500]; //
         float MyAntiKt4TopoEM_e_PreSamplerE[500]; //
         float MyAntiKt4TopoEM_e_EME1[500]; //
         float MyAntiKt4TopoEM_e_EME2[500]; //
         float MyAntiKt4TopoEM_e_EME3[500]; //
         float MyAntiKt4TopoEM_e_HEC0[500]; //
         float MyAntiKt4TopoEM_e_HEC1[500]; //
         float MyAntiKt4TopoEM_e_HEC2[500]; //
         float MyAntiKt4TopoEM_e_HEC3[500]; //
         float MyAntiKt4TopoEM_e_TileBar0[500]; //
         float MyAntiKt4TopoEM_e_TileBar1[500]; //
         float MyAntiKt4TopoEM_e_TileBar2[500]; //
         float MyAntiKt4TopoEM_e_TileGap1[500]; //
         float MyAntiKt4TopoEM_e_TileGap2[500]; //
         float MyAntiKt4TopoEM_e_TileGap3[500]; //
         float MyAntiKt4TopoEM_e_TileExt0[500]; //
         float MyAntiKt4TopoEM_e_TileExt1[500]; //
         float MyAntiKt4TopoEM_e_TileExt2[500]; //
         float MyAntiKt4TopoEM_e_FCAL0[500]; //
         float MyAntiKt4TopoEM_e_FCAL1[500]; //
         float MyAntiKt4TopoEM_e_FCAL2[500]; //
         int MyAntiKt4TopoEM_Nconst[500]; //
         float MyAntiKt4TopoEM_constscale_E[500]; //
         float MyAntiKt4TopoEM_constscale_pt[500]; //
         float MyAntiKt4TopoEM_constscale_m[500]; //
         float MyAntiKt4TopoEM_constscale_eta[500]; //
         float MyAntiKt4TopoEM_constscale_phi[500]; //
         float MyAntiKt4TopoEM_el_dr[500]; //
         int MyAntiKt4TopoEM_el_matched[500]; //
         float MyAntiKt4TopoEM_mu_dr[500]; //
         int MyAntiKt4TopoEM_mu_matched[500]; //
         float MyAntiKt4TopoEM_L1_dr[500]; //
         int MyAntiKt4TopoEM_L1_matched[500]; //
         float MyAntiKt4TopoEM_L2_dr[500]; //
         int MyAntiKt4TopoEM_L2_matched[500]; //
         float MyAntiKt4TopoEM_EF_dr[500]; //
         int MyAntiKt4TopoEM_EF_matched[500]; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MuonBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonBranch_Dictionary();
   static void *new_MuonBranch(void *p = 0);
   static void *newArray_MuonBranch(Long_t size, void *p);
   static void delete_MuonBranch(void *p);
   static void deleteArray_MuonBranch(void *p);
   static void destruct_MuonBranch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonBranch*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonBranch) == sizeof(::ROOT::Shadow::MuonBranch));
      ::MuonBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonBranch),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonBranch", "./MuonBranch.h", 21,
                  typeid(::MuonBranch), DefineBehavior(ptr, ptr),
                  &MuonBranch_ShowMembers, &MuonBranch_Dictionary, isa_proxy, 4,
                  sizeof(::MuonBranch) );
      instance.SetNew(&new_MuonBranch);
      instance.SetNewArray(&newArray_MuonBranch);
      instance.SetDelete(&delete_MuonBranch);
      instance.SetDeleteArray(&deleteArray_MuonBranch);
      instance.SetDestructor(&destruct_MuonBranch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonBranch*)
   {
      return GenerateInitInstanceLocal((::MuonBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonBranch_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonBranch*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void MuonBranch_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonBranch.
      typedef ::ROOT::Shadow::MuonBranch ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonBranch*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_n", &sobj->Mymu_muid_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muid_npairs", &sobj->muid_npairs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_dr[30]", sobj->Mymu_muid_truth_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_E[30]", sobj->Mymu_muid_truth_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_pt[30]", sobj->Mymu_muid_truth_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_eta[30]", sobj->Mymu_muid_truth_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_phi[30]", sobj->Mymu_muid_truth_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_type[30]", sobj->Mymu_muid_truth_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_status[30]", sobj->Mymu_muid_truth_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_barcode[30]", sobj->Mymu_muid_truth_barcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_mothertype[30]", sobj->Mymu_muid_truth_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_motherbarcode[30]", sobj->Mymu_muid_truth_motherbarcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_truth_matched[30]", sobj->Mymu_muid_truth_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_E[30]", sobj->Mymu_muid_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_pt[30]", sobj->Mymu_muid_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_m[30]", sobj->Mymu_muid_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_eta[30]", sobj->Mymu_muid_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_phi[30]", sobj->Mymu_muid_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_px[30]", sobj->Mymu_muid_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_invMass[30]", sobj->Mymuid_invMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_massCB[900]", sobj->Mymuid_massCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_massCBSS[900]", sobj->Mymuid_massCBSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_massCBOS[900]", sobj->Mymuid_massCBOS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vecsinglemuid_massCBOS", &sobj->Vecsinglemuid_massCBOS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IDprobe", &sobj->IDprobe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MSprobe", &sobj->MSprobe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Vecsinglemuid_massCBOS_one", (void*)&sobj->Vecsinglemuid_massCBOS_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->Vecsinglemuid_massCBOS_one, "Vecsinglemuid_massCBOS_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IDprobe_one", (void*)&sobj->IDprobe_one);
      R__insp.InspectMember("vector<int>", (void*)&sobj->IDprobe_one, "IDprobe_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MSprobe_one", (void*)&sobj->MSprobe_one);
      R__insp.InspectMember("vector<int>", (void*)&sobj->MSprobe_one, "MSprobe_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_py[30]", sobj->Mymu_muid_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_pz[30]", sobj->Mymu_muid_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_charge[30]", sobj->Mymu_muid_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_allauthor[30]", sobj->Mymu_muid_allauthor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_author[30]", sobj->Mymu_muid_author);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_beta[30]", sobj->Mymu_muid_beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isMuonLikelihood[30]", sobj->Mymu_muid_isMuonLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_matchchi2[30]", sobj->Mymu_muid_matchchi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_matchndof[30]", sobj->Mymu_muid_matchndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_etcone20[30]", sobj->Mymu_muid_etcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_etcone30[30]", sobj->Mymu_muid_etcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_etcone40[30]", sobj->Mymu_muid_etcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nucone20[30]", sobj->Mymu_muid_nucone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nucone30[30]", sobj->Mymu_muid_nucone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nucone40[30]", sobj->Mymu_muid_nucone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ptcone20[30]", sobj->Mymu_muid_ptcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ptcone30[30]", sobj->Mymu_muid_ptcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ptcone40[30]", sobj->Mymu_muid_ptcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID05[30]", sobj->mu_muid_ptcone10ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID05[30]", sobj->mu_muid_ptcone15ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID05[30]", sobj->mu_muid_ptcone20ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID05[30]", sobj->mu_muid_ptcone30ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID05[30]", sobj->mu_muid_ptcone40ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID05[30]", sobj->mu_muid_ptcone50ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID075[30]", sobj->mu_muid_ptcone10ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID075[30]", sobj->mu_muid_ptcone15ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID075[30]", sobj->mu_muid_ptcone20ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID075[30]", sobj->mu_muid_ptcone30ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID075[30]", sobj->mu_muid_ptcone40ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID075[30]", sobj->mu_muid_ptcone50ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID1[30]", sobj->mu_muid_ptcone10ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID1[30]", sobj->mu_muid_ptcone15ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID1[30]", sobj->mu_muid_ptcone20ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID1[30]", sobj->mu_muid_ptcone30ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID1[30]", sobj->mu_muid_ptcone40ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID1[30]", sobj->mu_muid_ptcone50ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID2[30]", sobj->mu_muid_ptcone10ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID2[30]", sobj->mu_muid_ptcone15ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID2[30]", sobj->mu_muid_ptcone20ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID2[30]", sobj->mu_muid_ptcone30ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID2[30]", sobj->mu_muid_ptcone40ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID2[30]", sobj->mu_muid_ptcone50ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID3[30]", sobj->mu_muid_ptcone10ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID3[30]", sobj->mu_muid_ptcone15ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID3[30]", sobj->mu_muid_ptcone20ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID3[30]", sobj->mu_muid_ptcone30ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID3[30]", sobj->mu_muid_ptcone40ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID3[30]", sobj->mu_muid_ptcone50ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID4[30]", sobj->mu_muid_ptcone10ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID4[30]", sobj->mu_muid_ptcone15ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID4[30]", sobj->mu_muid_ptcone20ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID4[30]", sobj->mu_muid_ptcone30ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID4[30]", sobj->mu_muid_ptcone40ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID4[30]", sobj->mu_muid_ptcone50ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID5[30]", sobj->mu_muid_ptcone10ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID5[30]", sobj->mu_muid_ptcone15ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID5[30]", sobj->mu_muid_ptcone20ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID5[30]", sobj->mu_muid_ptcone30ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID5[30]", sobj->mu_muid_ptcone40ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID5[30]", sobj->mu_muid_ptcone50ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID6[30]", sobj->mu_muid_ptcone10ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID6[30]", sobj->mu_muid_ptcone15ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID6[30]", sobj->mu_muid_ptcone20ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID6[30]", sobj->mu_muid_ptcone30ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID6[30]", sobj->mu_muid_ptcone40ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID6[30]", sobj->mu_muid_ptcone50ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalMuPtCone20ID[30]", sobj->totalMuPtCone20ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalMuPtCone30ID[30]", sobj->totalMuPtCone30ID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_energyLossPar[30]", sobj->Mymu_muid_energyLossPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_energyLossErr[30]", sobj->Mymu_muid_energyLossErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_etCore[30]", sobj->Mymu_muid_etCore);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_energyLossType[30]", sobj->Mymu_muid_energyLossType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_caloMuonIdTag[30]", sobj->Mymu_muid_caloMuonIdTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_caloLRLikelihood[30]", sobj->Mymu_muid_caloLRLikelihood);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_bestMatch[30]", sobj->Mymu_muid_bestMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isStandAloneMuon[30]", sobj->Mymu_muid_isStandAloneMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isCombinedMuon[30]", sobj->Mymu_muid_isCombinedMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isLowPtReconstructedMuon[30]", sobj->Mymu_muid_isLowPtReconstructedMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isSegmentTaggedMuon[30]", sobj->Mymu_muid_isSegmentTaggedMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_isCaloMuonId[30]", sobj->Mymu_muid_isCaloMuonId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_alsoFoundByLowPt[30]", sobj->Mymu_muid_alsoFoundByLowPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_alsoFoundByCaloMuonId[30]", sobj->Mymu_muid_alsoFoundByCaloMuonId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_loose[30]", sobj->Mymu_muid_loose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_medium[30]", sobj->Mymu_muid_medium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tight[30]", sobj->Mymu_muid_tight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_d0_exPV[30]", sobj->Mymu_muid_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_z0_exPV[30]", sobj->Mymu_muid_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_phi_exPV[30]", sobj->Mymu_muid_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_theta_exPV[30]", sobj->Mymu_muid_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_qoverp_exPV[30]", sobj->Mymu_muid_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cb_d0_exPV[30]", sobj->Mymu_muid_cb_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cb_z0_exPV[30]", sobj->Mymu_muid_cb_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cb_phi_exPV[30]", sobj->Mymu_muid_cb_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cb_theta_exPV[30]", sobj->Mymu_muid_cb_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cb_qoverp_exPV[30]", sobj->Mymu_muid_cb_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_d0_exPV[30]", sobj->Mymu_muid_id_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_z0_exPV[30]", sobj->Mymu_muid_id_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_phi_exPV[30]", sobj->Mymu_muid_id_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_theta_exPV[30]", sobj->Mymu_muid_id_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_qoverp_exPV[30]", sobj->Mymu_muid_id_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_d0_exPV[30]", sobj->Mymu_muid_me_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_z0_exPV[30]", sobj->Mymu_muid_me_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_phi_exPV[30]", sobj->Mymu_muid_me_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_theta_exPV[30]", sobj->Mymu_muid_me_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_qoverp_exPV[30]", sobj->Mymu_muid_me_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_d0_exPV[30]", sobj->Mymu_muid_ie_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_z0_exPV[30]", sobj->Mymu_muid_ie_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_phi_exPV[30]", sobj->Mymu_muid_ie_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_theta_exPV[30]", sobj->Mymu_muid_ie_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_qoverp_exPV[30]", sobj->Mymu_muid_ie_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_d0_exPV[30]", sobj->Mymu_muid_cov_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_z0_exPV[30]", sobj->Mymu_muid_cov_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_phi_exPV[30]", sobj->Mymu_muid_cov_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_theta_exPV[30]", sobj->Mymu_muid_cov_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_qoverp_exPV[30]", sobj->Mymu_muid_cov_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_d0_z0_exPV[30]", sobj->Mymu_muid_cov_d0_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_d0_phi_exPV[30]", sobj->Mymu_muid_cov_d0_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_d0_theta_exPV[30]", sobj->Mymu_muid_cov_d0_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_d0_qoverp_exPV[30]", sobj->Mymu_muid_cov_d0_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_z0_phi_exPV[30]", sobj->Mymu_muid_cov_z0_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_z0_theta_exPV[30]", sobj->Mymu_muid_cov_z0_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_z0_qoverp_exPV[30]", sobj->Mymu_muid_cov_z0_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_phi_theta_exPV[30]", sobj->Mymu_muid_cov_phi_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_phi_qoverp_exPV[30]", sobj->Mymu_muid_cov_phi_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_cov_theta_qoverp_exPV[30]", sobj->Mymu_muid_cov_theta_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_cov_d0_exPV[30]", sobj->Mymu_muid_id_cov_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_cov_z0_exPV[30]", sobj->Mymu_muid_id_cov_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_cov_phi_exPV[30]", sobj->Mymu_muid_id_cov_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_cov_theta_exPV[30]", sobj->Mymu_muid_id_cov_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_cov_qoverp_exPV[30]", sobj->Mymu_muid_id_cov_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_cov_d0_exPV[30]", sobj->Mymu_muid_me_cov_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_cov_z0_exPV[30]", sobj->Mymu_muid_me_cov_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_cov_phi_exPV[30]", sobj->Mymu_muid_me_cov_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_cov_theta_exPV[30]", sobj->Mymu_muid_me_cov_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_cov_qoverp_exPV[30]", sobj->Mymu_muid_me_cov_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ms_d0[30]", sobj->Mymu_muid_ms_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ms_z0[30]", sobj->Mymu_muid_ms_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ms_phi[30]", sobj->Mymu_muid_ms_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ms_theta[30]", sobj->Mymu_muid_ms_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ms_qoverp[30]", sobj->Mymu_muid_ms_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_d0[30]", sobj->Mymu_muid_id_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_z0[30]", sobj->Mymu_muid_id_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_phi[30]", sobj->Mymu_muid_id_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_theta[30]", sobj->Mymu_muid_id_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_id_qoverp[30]", sobj->Mymu_muid_id_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_d0[30]", sobj->Mymu_muid_me_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_z0[30]", sobj->Mymu_muid_me_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_phi[30]", sobj->Mymu_muid_me_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_theta[30]", sobj->Mymu_muid_me_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_me_qoverp[30]", sobj->Mymu_muid_me_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_d0[30]", sobj->Mymu_muid_ie_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_z0[30]", sobj->Mymu_muid_ie_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_phi[30]", sobj->Mymu_muid_ie_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_theta[30]", sobj->Mymu_muid_ie_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_ie_qoverp[30]", sobj->Mymu_muid_ie_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nOutliersOnTrack[30]", sobj->Mymu_muid_nOutliersOnTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nBLHits[30]", sobj->Mymu_muid_nBLHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nPixHits[30]", sobj->Mymu_muid_nPixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nSCTHits[30]", sobj->Mymu_muid_nSCTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTRTHits[30]", sobj->Mymu_muid_nTRTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTRTHighTHits[30]", sobj->Mymu_muid_nTRTHighTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nBLSharedHits[30]", sobj->Mymu_muid_nBLSharedHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nPixSharedHits[30]", sobj->Mymu_muid_nPixSharedHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nPixHoles[30]", sobj->Mymu_muid_nPixHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nSCTSharedHits[30]", sobj->Mymu_muid_nSCTSharedHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nSCTHoles[30]", sobj->Mymu_muid_nSCTHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTRTOutliers[30]", sobj->Mymu_muid_nTRTOutliers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTRTHighTOutliers[30]", sobj->Mymu_muid_nTRTHighTOutliers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nGangedPixels[30]", sobj->Mymu_muid_nGangedPixels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nPixelDeadSensors[30]", sobj->Mymu_muid_nPixelDeadSensors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nSCTDeadSensors[30]", sobj->Mymu_muid_nSCTDeadSensors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTRTDeadStraws[30]", sobj->Mymu_muid_nTRTDeadStraws);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_expectBLayerHit[30]", sobj->Mymu_muid_expectBLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTHits[30]", sobj->Mymu_muid_nMDTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTHoles[30]", sobj->Mymu_muid_nMDTHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nCSCEtaHits[30]", sobj->Mymu_muid_nCSCEtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nCSCEtaHoles[30]", sobj->Mymu_muid_nCSCEtaHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nCSCPhiHits[30]", sobj->Mymu_muid_nCSCPhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nCSCPhiHoles[30]", sobj->Mymu_muid_nCSCPhiHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCEtaHits[30]", sobj->Mymu_muid_nRPCEtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCEtaHoles[30]", sobj->Mymu_muid_nRPCEtaHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCPhiHits[30]", sobj->Mymu_muid_nRPCPhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCPhiHoles[30]", sobj->Mymu_muid_nRPCPhiHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCEtaHits[30]", sobj->Mymu_muid_nTGCEtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCEtaHoles[30]", sobj->Mymu_muid_nTGCEtaHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCPhiHits[30]", sobj->Mymu_muid_nTGCPhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCPhiHoles[30]", sobj->Mymu_muid_nTGCPhiHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTBIHits[30]", sobj->Mymu_muid_nMDTBIHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTBMHits[30]", sobj->Mymu_muid_nMDTBMHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTBOHits[30]", sobj->Mymu_muid_nMDTBOHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTBEEHits[30]", sobj->Mymu_muid_nMDTBEEHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTBIS78Hits[30]", sobj->Mymu_muid_nMDTBIS78Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTEIHits[30]", sobj->Mymu_muid_nMDTEIHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTEMHits[30]", sobj->Mymu_muid_nMDTEMHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTEOHits[30]", sobj->Mymu_muid_nMDTEOHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nMDTEEHits[30]", sobj->Mymu_muid_nMDTEEHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer1EtaHits[30]", sobj->Mymu_muid_nRPCLayer1EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer2EtaHits[30]", sobj->Mymu_muid_nRPCLayer2EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer3EtaHits[30]", sobj->Mymu_muid_nRPCLayer3EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer1PhiHits[30]", sobj->Mymu_muid_nRPCLayer1PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer2PhiHits[30]", sobj->Mymu_muid_nRPCLayer2PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nRPCLayer3PhiHits[30]", sobj->Mymu_muid_nRPCLayer3PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer1EtaHits[30]", sobj->Mymu_muid_nTGCLayer1EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer2EtaHits[30]", sobj->Mymu_muid_nTGCLayer2EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer3EtaHits[30]", sobj->Mymu_muid_nTGCLayer3EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer4EtaHits[30]", sobj->Mymu_muid_nTGCLayer4EtaHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer1PhiHits[30]", sobj->Mymu_muid_nTGCLayer1PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer2PhiHits[30]", sobj->Mymu_muid_nTGCLayer2PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer3PhiHits[30]", sobj->Mymu_muid_nTGCLayer3PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_nTGCLayer4PhiHits[30]", sobj->Mymu_muid_nTGCLayer4PhiHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_barrelSectors[30]", sobj->Mymu_muid_barrelSectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_endcapSectors[30]", sobj->Mymu_muid_endcapSectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackd0[30]", sobj->Mymu_muid_trackd0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackz0[30]", sobj->Mymu_muid_trackz0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackphi[30]", sobj->Mymu_muid_trackphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracktheta[30]", sobj->Mymu_muid_tracktheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackqoverp[30]", sobj->Mymu_muid_trackqoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_d0[30]", sobj->Mymu_muid_trackcov_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_z0[30]", sobj->Mymu_muid_trackcov_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_phi[30]", sobj->Mymu_muid_trackcov_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_theta[30]", sobj->Mymu_muid_trackcov_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_qoverp[30]", sobj->Mymu_muid_trackcov_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_d0_z0[30]", sobj->Mymu_muid_trackcov_d0_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_d0_phi[30]", sobj->Mymu_muid_trackcov_d0_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_d0_theta[30]", sobj->Mymu_muid_trackcov_d0_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_d0_qoverp[30]", sobj->Mymu_muid_trackcov_d0_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_z0_phi[30]", sobj->Mymu_muid_trackcov_z0_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_z0_theta[30]", sobj->Mymu_muid_trackcov_z0_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_z0_qoverp[30]", sobj->Mymu_muid_trackcov_z0_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_phi_theta[30]", sobj->Mymu_muid_trackcov_phi_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_phi_qoverp[30]", sobj->Mymu_muid_trackcov_phi_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackcov_theta_qoverp[30]", sobj->Mymu_muid_trackcov_theta_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackfitchi2[30]", sobj->Mymu_muid_trackfitchi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackfitndof[30]", sobj->Mymu_muid_trackfitndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_hastrack[30]", sobj->Mymu_muid_hastrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackd0beam[30]", sobj->Mymu_muid_trackd0beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackz0beam[30]", sobj->Mymu_muid_trackz0beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigd0beam[30]", sobj->Mymu_muid_tracksigd0beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigz0beam[30]", sobj->Mymu_muid_tracksigz0beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackd0pv[30]", sobj->Mymu_muid_trackd0pv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackz0pv[30]", sobj->Mymu_muid_trackz0pv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigd0pv[30]", sobj->Mymu_muid_tracksigd0pv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigz0pv[30]", sobj->Mymu_muid_tracksigz0pv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_d0_biasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_d0_biasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_z0_biasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_z0_biasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_sigd0_biasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_sigd0_biasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_sigz0_biasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_sigz0_biasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_d0_unbiasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_d0_unbiasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_z0_unbiasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_z0_unbiasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased[30]", sobj->Mymu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackd0pvunbiased[30]", sobj->Mymu_muid_trackd0pvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_trackz0pvunbiased[30]", sobj->Mymu_muid_trackz0pvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigd0pvunbiased[30]", sobj->Mymu_muid_tracksigd0pvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_tracksigz0pvunbiased[30]", sobj->Mymu_muid_tracksigz0pvunbiased);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_n", &sobj->Mytrig_EF_trigmuonef_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]", sobj->Mytrig_EF_trigmuonef_EF_mu4_MSonly_L1TE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu4_L1VTE50[30]", sobj->Mytrig_EF_trigmuonef_EF_mu4_L1VTE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]", sobj->Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]", sobj->Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]", sobj->Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]", sobj->Mytrig_EF_trigmuonef_EF_mu8_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu8[30]", sobj->Mytrig_EF_trigmuonef_EF_mu8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]", sobj->Mytrig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]", sobj->Mytrig_EF_trigmuonef_EF_mu4_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_track_n[30]", sobj->Mytrig_EF_trigmuonef_track_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_track_MS_hasMS_one", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_hasMS_one);
      R__insp.InspectMember("vector<int>", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_hasMS_one, "Mytrig_EF_trigmuonef_track_MS_hasMS_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mytrig_EF_trigmuonef_track_MS_hasMS", &sobj->Mytrig_EF_trigmuonef_track_MS_hasMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_track_MS_phi_one", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_phi_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_phi_one, "Mytrig_EF_trigmuonef_track_MS_phi_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mytrig_EF_trigmuonef_track_MS_phi", &sobj->Mytrig_EF_trigmuonef_track_MS_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_track_MS_eta_one", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_eta_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->Mytrig_EF_trigmuonef_track_MS_eta_one, "Mytrig_EF_trigmuonef_track_MS_eta_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Mytrig_EF_trigmuonef_track_MS_eta", &sobj->Mytrig_EF_trigmuonef_track_MS_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_n_tot", &sobj->Mymu_muid_EFME_n_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_n_tot", &sobj->Mymu_muid_EFCB_n_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_n_tot", &sobj->Mymu_muid_EFMG_n_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_dr[30]", sobj->Mymu_muid_EFCB_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_n[30]", sobj->Mymu_muid_EFCB_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_MuonType[900]", sobj->Mymu_muid_EFCB_MuonType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_pt[900]", sobj->Mymu_muid_EFCB_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_eta[900]", sobj->Mymu_muid_EFCB_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_phi[900]", sobj->Mymu_muid_EFCB_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_hasCB[900]", sobj->Mymu_muid_EFCB_hasCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFCB_matched[30]", sobj->Mymu_muid_EFCB_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_dr[30]", sobj->Mymu_muid_EFMG_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_n[30]", sobj->Mymu_muid_EFMG_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_MuonType[900]", sobj->Mymu_muid_EFMG_MuonType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_pt[900]", sobj->Mymu_muid_EFMG_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_eta[900]", sobj->Mymu_muid_EFMG_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_phi[900]", sobj->Mymu_muid_EFMG_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_hasMG[900]", sobj->Mymu_muid_EFMG_hasMG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFMG_matched[30]", sobj->Mymu_muid_EFMG_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_dr[30]", sobj->Mymu_muid_EFME_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_n[30]", sobj->Mymu_muid_EFME_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_MuonType[900]", sobj->Mymu_muid_EFME_MuonType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_pt[900]", sobj->Mymu_muid_EFME_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_eta[900]", sobj->Mymu_muid_EFME_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_phi[900]", sobj->Mymu_muid_EFME_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_hasME[900]", sobj->Mymu_muid_EFME_hasME);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_EFME_matched[30]", sobj->Mymu_muid_EFME_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_dr[30]", sobj->Mymu_muid_L2CB_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_pt[30]", sobj->Mymu_muid_L2CB_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_eta[30]", sobj->Mymu_muid_L2CB_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_phi[30]", sobj->Mymu_muid_L2CB_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_id_pt[30]", sobj->Mymu_muid_L2CB_id_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_ms_pt[30]", sobj->Mymu_muid_L2CB_ms_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_nPixHits[30]", sobj->Mymu_muid_L2CB_nPixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_nSCTHits[30]", sobj->Mymu_muid_L2CB_nSCTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_nTRTHits[30]", sobj->Mymu_muid_L2CB_nTRTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_nTRTHighTHits[30]", sobj->Mymu_muid_L2CB_nTRTHighTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L2CB_matched[30]", sobj->Mymu_muid_L2CB_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_dr[30]", sobj->Mymu_muid_L1_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_pt[30]", sobj->Mymu_muid_L1_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_eta[30]", sobj->Mymu_muid_L1_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_phi[30]", sobj->Mymu_muid_L1_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_thrNumber[30]", sobj->Mymu_muid_L1_thrNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_RoINumber[30]", sobj->Mymu_muid_L1_RoINumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_sectorAddress[30]", sobj->Mymu_muid_L1_sectorAddress);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_firstCandidate[30]", sobj->Mymu_muid_L1_firstCandidate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_moreCandInRoI[30]", sobj->Mymu_muid_L1_moreCandInRoI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_moreCandInSector[30]", sobj->Mymu_muid_L1_moreCandInSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_source[30]", sobj->Mymu_muid_L1_source);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_hemisphere[30]", sobj->Mymu_muid_L1_hemisphere);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_charge[30]", sobj->Mymu_muid_L1_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_vetoed[30]", sobj->Mymu_muid_L1_vetoed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_L1_matched[30]", sobj->Mymu_muid_L1_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_nScatters[30]", sobj->Mymuid_nScatters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_scatSignificance[30]", sobj->Mymuid_scatSignificance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_neighbourSignificance[30]", sobj->Mymuid_neighbourSignificance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymuid_eta[30]", sobj->Mymuid_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoodMuon[30]", sobj->isGoodMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoodDiMuonOS[900]", sobj->isGoodDiMuonOS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoodDiMuonSS[900]", sobj->isGoodDiMuonSS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuid_indexOS1[900]", sobj->dimuid_indexOS1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuid_indexOS2[900]", sobj->dimuid_indexOS2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuid_indexSS1[900]", sobj->dimuid_indexSS1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dimuid_indexSS2[900]", sobj->dimuid_indexSS2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoodMuon2[30]", sobj->isGoodMuon2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_n", &sobj->Myantikt2HIItrEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_E[500]", sobj->Myantikt2HIItrEM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_pt[500]", sobj->Myantikt2HIItrEM_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_m[500]", sobj->Myantikt2HIItrEM_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_eta[500]", sobj->Myantikt2HIItrEM_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_phi[500]", sobj->Myantikt2HIItrEM_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_MaxOverMean[500]", sobj->Myantikt2HIItrEM_MaxOverMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_MeanTowerEt[500]", sobj->Myantikt2HIItrEM_MeanTowerEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_SubtractedEt[500]", sobj->Myantikt2HIItrEM_SubtractedEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_RMSTowerEt[500]", sobj->Myantikt2HIItrEM_RMSTowerEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_GausEt[500]", sobj->Myantikt2HIItrEM_GausEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_SelfEnergy[500]", sobj->Myantikt2HIItrEM_SelfEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_SumJt[500]", sobj->Myantikt2HIItrEM_SumJt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_CoreEt[500]", sobj->Myantikt2HIItrEM_CoreEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_EdgeEt[500]", sobj->Myantikt2HIItrEM_EdgeEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_CryoCorr[500]", sobj->Myantikt2HIItrEM_CryoCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_NoFlow[500]", sobj->Myantikt2HIItrEM_NoFlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_NumConstituents[500]", sobj->Myantikt2HIItrEM_NumConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_UncalibEt[500]", sobj->Myantikt2HIItrEM_UncalibEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_Discriminant[500]", sobj->Myantikt2HIItrEM_Discriminant);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_MeanTowerEtUnsubtr[500]", sobj->Myantikt2HIItrEM_MeanTowerEtUnsubtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_n90[500]", sobj->Myantikt2HIItrEM_n90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_fracSamplingMax[500]", sobj->Myantikt2HIItrEM_fracSamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_SamplingMax[500]", sobj->Myantikt2HIItrEM_SamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_n90constituents[500]", sobj->Myantikt2HIItrEM_n90constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_Timing[500]", sobj->Myantikt2HIItrEM_Timing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_LArQuality[500]", sobj->Myantikt2HIItrEM_LArQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_HECQuality[500]", sobj->Myantikt2HIItrEM_HECQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_TileQuality[500]", sobj->Myantikt2HIItrEM_TileQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_n", &sobj->Myantikt3HIItrEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_E[500]", sobj->Myantikt3HIItrEM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_pt[500]", sobj->Myantikt3HIItrEM_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_m[500]", sobj->Myantikt3HIItrEM_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_eta[500]", sobj->Myantikt3HIItrEM_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_phi[500]", sobj->Myantikt3HIItrEM_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_MaxOverMean[500]", sobj->Myantikt3HIItrEM_MaxOverMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_MeanTowerEt[500]", sobj->Myantikt3HIItrEM_MeanTowerEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_SubtractedEt[500]", sobj->Myantikt3HIItrEM_SubtractedEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_RMSTowerEt[500]", sobj->Myantikt3HIItrEM_RMSTowerEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_GausEt[500]", sobj->Myantikt3HIItrEM_GausEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_SelfEnergy[500]", sobj->Myantikt3HIItrEM_SelfEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_SumJt[500]", sobj->Myantikt3HIItrEM_SumJt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_CoreEt[500]", sobj->Myantikt3HIItrEM_CoreEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_EdgeEt[500]", sobj->Myantikt3HIItrEM_EdgeEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_CryoCorr[500]", sobj->Myantikt3HIItrEM_CryoCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_NoFlow[500]", sobj->Myantikt3HIItrEM_NoFlow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_NumConstituents[500]", sobj->Myantikt3HIItrEM_NumConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_UncalibEt[500]", sobj->Myantikt3HIItrEM_UncalibEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_Discriminant[500]", sobj->Myantikt3HIItrEM_Discriminant);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_MeanTowerEtUnsubtr[500]", sobj->Myantikt3HIItrEM_MeanTowerEtUnsubtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_n90[500]", sobj->Myantikt3HIItrEM_n90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_fracSamplingMax[500]", sobj->Myantikt3HIItrEM_fracSamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_SamplingMax[500]", sobj->Myantikt3HIItrEM_SamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_n90constituents[500]", sobj->Myantikt3HIItrEM_n90constituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_Timing[500]", sobj->Myantikt3HIItrEM_Timing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_LArQuality[500]", sobj->Myantikt3HIItrEM_LArQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_HECQuality[500]", sobj->Myantikt3HIItrEM_HECQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt3HIItrEM_TileQuality[500]", sobj->Myantikt3HIItrEM_TileQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_n", &sobj->Myantikt2Truth_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_E[500]", sobj->Myantikt2Truth_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_pt[500]", sobj->Myantikt2Truth_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_m[500]", sobj->Myantikt2Truth_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_eta[500]", sobj->Myantikt2Truth_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2Truth_phi[500]", sobj->Myantikt2Truth_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_n", &sobj->MyAntiKt4TopoEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_E[500]", sobj->MyAntiKt4TopoEM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_pt[500]", sobj->MyAntiKt4TopoEM_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_m[500]", sobj->MyAntiKt4TopoEM_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_eta[500]", sobj->MyAntiKt4TopoEM_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_phi[500]", sobj->MyAntiKt4TopoEM_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EtaOrigin[500]", sobj->MyAntiKt4TopoEM_EtaOrigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_PhiOrigin[500]", sobj->MyAntiKt4TopoEM_PhiOrigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_MOrigin[500]", sobj->MyAntiKt4TopoEM_MOrigin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EtaOriginEM[500]", sobj->MyAntiKt4TopoEM_EtaOriginEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_PhiOriginEM[500]", sobj->MyAntiKt4TopoEM_PhiOriginEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_MOriginEM[500]", sobj->MyAntiKt4TopoEM_MOriginEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_WIDTH[500]", sobj->MyAntiKt4TopoEM_WIDTH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_n90[500]", sobj->MyAntiKt4TopoEM_n90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_Timing[500]", sobj->MyAntiKt4TopoEM_Timing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_LArQuality[500]", sobj->MyAntiKt4TopoEM_LArQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_nTrk[500]", sobj->MyAntiKt4TopoEM_nTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_sumPtTrk[500]", sobj->MyAntiKt4TopoEM_sumPtTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_OriginIndex[500]", sobj->MyAntiKt4TopoEM_OriginIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_HECQuality[500]", sobj->MyAntiKt4TopoEM_HECQuality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_NegativeE[500]", sobj->MyAntiKt4TopoEM_NegativeE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_AverageLArQF[500]", sobj->MyAntiKt4TopoEM_AverageLArQF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_YFlip12[500]", sobj->MyAntiKt4TopoEM_YFlip12);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_YFlip23[500]", sobj->MyAntiKt4TopoEM_YFlip23);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_BCH_CORR_CELL[500]", sobj->MyAntiKt4TopoEM_BCH_CORR_CELL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_BCH_CORR_DOTX[500]", sobj->MyAntiKt4TopoEM_BCH_CORR_DOTX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_BCH_CORR_JET[500]", sobj->MyAntiKt4TopoEM_BCH_CORR_JET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_BCH_CORR_JET_FORCELL[500]", sobj->MyAntiKt4TopoEM_BCH_CORR_JET_FORCELL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_ENG_BAD_CELLS[500]", sobj->MyAntiKt4TopoEM_ENG_BAD_CELLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_N_BAD_CELLS[500]", sobj->MyAntiKt4TopoEM_N_BAD_CELLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_N_BAD_CELLS_CORR[500]", sobj->MyAntiKt4TopoEM_N_BAD_CELLS_CORR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_BAD_CELLS_CORR_E[500]", sobj->MyAntiKt4TopoEM_BAD_CELLS_CORR_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_NumTowers[500]", sobj->MyAntiKt4TopoEM_NumTowers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_ootFracCells5[500]", sobj->MyAntiKt4TopoEM_ootFracCells5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_ootFracCells10[500]", sobj->MyAntiKt4TopoEM_ootFracCells10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_ootFracClusters5[500]", sobj->MyAntiKt4TopoEM_ootFracClusters5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_ootFracClusters10[500]", sobj->MyAntiKt4TopoEM_ootFracClusters10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_SamplingMax[500]", sobj->MyAntiKt4TopoEM_SamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_fracSamplingMax[500]", sobj->MyAntiKt4TopoEM_fracSamplingMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_hecf[500]", sobj->MyAntiKt4TopoEM_hecf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_tgap3f[500]", sobj->MyAntiKt4TopoEM_tgap3f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_isUgly[500]", sobj->MyAntiKt4TopoEM_isUgly);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_isBadLooseMinus[500]", sobj->MyAntiKt4TopoEM_isBadLooseMinus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_isBadLoose[500]", sobj->MyAntiKt4TopoEM_isBadLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_isBadMedium[500]", sobj->MyAntiKt4TopoEM_isBadMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_isBadTight[500]", sobj->MyAntiKt4TopoEM_isBadTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emfrac[500]", sobj->MyAntiKt4TopoEM_emfrac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_Offset[500]", sobj->MyAntiKt4TopoEM_Offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EMJES[500]", sobj->MyAntiKt4TopoEM_EMJES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EMJES_EtaCorr[500]", sobj->MyAntiKt4TopoEM_EMJES_EtaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EMJESnooffset[500]", sobj->MyAntiKt4TopoEM_EMJESnooffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_GCWJES[500]", sobj->MyAntiKt4TopoEM_GCWJES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_GCWJES_EtaCorr[500]", sobj->MyAntiKt4TopoEM_GCWJES_EtaCorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_CB[500]", sobj->MyAntiKt4TopoEM_CB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_LCJES[500]", sobj->MyAntiKt4TopoEM_LCJES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emscale_E[500]", sobj->MyAntiKt4TopoEM_emscale_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emscale_pt[500]", sobj->MyAntiKt4TopoEM_emscale_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emscale_m[500]", sobj->MyAntiKt4TopoEM_emscale_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emscale_eta[500]", sobj->MyAntiKt4TopoEM_emscale_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_emscale_phi[500]", sobj->MyAntiKt4TopoEM_emscale_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_jvtx_x[500]", sobj->MyAntiKt4TopoEM_jvtx_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_jvtx_y[500]", sobj->MyAntiKt4TopoEM_jvtx_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_jvtx_z[500]", sobj->MyAntiKt4TopoEM_jvtx_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_jvtxf[500]", sobj->MyAntiKt4TopoEM_jvtxf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_GSCFactorF[500]", sobj->MyAntiKt4TopoEM_GSCFactorF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_WidthFraction[500]", sobj->MyAntiKt4TopoEM_WidthFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_PreSamplerB[500]", sobj->MyAntiKt4TopoEM_e_PreSamplerB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EMB1[500]", sobj->MyAntiKt4TopoEM_e_EMB1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EMB2[500]", sobj->MyAntiKt4TopoEM_e_EMB2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EMB3[500]", sobj->MyAntiKt4TopoEM_e_EMB3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_PreSamplerE[500]", sobj->MyAntiKt4TopoEM_e_PreSamplerE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EME1[500]", sobj->MyAntiKt4TopoEM_e_EME1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EME2[500]", sobj->MyAntiKt4TopoEM_e_EME2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_EME3[500]", sobj->MyAntiKt4TopoEM_e_EME3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_HEC0[500]", sobj->MyAntiKt4TopoEM_e_HEC0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_HEC1[500]", sobj->MyAntiKt4TopoEM_e_HEC1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_HEC2[500]", sobj->MyAntiKt4TopoEM_e_HEC2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_HEC3[500]", sobj->MyAntiKt4TopoEM_e_HEC3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileBar0[500]", sobj->MyAntiKt4TopoEM_e_TileBar0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileBar1[500]", sobj->MyAntiKt4TopoEM_e_TileBar1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileBar2[500]", sobj->MyAntiKt4TopoEM_e_TileBar2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileGap1[500]", sobj->MyAntiKt4TopoEM_e_TileGap1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileGap2[500]", sobj->MyAntiKt4TopoEM_e_TileGap2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileGap3[500]", sobj->MyAntiKt4TopoEM_e_TileGap3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileExt0[500]", sobj->MyAntiKt4TopoEM_e_TileExt0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileExt1[500]", sobj->MyAntiKt4TopoEM_e_TileExt1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_TileExt2[500]", sobj->MyAntiKt4TopoEM_e_TileExt2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_FCAL0[500]", sobj->MyAntiKt4TopoEM_e_FCAL0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_FCAL1[500]", sobj->MyAntiKt4TopoEM_e_FCAL1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_e_FCAL2[500]", sobj->MyAntiKt4TopoEM_e_FCAL2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_Nconst[500]", sobj->MyAntiKt4TopoEM_Nconst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_constscale_E[500]", sobj->MyAntiKt4TopoEM_constscale_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_constscale_pt[500]", sobj->MyAntiKt4TopoEM_constscale_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_constscale_m[500]", sobj->MyAntiKt4TopoEM_constscale_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_constscale_eta[500]", sobj->MyAntiKt4TopoEM_constscale_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_constscale_phi[500]", sobj->MyAntiKt4TopoEM_constscale_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_el_dr[500]", sobj->MyAntiKt4TopoEM_el_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_el_matched[500]", sobj->MyAntiKt4TopoEM_el_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_mu_dr[500]", sobj->MyAntiKt4TopoEM_mu_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_mu_matched[500]", sobj->MyAntiKt4TopoEM_mu_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_L1_dr[500]", sobj->MyAntiKt4TopoEM_L1_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_L1_matched[500]", sobj->MyAntiKt4TopoEM_L1_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_L2_dr[500]", sobj->MyAntiKt4TopoEM_L2_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_L2_matched[500]", sobj->MyAntiKt4TopoEM_L2_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EF_dr[500]", sobj->MyAntiKt4TopoEM_EF_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MyAntiKt4TopoEM_EF_matched[500]", sobj->MyAntiKt4TopoEM_EF_matched);
      R__insp.GenericShowMembers("BranchBase", ( ::BranchBase * )( (::MuonBranch*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MuonBranch(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonBranch : new ::MuonBranch;
   }
   static void *newArray_MuonBranch(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonBranch[nElements] : new ::MuonBranch[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuonBranch(void *p) {
      delete ((::MuonBranch*)p);
   }
   static void deleteArray_MuonBranch(void *p) {
      delete [] ((::MuonBranch*)p);
   }
   static void destruct_MuonBranch(void *p) {
      typedef ::MuonBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonBranch

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

/********************************************************
* Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MuonBranch.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MuonBranch */
static int G__Dict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonBranch[n];
     } else {
       p = new((void*) gvp) MuonBranch[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonBranch;
     } else {
       p = new((void*) gvp) MuonBranch;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MuonBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((MuonBranch*) G__getstructoffset())->lv((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonBranch*) G__getstructoffset())->SelectMuon((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonBranch*) G__getstructoffset())->isGoodDiMuon((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBranch*) G__getstructoffset())->IDprobes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonBranch*) G__getstructoffset())->MSprobes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonBranch*) G__getstructoffset())->MuonIsolation((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonBranch(*(MuonBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MuonBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonBranch G__TMuonBranch;
static int G__Dict_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonBranch*) (soff+(sizeof(MuonBranch)*i)))->~G__TMuonBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonBranch*) (soff))->~G__TMuonBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonBranch* dest = (MuonBranch*) G__getstructoffset();
   *dest = *(MuonBranch*) libp->para[0].ref;
   const MuonBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MuonBranch */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_MuonBranch))) {
     MuonBranch *G__Lderived;
     G__Lderived=(MuonBranch*)0x1000;
     {
       BranchBase *G__Lpbase=(BranchBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_MuonBranch),G__get_linked_tagnum(&G__DictLN_BranchBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<std::string> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MuonBranch */
static void G__setup_memvarMuonBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_MuonBranch));
   { MuonBranch *p; p=(MuonBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"muid_npairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_truth_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_truth_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_truth_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_truth_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_truth_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_status[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_barcode[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_motherbarcode[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_truth_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_m[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_px[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_invMass[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_massCB[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_massCBSS[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_massCBOS[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"Vecsinglemuid_massCBOS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,4,"IDprobe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,4,"MSprobe=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"Vecsinglemuid_massCBOS_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"IDprobe_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"MSprobe_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_py[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_pz[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_allauthor[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_author[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_beta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_isMuonLikelihood[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_matchchi2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_matchndof[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_etcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_etcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_etcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_nucone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_nucone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_nucone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ptcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ptcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ptcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone10ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone15ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone20ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone30ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone40ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mu_muid_ptcone50ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"totalMuPtCone20ID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"totalMuPtCone30ID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_energyLossPar[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_energyLossErr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_etCore[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_energyLossType[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_caloMuonIdTag[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_caloLRLikelihood[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_bestMatch[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_isStandAloneMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_isCombinedMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_isLowPtReconstructedMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_isSegmentTaggedMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_isCaloMuonId[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_alsoFoundByLowPt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_alsoFoundByCaloMuonId[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_loose[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_medium[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_tight[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cb_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cb_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cb_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cb_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cb_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_d0_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_d0_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_d0_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_d0_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_z0_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_z0_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_z0_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_phi_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_phi_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_cov_theta_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_cov_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_cov_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_cov_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_cov_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_cov_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_cov_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_cov_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_cov_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_cov_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_cov_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ms_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ms_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ms_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ms_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ms_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_id_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_me_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_ie_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nOutliersOnTrack[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nBLHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nPixHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nSCTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTRTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTRTHighTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nBLSharedHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nPixSharedHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nPixHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nSCTSharedHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nSCTHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTRTOutliers[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTRTHighTOutliers[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nGangedPixels[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nPixelDeadSensors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nSCTDeadSensors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTRTDeadStraws[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_expectBLayerHit[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nCSCEtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nCSCEtaHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nCSCPhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nCSCPhiHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCEtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCEtaHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCPhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCPhiHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCEtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCEtaHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCPhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCPhiHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTBIHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTBMHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTBOHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTBEEHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTBIS78Hits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTEIHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTEMHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTEOHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nMDTEEHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer1EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer2EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer3EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer1PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer2PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nRPCLayer3PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer1EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer2EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer3EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer4EtaHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer1PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer2PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer3PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_nTGCLayer4PhiHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_barrelSectors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_endcapSectors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackd0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackz0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackphi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracktheta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackqoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_d0_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_d0_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_d0_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_d0_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_z0_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_z0_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_z0_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_phi_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_phi_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackcov_theta_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackfitchi2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_trackfitndof[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_hastrack[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackd0beam[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackz0beam[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigd0beam[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigz0beam[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackd0pv[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackz0pv[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigd0pv[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigz0pv[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_d0_biasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_z0_biasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_sigd0_biasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_sigz0_biasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_d0_unbiasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_z0_unbiasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackd0pvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_trackz0pvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigd0pvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_tracksigz0pvunbiased[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu4_L1VTE50[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu8[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mytrig_EF_trigmuonef_track_n[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"Mytrig_EF_trigmuonef_track_MS_hasMS_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,4,"Mytrig_EF_trigmuonef_track_MS_hasMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"Mytrig_EF_trigmuonef_track_MS_phi_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"Mytrig_EF_trigmuonef_track_MS_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"Mytrig_EF_trigmuonef_track_MS_eta_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"Mytrig_EF_trigmuonef_track_MS_eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFME_n_tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFCB_n_tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFMG_n_tot=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFCB_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFCB_n[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFCB_MuonType[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFCB_pt[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFCB_eta[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFCB_phi[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFCB_hasCB[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFCB_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFMG_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFMG_n[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFMG_MuonType[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFMG_pt[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFMG_eta[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFMG_phi[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFMG_hasMG[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFMG_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFME_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFME_n[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFME_MuonType[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFME_pt[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFME_eta[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_EFME_phi[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFME_hasME[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_EFME_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_id_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L2CB_ms_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L2CB_nPixHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L2CB_nSCTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L2CB_nTRTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L2CB_nTRTHighTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L2CB_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L1_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L1_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L1_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymu_muid_L1_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_thrNumber[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_RoINumber[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_sectorAddress[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_firstCandidate[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_moreCandInRoI[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_moreCandInSector[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_source[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_hemisphere[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_vetoed[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymu_muid_L1_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Mymuid_nScatters[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_scatSignificance[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_neighbourSignificance[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Mymuid_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"isGoodMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"isGoodDiMuonOS[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"isGoodDiMuonSS[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dimuid_indexOS1[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dimuid_indexOS2[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dimuid_indexSS1[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"dimuid_indexSS2[900]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"isGoodMuon2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Myantikt2HIItrEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_MaxOverMean[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_MeanTowerEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_SubtractedEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_RMSTowerEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_GausEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_SelfEnergy[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_SumJt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_CoreEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_EdgeEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_CryoCorr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_NoFlow[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_NumConstituents[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_UncalibEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_Discriminant[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_MeanTowerEtUnsubtr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_n90[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_fracSamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_SamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_n90constituents[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_Timing[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_LArQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_HECQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2HIItrEM_TileQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Myantikt3HIItrEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_MaxOverMean[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_MeanTowerEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_SubtractedEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_RMSTowerEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_GausEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_SelfEnergy[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_SumJt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_CoreEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_EdgeEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_CryoCorr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_NoFlow[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_NumConstituents[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_UncalibEt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_Discriminant[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_MeanTowerEtUnsubtr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_n90[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_fracSamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_SamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_n90constituents[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_Timing[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_LArQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_HECQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt3HIItrEM_TileQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Myantikt2Truth_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2Truth_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2Truth_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2Truth_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2Truth_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"Myantikt2Truth_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EtaOrigin[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_PhiOrigin[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_MOrigin[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EtaOriginEM[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_PhiOriginEM[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_MOriginEM[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_WIDTH[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_n90[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_Timing[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_LArQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_nTrk[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_sumPtTrk[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_OriginIndex[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_HECQuality[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_NegativeE[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_AverageLArQF[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_YFlip12[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_YFlip23[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_BCH_CORR_CELL[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_BCH_CORR_DOTX[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_BCH_CORR_JET[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_BCH_CORR_JET_FORCELL[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_ENG_BAD_CELLS[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_N_BAD_CELLS[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_N_BAD_CELLS_CORR[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_BAD_CELLS_CORR_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_NumTowers[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_ootFracCells5[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_ootFracCells10[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_ootFracClusters5[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_ootFracClusters10[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_SamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_fracSamplingMax[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_hecf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_tgap3f[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_isUgly[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_isBadLooseMinus[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_isBadLoose[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_isBadMedium[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_isBadTight[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emfrac[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_Offset[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EMJES[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EMJES_EtaCorr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EMJESnooffset[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_GCWJES[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_GCWJES_EtaCorr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_CB[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_LCJES[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emscale_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emscale_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emscale_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emscale_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_emscale_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_jvtx_x[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_jvtx_y[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_jvtx_z[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_jvtxf[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_GSCFactorF[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_WidthFraction[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_PreSamplerB[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EMB1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EMB2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EMB3[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_PreSamplerE[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EME1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EME2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_EME3[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_HEC0[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_HEC1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_HEC2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_HEC3[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileBar0[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileBar1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileBar2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileGap1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileGap2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileGap3[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileExt0[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileExt1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_TileExt2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_FCAL0[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_FCAL1[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_e_FCAL2[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_Nconst[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_constscale_E[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_constscale_pt[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_constscale_m[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_constscale_eta[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_constscale_phi[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_el_dr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_el_matched[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_mu_dr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_mu_matched[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_L1_dr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_L1_matched[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_L2_dr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_L2_matched[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"MyAntiKt4TopoEM_EF_dr[500]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"MyAntiKt4TopoEM_EF_matched[500]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMuonBranch(void) {
   /* MuonBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_MuonBranch));
   G__memfunc_setup("MuonBranch",1005,G__Dict_633_0_1, 105, G__get_linked_tagnum(&G__DictLN_MuonBranch), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_Muon_Branches",1802,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set_Muon_Branches",1711,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - MyTree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("lv",226,G__Dict_633_0_4, 117, G__get_linked_tagnum(&G__DictLN_TLorentzVector), -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelectMuon",1023,G__Dict_633_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodDiMuon",1201,G__Dict_633_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IDprobes",792,G__Dict_633_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MSprobes",811,G__Dict_633_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonIsolation",1361,G__Dict_633_0_9, 102, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - imu f - - 0 - trkThresh "
"f - - 0 - coneRadius", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MuonBranch", 1005, G__Dict_633_0_10, (int) ('i'), G__get_linked_tagnum(&G__DictLN_MuonBranch), -1, 0, 1, 1, 1, 0, "u 'MuonBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonBranch", 1131, G__Dict_633_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_633_0_12, (int) ('u'), G__get_linked_tagnum(&G__DictLN_MuonBranch), -1, 1, 1, 1, 1, 0, "u 'MuonBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_BranchBase = { "BranchBase" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR = { "vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<string,allocator<string> >,allocator<vector<string,allocator<string> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_MuonBranch = { "MuonBranch" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TTree.tagnum = -1 ;
  G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TLorentzVector.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_BranchBase.tagnum = -1 ;
  G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_MuonBranch.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TTree);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_BranchBase);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEstringcOallocatorlEstringgRsPgRcOallocatorlEvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_MuonBranch),sizeof(MuonBranch),-1,296192,(char*)NULL,G__setup_memvarMuonBranch,G__setup_memfuncMuonBranch);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

