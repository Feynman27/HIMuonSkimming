
    Float_t BranchBase::   Fcal_Et = 0 ;
    Float_t BranchBase::   nu_pt_nocuts = 0 ;                 //Mine
    Float_t BranchBase::   nu_phi_nocuts = 0 ;                //Mine

 
   // Declaration of leaf types
    UInt_t BranchBase::          RunNumber = 0 ;
    UInt_t BranchBase::          EventNumber = 0 ;
    UInt_t BranchBase::          timestamp = 0 ;
    UInt_t BranchBase::          timestamp_ns = 0 ;
    UInt_t BranchBase::          lbn = 0 ;
    UInt_t BranchBase::          bcid = 0 ;
    UInt_t BranchBase::          detmask0 = 0 ;
    UInt_t BranchBase::          detmask1 = 0 ;
    Float_t BranchBase::         actualIntPerXing = 0 ;
    Float_t BranchBase::         averageIntPerXing = 0 ;
    UInt_t BranchBase::          pixelFlags = 0 ;
    UInt_t BranchBase::          sctFlags = 0 ;
    UInt_t BranchBase::          trtFlags = 0 ;
    UInt_t BranchBase::          larFlags = 0 ;
    UInt_t BranchBase::          tileFlags = 0 ;
    UInt_t BranchBase::          muonFlags = 0 ;
    UInt_t BranchBase::          fwdFlags = 0 ;
    UInt_t BranchBase::          coreFlags = 0 ;
    UInt_t BranchBase::          pixelError = 0 ;
    UInt_t BranchBase::          sctError = 0 ;
    UInt_t BranchBase::          trtError = 0 ;
    UInt_t BranchBase::          larError = 0 ;
    UInt_t BranchBase::          tileError = 0 ;
    UInt_t BranchBase::          muonError = 0 ;
    UInt_t BranchBase::          fwdError = 0 ;
    UInt_t BranchBase::          coreError = 0 ;
    Bool_t BranchBase::          streamDecision_Egamma = 0 ;
    Bool_t BranchBase::          streamDecision_Muons = 0 ;
    Bool_t BranchBase::          streamDecision_JetTauEtmiss = 0 ;
    Bool_t BranchBase::          isSimulation = 0 ;
    Bool_t BranchBase::          isCalibration = 0 ;
    Bool_t BranchBase::          isTestBeam = 0 ;
    Int_t BranchBase::           mb_n = 0 ;
    std::vector<float> *BranchBase::   mb_E = 0 ;
    std::vector<float> *BranchBase::   mb_eta = 0 ;
    std::vector<float> *BranchBase::   mb_phi = 0 ;
    std::vector<float> *BranchBase::   mb_time = 0 ;
    std::vector<int> *BranchBase::     mb_quality = 0 ;
    std::vector<int> *BranchBase::     mb_type = 0 ;
    std::vector<int> *BranchBase::     mb_module = 0 ;
    std::vector<int> *BranchBase::     mb_channel = 0 ;
    
    Float_t BranchBase::         mbtime_timeDiff = 0 ;
    Float_t BranchBase::         mbtime_timeA = 0 ;
    Float_t BranchBase::         mbtime_timeC = 0 ;
    Int_t BranchBase::           mbtime_countA = 0 ;
    Int_t BranchBase::           mbtime_countC = 0 ;
    Int_t BranchBase::           Zdc_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: Zdc_Energy_Vec = 0 ;
    std::vector< std::vector<float> > *BranchBase:: Zdc_Time_Vec = 0 ;
    std::vector<int> *BranchBase::     Zdc_Vec_Size = 0 ;
    std::vector<float> *BranchBase::   Zdc_Energy_LG = 0 ;
    std::vector<float> *BranchBase::   Zdc_Time_LG = 0 ;
    std::vector<float> *BranchBase::   Zdc_Energy_HG = 0 ;
    std::vector<float> *BranchBase::   Zdc_Time_HG = 0 ;
    std::vector<unsigned int> *BranchBase:: Zdc_Id = 0 ;
    std::vector<int> *BranchBase::     Zdc_Side = 0 ;
    std::vector<int> *BranchBase::     Zdc_Type = 0 ;
    std::vector<int> *BranchBase::     Zdc_Module = 0 ;
    std::vector<int> *BranchBase::     Zdc_Channel = 0 ;
    std::vector<float> *BranchBase::   Zdc_TimeCalib = 0 ;
    std::vector<unsigned int> *BranchBase:: Zdc_RecMethod = 0 ;
    Int_t BranchBase::           ZdcDigits_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ZdcDigits_dig_g0d0 = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ZdcDigits_dig_g0d1 = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ZdcDigits_dig_g1d0 = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ZdcDigits_dig_g1d1 = 0 ;
    std::vector<unsigned int> *BranchBase:: ZdcDigits_Id = 0 ;
    std::vector<int> *BranchBase::     ZdcDigits_Side = 0 ;
    std::vector<int> *BranchBase::     ZdcDigits_Type = 0 ;
    std::vector<int> *BranchBase::     ZdcDigits_Module = 0 ;
    std::vector<int> *BranchBase::     ZdcDigits_Channel = 0 ;
    Int_t BranchBase::           NSiClusterL0_nClustEta1 = 0 ;
    Int_t BranchBase::           NSiClusterL0_nClustEta25 = 0 ;
    Int_t BranchBase::           NSiClusterL1_nClustEta1 = 0 ;
    Int_t BranchBase::           NSiClusterL1_nClustEta25 = 0 ;
    Int_t BranchBase::           NSiClusterL2_nClustEta1 = 0 ;
    Int_t BranchBase::           NSiClusterL2_nClustEta25 = 0 ;
    Int_t BranchBase::           ccc_Nh_Calo = 0 ;
    
    Float_t BranchBase::         ccc_Eh_Calo = 0 ;
    Int_t BranchBase::           ccc_Nh_EM = 0 ;
    Float_t BranchBase::         ccc_Eh_EM = 0 ;
    Int_t BranchBase::           ccc_Nh_HAD = 0 ;
    Float_t BranchBase::         ccc_Eh_HAD = 0 ;
    Int_t BranchBase::           ccc_Nh_PresB = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_PresB = 0 ;
    Int_t BranchBase::           ccc_Nh_EMB = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_EMB = 0 ;
    Int_t BranchBase::           ccc_Nh_EMEC = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_EMEC = 0 ;
    Int_t BranchBase::           ccc_Nh_Tile = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_Tile = 0 ;
    Int_t BranchBase::           ccc_Nh_TileGap = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_TileGap = 0 ;
    Int_t BranchBase::           ccc_Nh_HEC = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_HEC = 0 ;
    Int_t BranchBase::           ccc_Nh_FCal = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_FCal = 0 ;
    Int_t BranchBase::           ccc_Nh_PresE = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_PresE = 0 ;
    Int_t BranchBase::           ccc_Nh_Scint = 0 ;
    std::vector<float> *BranchBase::   ccc_Eh_Scint = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_Calo = 0 ;
    Float_t BranchBase::         cccEt_Et_Eh_Calo = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_EM = 0 ;
    Float_t BranchBase::         cccEt_Et_Eh_EM = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_HAD = 0 ;
    Float_t BranchBase::         cccEt_Et_Eh_HAD = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_PresB = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_PresB = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_EMB = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_EMB = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_EMEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_EMEC = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_Tile = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_Tile = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_TileGap = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_TileGap = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_HEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_HEC = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_FCal = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_FCal = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_PresE = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_PresE = 0 ;
    Int_t BranchBase::           cccEt_Et_Nh_Scint = 0 ;
    std::vector<float> *BranchBase::   cccEt_Et_Eh_Scint = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_Calo = 0 ;
    Float_t BranchBase::         cccEt_p_Eh_Calo = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_EM = 0 ;
    Float_t BranchBase::         cccEt_p_Eh_EM = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_HAD = 0 ;
    Float_t BranchBase::         cccEt_p_Eh_HAD = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_PresB = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_PresB = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_EMB = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_EMB = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_EMEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_EMEC = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_Tile = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_Tile = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_TileGap = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_TileGap = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_HEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_HEC = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_FCal = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_FCal = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_PresE = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_PresE = 0 ;
    Int_t BranchBase::           cccEt_p_Nh_Scint = 0 ;
    std::vector<float> *BranchBase::   cccEt_p_Eh_Scint = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_Calo = 0 ;
    Float_t BranchBase::         cccEt_n_Eh_Calo = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_EM = 0 ;
    Float_t BranchBase::         cccEt_n_Eh_EM = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_HAD = 0 ;
    Float_t BranchBase::         cccEt_n_Eh_HAD = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_PresB = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_PresB = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_EMB = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_EMB = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_EMEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_EMEC = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_Tile = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_Tile = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_TileGap = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_TileGap = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_HEC = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_HEC = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_FCal = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_FCal = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_PresE = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_PresE = 0 ;
    Int_t BranchBase::           cccEt_n_Nh_Scint = 0 ;
    std::vector<float> *BranchBase::   cccEt_n_Eh_Scint = 0 ;
    Int_t BranchBase::           lar_ncellA = 0 ;
    Int_t BranchBase::           lar_ncellC = 0 ;
    Float_t BranchBase::         lar_energyA = 0 ;
    Float_t BranchBase::         lar_energyC = 0 ;
    Float_t BranchBase::         lar_timeA = 0 ;
    Float_t BranchBase::         lar_timeC = 0 ;
    Float_t BranchBase::         lar_timeDiff = 0 ;
    Int_t BranchBase::           TotalEt_n = 0 ;
    std::vector<float> *BranchBase::   TotalEt_layer_eta = 0 ;
    std::vector<float> *BranchBase::   TotalEt_layer_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: TotalEt_layer_area = 0 ;
    std::vector< std::vector<float> > *BranchBase:: TotalEt_layer_sampling = 0 ;
    std::vector< std::vector<float> > *BranchBase:: TotalEt_layer_sampling_calib = 0 ;
    Int_t BranchBase::           trk_n = 0 ;
    std::vector<float> *BranchBase::   trk_pt = 0 ;
    std::vector<float> *BranchBase::   trk_eta = 0 ;
    std::vector<float> *BranchBase::   trk_d0_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_z0_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_phi_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_theta_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_qoverp_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_cov_d0_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_cov_z0_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_cov_phi_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_cov_theta_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_cov_qoverp_wrtPV = 0 ;
    std::vector<float> *BranchBase::   trk_chi2 = 0 ;
    std::vector<int> *BranchBase::     trk_ndof = 0 ;
    std::vector<int> *BranchBase::     trk_nBLHits = 0 ;
    std::vector<int> *BranchBase::     trk_nPixHits = 0 ;
    std::vector<int> *BranchBase::     trk_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     trk_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     trk_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     trk_nPixHoles = 0 ;
    std::vector<int> *BranchBase::     trk_nSCTHoles = 0 ;
    std::vector<int> *BranchBase::     trk_nTRTHoles = 0 ;
    std::vector<int> *BranchBase::     trk_expectBLayerHit = 0 ;
    std::vector<int> *BranchBase::     trk_nMDTHits = 0 ;
    std::vector<int> *BranchBase::     trk_nCSCEtaHits = 0 ;
    std::vector<int> *BranchBase::     trk_nCSCPhiHits = 0 ;
    std::vector<int> *BranchBase::     trk_nRPCEtaHits = 0 ;
    std::vector<int> *BranchBase::     trk_nRPCPhiHits = 0 ;
    std::vector<int> *BranchBase::     trk_nTGCEtaHits = 0 ;
    std::vector<int> *BranchBase::     trk_nTGCPhiHits = 0 ;
    std::vector<int> *BranchBase::     trk_nHits = 0 ;
    std::vector<int> *BranchBase::     trk_nHoles = 0 ;
    std::vector<int> *BranchBase::     trk_hitPattern = 0 ;
    std::vector<float> *BranchBase::   trk_TRTHighTHitsRatio = 0 ;
    std::vector<float> *BranchBase::   trk_TRTHighTOutliersRatio = 0 ;
    std::vector<int> *BranchBase::     trk_fitter = 0 ;
    std::vector<int> *BranchBase::     trk_patternReco1 = 0 ;
    std::vector<int> *BranchBase::     trk_patternReco2 = 0 ;
    std::vector<int> *BranchBase::     trk_seedFinder = 0 ;
    //jet truth
    Int_t BranchBase::antikt2Truth_n = 0;
    std::vector<float>   *BranchBase::antikt2Truth_E = 0;
    std::vector<float>   *BranchBase::antikt2Truth_pt = 0;
    std::vector<float>   *BranchBase::antikt2Truth_m = 0;
    std::vector<float>   *BranchBase::antikt2Truth_eta = 0;
    std::vector<float>   *BranchBase::antikt2Truth_phi = 0;
    std::vector< std::vector<float> > *BranchBase:: antikt2Bkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2Bkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2Bkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   antikt2Bkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Bkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Bkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Bkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   antikt4Bkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2EMBkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2EMBkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2EMBkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   antikt2EMBkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4EMBkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4EMBkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4EMBkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   antikt4EMBkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: ItrBkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: ItrBkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ItrBkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   ItrBkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: ItrEMBkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: ItrEMBkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: ItrEMBkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   ItrEMBkgr_layer_CaloBkgrEta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: AvgBkgr_layer_CaloBkgrEt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: AvgBkgr_layer_CaloBkgrRMS = 0 ;
    std::vector< std::vector<int> > *BranchBase:: AvgBkgr_layer_CaloBkgrCounts = 0 ;
    std::vector<float> *BranchBase::   AvgBkgr_layer_CaloBkgrEta = 0 ;
    Int_t BranchBase::           antikt2HI_n = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_E = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_pt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_m = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_eta = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_phi = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HI_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt2HI_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HI_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HI_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HI_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HI_total_cell_area = 0 ;
    Int_t BranchBase::           antikt4HI_n = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_E = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_m = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_phi = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HI_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt4HI_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HI_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HI_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HI_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HI_total_cell_area = 0 ;
    Int_t BranchBase::           antikt2HIEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt2HIEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt4HIEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt4HIEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt2HIAvg_n = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_E = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_pt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_m = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_eta = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_phi = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIAvg_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt2HIAvg_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIAvg_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIAvg_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIAvg_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIAvg_total_cell_area = 0 ;
    Int_t BranchBase::           antikt4HIAvg_n = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_E = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_m = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_phi = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIAvg_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt4HIAvg_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIAvg_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIAvg_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIAvg_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIAvg_total_cell_area = 0 ;
    Int_t BranchBase::           antikt2HIItr_n = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_E = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_pt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_m = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_eta = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_phi = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItr_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt2HIItr_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItr_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItr_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItr_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItr_total_cell_area = 0 ;
    Int_t BranchBase::           antikt3HIItr_n = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_E = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_pt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_m = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_eta = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_phi = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItr_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt3HIItr_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItr_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItr_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItr_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItr_total_cell_area = 0 ;
    Int_t BranchBase::           antikt4HIItr_n = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_E = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_m = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_phi = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItr_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt4HIItr_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItr_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItr_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItr_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItr_total_cell_area = 0 ;
    Int_t BranchBase::           antikt5HIItr_n = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_E = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_pt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_m = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_eta = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_phi = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItr_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt5HIItr_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItr_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItr_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItr_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItr_total_cell_area = 0 ;
    Int_t BranchBase::           antikt6HIItr_n = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_E = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_pt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_m = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_eta = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_phi = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItr_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt6HIItr_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItr_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItr_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItr_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItr_total_cell_area = 0 ;
    Int_t BranchBase::           antikt2HIItrEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt2HIItrEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt2HIItrEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItrEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItrEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt2HIItrEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt2HIItrEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt3HIItrEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt3HIItrEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt3HIItrEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItrEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItrEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt3HIItrEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt3HIItrEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt4HIItrEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt4HIItrEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt4HIItrEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItrEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItrEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4HIItrEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4HIItrEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt5HIItrEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt5HIItrEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt5HIItrEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItrEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItrEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt5HIItrEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt5HIItrEM_total_cell_area = 0 ;
    Int_t BranchBase::           antikt6HIItrEM_n = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_E = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_pt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_m = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_eta = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_phi = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_MaxOverMean = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_MeanTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_SubtractedEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_RMSTowerEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_GausEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_SelfEnergy = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_SumJt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_CoreEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_EdgeEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_CryoCorr = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_NoFlow = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_NumConstituents = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_UncalibEt = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_Discriminant = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_MeanTowerEtUnsubtr = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_n90 = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_fracSamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_SamplingMax = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_n90constituents = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_Timing = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_LArQuality = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_HECQuality = 0 ;
    std::vector<float> *BranchBase::   antikt6HIItrEM_TileQuality = 0 ;
    std::vector<int> *BranchBase::     antikt6HIItrEM_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_const_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_sampling_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_sampling_et_unsubtr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItrEM_bad_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_bad_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_bad_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItrEM_empty_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_empty_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_empty_cell_area = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6HIItrEM_total_cell_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_total_cell_et = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6HIItrEM_total_cell_area = 0 ;
    Int_t BranchBase::           jetSeed_n = 0 ;
    std::vector<float> *BranchBase::   jetSeed_E = 0 ;
    std::vector<float> *BranchBase::   jetSeed_pt = 0 ;
    std::vector<float> *BranchBase::   jetSeed_m = 0 ;
    std::vector<float> *BranchBase::   jetSeed_eta = 0 ;
    std::vector<float> *BranchBase::   jetSeed_phi = 0 ;
    Int_t BranchBase::           antikt4Track_n = 0 ;
    std::vector<float> *BranchBase::   antikt4Track_E = 0 ;
    std::vector<float> *BranchBase::   antikt4Track_pt = 0 ;
    std::vector<float> *BranchBase::   antikt4Track_m = 0 ;
    std::vector<float> *BranchBase::   antikt4Track_eta = 0 ;
    std::vector<float> *BranchBase::   antikt4Track_phi = 0 ;
    std::vector<int> *BranchBase::     antikt4Track_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_chi2 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_d0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_z0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_phi0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_theta_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt4Track_const_qop = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Track_const_ndof = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Track_const_nBLayerHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Track_const_nPixelHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Track_const_nSCTHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt4Track_const_nTRTHits = 0 ;
    Int_t BranchBase::           antikt6Track_n = 0 ;
    std::vector<float> *BranchBase::   antikt6Track_E = 0 ;
    std::vector<float> *BranchBase::   antikt6Track_pt = 0 ;
    std::vector<float> *BranchBase::   antikt6Track_m = 0 ;
    std::vector<float> *BranchBase::   antikt6Track_eta = 0 ;
    std::vector<float> *BranchBase::   antikt6Track_phi = 0 ;
    std::vector<int> *BranchBase::     antikt6Track_const_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_chi2 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_d0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_z0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_phi0_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_theta_wrtPV = 0 ;
    std::vector< std::vector<float> > *BranchBase:: antikt6Track_const_qop = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6Track_const_ndof = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6Track_const_nBLayerHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6Track_const_nPixelHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6Track_const_nSCTHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: antikt6Track_const_nTRTHits = 0 ;
    
    ////////////////////
    //pp @2.76TeV 2010//
    //////////////////
   Int_t      BranchBase::    AntiKt4TopoEM_n = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_E = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_pt = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_m = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_eta = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_phi = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EtaOrigin = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_PhiOrigin = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_MOrigin = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EtaOriginEM = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_PhiOriginEM = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_MOriginEM = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_WIDTH = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_n90 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_Timing = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_LArQuality = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_nTrk = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_sumPtTrk = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_OriginIndex = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_HECQuality = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_NegativeE = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_AverageLArQF = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_YFlip12 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_YFlip23 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_BCH_CORR_CELL = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_BCH_CORR_DOTX = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_BCH_CORR_JET = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_BCH_CORR_JET_FORCELL = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_ENG_BAD_CELLS = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_N_BAD_CELLS = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_N_BAD_CELLS_CORR = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_BAD_CELLS_CORR_E = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_NumTowers = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_ootFracCells5 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_ootFracCells10 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_ootFracClusters5 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_ootFracClusters10 = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_SamplingMax = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_fracSamplingMax = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_hecf = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_tgap3f = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_isUgly = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_isBadLooseMinus = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_isBadLoose = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_isBadMedium = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_isBadTight = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emfrac = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_Offset = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EMJES = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EMJES_EtaCorr = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EMJESnooffset = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_GCWJES = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_GCWJES_EtaCorr = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_CB = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_LCJES = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emscale_E = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emscale_pt = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emscale_m = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emscale_eta = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_emscale_phi = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_jvtx_x = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_jvtx_y = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_jvtx_z = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_jvtxf = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_GSCFactorF = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_WidthFraction = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_PreSamplerB = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EMB1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EMB2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EMB3 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_PreSamplerE = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EME1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EME2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_EME3 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_HEC0 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_HEC1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_HEC2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_HEC3 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileBar0 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileBar1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileBar2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileGap1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileGap2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileGap3 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileExt0 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileExt1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_TileExt2 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_FCAL0 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_FCAL1 = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_e_FCAL2 = 0;
   std::vector<std::vector<float> > *BranchBase::AntiKt4TopoEM_shapeBins = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_Nconst = 0;
   std::vector<std::vector<float> > *BranchBase:: AntiKt4TopoEM_ptconst_default = 0;
   std::vector<std::vector<float> > *BranchBase:: AntiKt4TopoEM_econst_default = 0;
   std::vector<std::vector<float> > *BranchBase:: AntiKt4TopoEM_etaconst_default = 0;
   std::vector<std::vector<float> > *BranchBase:: AntiKt4TopoEM_phiconst_default = 0;
   std::vector<std::vector<float> > *BranchBase:: AntiKt4TopoEM_weightconst_default = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_constscale_E = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_constscale_pt = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_constscale_m = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_constscale_eta = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_constscale_phi = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_el_dr = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_el_matched = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_mu_dr = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_mu_matched = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_L1_dr = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_L1_matched = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_L2_dr = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_L2_matched = 0;
   std::vector<float> *BranchBase::   AntiKt4TopoEM_EF_dr = 0;
   std::vector<int> *BranchBase::     AntiKt4TopoEM_EF_matched = 0;

//////////////////////////////////////////////////////////////////////
//pPb 2012///////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
   Float_t BranchBase::   MET_RefFinal_etx;
   Float_t BranchBase::   MET_RefFinal_ety;
   Float_t BranchBase::   MET_RefFinal_phi;
   Float_t BranchBase::   MET_RefFinal_et;
   Float_t BranchBase::   MET_RefFinal_sumet;
   Float_t BranchBase::   MET_RefFinal_etx_CentralReg;
   Float_t BranchBase::   MET_RefFinal_ety_CentralReg;
   Float_t BranchBase::   MET_RefFinal_sumet_CentralReg;
   Float_t BranchBase::   MET_RefFinal_phi_CentralReg;
   Float_t BranchBase::   MET_RefFinal_etx_EndcapRegion;
   Float_t BranchBase::   MET_RefFinal_ety_EndcapRegion;
   Float_t BranchBase::   MET_RefFinal_sumet_EndcapRegion;
   Float_t BranchBase::   MET_RefFinal_phi_EndcapRegion;
   Float_t BranchBase::   MET_RefFinal_etx_ForwardReg;
   Float_t BranchBase::   MET_RefFinal_ety_ForwardReg;
   Float_t BranchBase::   MET_RefFinal_sumet_ForwardReg;
   Float_t BranchBase::   MET_RefFinal_phi_ForwardReg;



    std::vector<float> *BranchBase::   vx_err_x = 0;
    std::vector<float> *BranchBase::   vx_err_y = 0;
    std::vector<float> *BranchBase::   vx_err_z = 0;
    std::vector<float> *BranchBase::   trk_err_d0_wrtPV = 0;
    std::vector<float> *BranchBase::   trk_theta = 0;
    std::vector<float> *BranchBase::   trk_err_z0_wrtPV = 0;
    std::vector<float> *BranchBase::   trk_err_theta_wrtPV = 0;
    std::vector<float> *BranchBase::   trk_qoverp = 0;
    std::vector<float> *BranchBase::   trk_err_phi_wrtPV = 0;
    std::vector<float> *BranchBase::   trk_err_qoverp_wrtPV = 0;
    std::vector<float>  *BranchBase::   trk_cov_z0_theta = 0;
    std::vector<float>  *BranchBase::   trk_cov_z0_theta_wrtPV = 0;

    Bool_t BranchBase::	   	 	L1_TE10 = 0;	  
    Bool_t BranchBase::	   	 	L1_TE50 = 0;
    Bool_t BranchBase::	   	 	L1_TE20 = 0;
    Bool_t BranchBase::          	L1_ZDC_A_C = 0;
    Bool_t BranchBase::          	L1_MBTS_2 = 0;
    Bool_t BranchBase::          	L1_MBTS_1_1 = 0;
    Bool_t BranchBase::          	L1_MBTS_2_2 = 0;
    Bool_t BranchBase::          	L1_RD0_FILLED = 0; 
    Bool_t BranchBase::          	L1_RD1_FILLED = 0;
    Bool_t BranchBase::          	L1_TE0 = 0;
    Bool_t BranchBase::          	EF_mu4_MSonly_EFFS_L1TE50 = 0;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1TE50 = 0;
    Bool_t BranchBase::          	EF_mu13_MSonly_EFFS_L1TE20 = 0;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE20 = 0;
    Bool_t BranchBase::          	EF_mu13_MSonly_EFFS_L1TE50 = 0;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE50 = 0;
    Bool_t BranchBase::          	EF_mu10_MSonly_EFFS_L1TE50 = 0;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE50 = 0;
    Bool_t BranchBase::          	EF_mu13_MSonly_EFFS_L1TE10 = 0;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE10 = 0;
/////////////////////////////////////////////////////////////////////////////////////////
    std::vector<float> *BranchBase::   HIFlow_PsiHICaloUtilLayers = 0 ;
    std::vector<float> *BranchBase::   HIFlow_PsiEtHICaloUtilLayers = 0 ;
    Float_t BranchBase::         HIFlow_PsiPtrack = 0 ;
    Float_t BranchBase::         HIFlow_PsiNtrack = 0 ;
    Float_t BranchBase::         HIFlow_v2EMB1sil = 0 ;
    Float_t BranchBase::         HIFlow_v2FCAL0sil = 0 ;
    Float_t BranchBase::         HIFlow_v2track = 0 ;
    Float_t BranchBase::         HIFlow_PsiFCAL0_w = 0 ;
    Float_t BranchBase::         HIFlow_PsiPFCAL0_w = 0 ;
    Float_t BranchBase::         HIFlow_PsiNFCAL0_w = 0 ;
    std::vector<float> *BranchBase::   HIFlow_Meanv2_Psi_From_EMB1CaloCel_IDLayers = 0 ;
    std::vector<float> *BranchBase::   HIFlow_Meanv2_Psi_From_FCAL0CaloCel_IDLayers = 0 ;
    std::vector<float> *BranchBase::   HIFlow_Meanv2Et_Psi_From_EMB1CaloCel_IDLayers = 0 ;
    std::vector<float> *BranchBase::   HIFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_EMBP1_InDet_EMBN1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_EMBN1_InDet_EMBP1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_EMBP1_InDet_FCALN0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_EMBN1_InDet_FCALP0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_FCALN0_InDet_EMBN1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_FCALP0_InDet_EMBP1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_FCALP0_InDet_FCALN0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2Eta_Psi_From_FCALN0_InDet_FCALP0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_EMBP1_InDet_EMBN1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_EMBN1_InDet_EMBP1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_EMBP1_InDet_FCALN0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_EMBN1_InDet_FCALP0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_FCALN0_InDet_EMBN1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_FCALP0_InDet_EMBP1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_FCALP0_InDet_FCALN0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_v2EtaEt_Psi_From_FCALN0_InDet_FCALP0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_EtaEMBN1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_EtaEMBP1 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_EtaFCALN0 = 0 ;
    std::vector<float> *BranchBase::   HIFlow_EtaFCALP0 = 0 ;
    Int_t BranchBase::           mu_staco_n = 0 ;
    std::vector<float> *BranchBase::   mu_staco_E = 0 ;
    std::vector<float> *BranchBase::   mu_staco_pt = 0 ;
    std::vector<float> *BranchBase::   mu_staco_m = 0 ;
    std::vector<float> *BranchBase::   mu_staco_eta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_px = 0 ;
    std::vector<float> *BranchBase::   mu_staco_py = 0 ;
    std::vector<float> *BranchBase::   mu_staco_pz = 0 ;
    std::vector<float> *BranchBase::   mu_staco_charge = 0 ;
    std::vector<unsigned short> *BranchBase:: mu_staco_allauthor = 0 ;
    std::vector<int> *BranchBase::     mu_staco_author = 0 ;
    std::vector<float> *BranchBase::   mu_staco_beta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_isMuonLikelihood = 0 ;
    std::vector<float> *BranchBase::   mu_staco_matchchi2 = 0 ;
    std::vector<int> *BranchBase::     mu_staco_matchndof = 0 ;
    std::vector<float> *BranchBase::   mu_staco_etcone20 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_etcone30 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_etcone40 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_nucone20 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_nucone30 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_nucone40 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ptcone20 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ptcone30 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ptcone40 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_energyLossPar = 0 ;
    std::vector<float> *BranchBase::   mu_staco_energyLossErr = 0 ;
    std::vector<float> *BranchBase::   mu_staco_etCore = 0 ;
    std::vector<float> *BranchBase::   mu_staco_energyLossType = 0 ;
    std::vector<unsigned short> *BranchBase:: mu_staco_caloMuonIdTag = 0 ;
    std::vector<double> *BranchBase::  mu_staco_caloLRLikelihood = 0 ;
    std::vector<int> *BranchBase::     mu_staco_bestMatch = 0 ;
    std::vector<int> *BranchBase::     mu_staco_isStandAloneMuon = 0 ;
    std::vector<int> *BranchBase::     mu_staco_isCombinedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_staco_isLowPtReconstructedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_staco_isSegmentTaggedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_staco_isCaloMuonId = 0 ;
    std::vector<int> *BranchBase::     mu_staco_alsoFoundByLowPt = 0 ;
    std::vector<int> *BranchBase::     mu_staco_alsoFoundByCaloMuonId = 0 ;
    std::vector<int> *BranchBase::     mu_staco_loose = 0 ;
    std::vector<int> *BranchBase::     mu_staco_medium = 0 ;
    std::vector<int> *BranchBase::     mu_staco_tight = 0 ;
    std::vector<float> *BranchBase::   mu_staco_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cb_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cb_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cb_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cb_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cb_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_qoverp_exPV = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_SpaceTime_detID = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_t = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_tError = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_weight = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_x = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_y = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_SpaceTime_z = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_d0_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_d0_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_d0_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_d0_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_z0_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_z0_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_z0_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_phi_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_phi_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_cov_theta_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ms_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ms_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ms_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ms_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ms_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_id_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_me_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_ie_qoverp = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nOutliersOnTrack = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nBLHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nPixHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nBLSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nPixSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nPixHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nSCTSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nSCTHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTRTOutliers = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTRTHighTOutliers = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nGangedPixels = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nPixelDeadSensors = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nSCTDeadSensors = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTRTDeadStraws = 0 ;
    std::vector<int> *BranchBase::     mu_staco_expectBLayerHit = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nCSCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nCSCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nCSCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nCSCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTBIHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTBMHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTBOHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTBEEHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTBIS78Hits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTEIHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTEMHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTEOHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nMDTEEHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer1EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer2EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer3EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer1PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer2PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nRPCLayer3PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer1EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer2EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer3EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer4EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer1PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer2PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer3PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_nTGCLayer4PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_barrelSectors = 0 ;
    std::vector<int> *BranchBase::     mu_staco_endcapSectors = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackd0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackz0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackphi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracktheta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackqoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_d0_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_d0_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_d0_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_d0_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_z0_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_z0_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_z0_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_phi_theta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_phi_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackcov_theta_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackfitchi2 = 0 ;
    std::vector<int> *BranchBase::     mu_staco_trackfitndof = 0 ;
    std::vector<int> *BranchBase::     mu_staco_hastrack = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackd0beam = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackz0beam = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigd0beam = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigz0beam = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackd0pv = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackz0pv = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigd0pv = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigz0pv = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_d0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_z0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_sigd0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_sigz0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_d0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_z0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_trackz0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_tracksigz0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_staco_EFCB_dr = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFCB_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFCB_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFCB_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFCB_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFCB_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFCB_hasCB = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFCB_matched = 0 ;
    std::vector<float> *BranchBase::   mu_staco_EFMG_dr = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFMG_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFMG_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFMG_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFMG_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFMG_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFMG_hasMG = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFMG_matched = 0 ;
    std::vector<float> *BranchBase::   mu_staco_EFME_dr = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFME_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFME_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFME_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFME_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_staco_EFME_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_staco_EFME_hasME = 0 ;
    std::vector<int> *BranchBase::     mu_staco_EFME_matched = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_dr = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_pt = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_eta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_phi = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_id_pt = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L2CB_ms_pt = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L2CB_nPixHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L2CB_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L2CB_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L2CB_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L2CB_matched = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L1_dr = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L1_pt = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L1_eta = 0 ;
    std::vector<float> *BranchBase::   mu_staco_L1_phi = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_thrNumber = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_RoINumber = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_sectorAddress = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L1_firstCandidate = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L1_moreCandInRoI = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L1_moreCandInSector = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_source = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_hemisphere = 0 ;
    std::vector<short> *BranchBase::   mu_staco_L1_charge = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L1_vetoed = 0 ;
    std::vector<int> *BranchBase::     mu_staco_L1_matched = 0 ;
    Bool_t BranchBase::          EF_2g10_loose = 0 ;
    Bool_t BranchBase::          EF_2g5_loose = 0 ;
    Bool_t BranchBase::          EF_2g7_loose = 0 ;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_2mu4T_MSonly = 0 ;
    Bool_t BranchBase::          EF_2mu4_MSonly = 0 ;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1MU0 = 0 ;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_2mu6T_MSonly = 0 ;
    Bool_t BranchBase::          EF_2mu6_MSonly = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_MU6 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_MV = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_NL = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_NZ = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU11 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU4 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU4_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM10 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM12 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM14 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM16 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_MV_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_NL = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_NZ = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_TE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM4 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM5 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM5_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM7 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_MV = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_MV_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_NL = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_NZ = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_TE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU11 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU11_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU15 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU20 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_EMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_MV_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_TE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_VTE50 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU6 = 0 ;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          EF_SeededStreamerL1Calo = 0 ;
    Bool_t BranchBase::          EF_g10_loose = 0 ;
    Bool_t BranchBase::          EF_g10_loose_larcalib = 0 ;
    Bool_t BranchBase::          EF_g5_NoCut_cosmic = 0 ;
    Bool_t BranchBase::          EF_g5_loose = 0 ;
    Bool_t BranchBase::          EF_g5_loose_larcalib = 0 ;
    Bool_t BranchBase::          EF_g7_loose = 0 ;
    Bool_t BranchBase::          EF_mu10T_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu10_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1TE10 = 0 ;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1TE20 = 0 ;
    Bool_t BranchBase::          EF_mu13T_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu13_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu13_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_mu4T = 0 ;
    Bool_t BranchBase::          EF_mu4T_IDTrkNoCut = 0 ;
    Bool_t BranchBase::          EF_mu4T_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu4T_MSonly_L1TE50 = 0 ;
    Bool_t BranchBase::          EF_mu4T_MSonly_barrel = 0 ;
    Bool_t BranchBase::          EF_mu4T_MSonly_cosmic = 0 ;
    Bool_t BranchBase::          EF_mu4T_cosmic = 0 ;
    Bool_t BranchBase::          EF_mu4_L1VTE50 = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_L1TE50 = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_barrel = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_barrel_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_cosmic = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_j15_a2hi_EFFS_L1TE10 = 0 ;
    Bool_t BranchBase::          EF_mu4_MSonly_j15_a2hi_EFFS_matched = 0 ;
    Bool_t BranchBase::          EF_mu4_cosmic = 0 ;
    Bool_t BranchBase::          EF_mu4_mu2_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          EF_mu6T_MSonly = 0 ;
    Bool_t BranchBase::          EF_mu6_MSonly = 0 ;
//    Bool_t BranchBase::          EF_mu6_MSonly_L1TE50 = 0 ;
//    Bool_t BranchBase::          EF_mu6_L1VTE50 = 0 ;
    Bool_t BranchBase::          L1_2EM3 = 0 ;
    Bool_t BranchBase::          L1_2EM3_NL = 0 ;
    Bool_t BranchBase::          L1_2EM3_NZ = 0 ;
    Bool_t BranchBase::          L1_2EM5 = 0 ;
    Bool_t BranchBase::          L1_2MU0 = 0 ;
    Bool_t BranchBase::          L1_2MU0_EMPTY = 0 ;
    Bool_t BranchBase::          L1_2MU0_MU6 = 0 ;
    Bool_t BranchBase::          L1_2MU0_MV = 0 ;
    Bool_t BranchBase::          L1_2MU0_NL = 0 ;
    Bool_t BranchBase::          L1_2MU0_NZ = 0 ;
    Bool_t BranchBase::          L1_2MU11 = 0 ;
    Bool_t BranchBase::          L1_2MU20 = 0 ;
    Bool_t BranchBase::          L1_2MU4 = 0 ;
    Bool_t BranchBase::          L1_2MU4_EMPTY = 0 ;
    Bool_t BranchBase::          L1_2MU6 = 0 ;
    Bool_t BranchBase::          L1_2MU6_EMPTY = 0 ;
    Bool_t BranchBase::          L1_2MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L1_2MU6_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L1_2MU6_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L1_EM10 = 0 ;
    Bool_t BranchBase::          L1_EM12 = 0 ;
    Bool_t BranchBase::          L1_EM14 = 0 ;
    Bool_t BranchBase::          L1_EM16 = 0 ;
    Bool_t BranchBase::          L1_EM3 = 0 ;
    Bool_t BranchBase::          L1_EM3_EMPTY = 0 ;
    Bool_t BranchBase::          L1_EM3_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L1_EM3_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L1_EM3_NL = 0 ;
    Bool_t BranchBase::          L1_EM3_NZ = 0 ;
    Bool_t BranchBase::          L1_EM3_TE50 = 0 ;
    Bool_t BranchBase::          L1_EM3_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L1_EM3_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L1_EM3_VTE50 = 0 ;
    Bool_t BranchBase::          L1_EM4 = 0 ;
    Bool_t BranchBase::          L1_EM5 = 0 ;
    Bool_t BranchBase::          L1_EM5_EMPTY = 0 ;
    Bool_t BranchBase::          L1_EM7 = 0 ;
    Bool_t BranchBase::          L1_MU0 = 0 ;
    Bool_t BranchBase::          L1_MU0_EMPTY = 0 ;
    Bool_t BranchBase::          L1_MU0_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L1_MU0_MV = 0 ;
    Bool_t BranchBase::          L1_MU0_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L1_MU0_NL = 0 ;
    Bool_t BranchBase::          L1_MU0_NZ = 0 ;
    Bool_t BranchBase::          L1_MU0_TE50 = 0 ;
    Bool_t BranchBase::          L1_MU0_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L1_MU0_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L1_MU0_VTE50 = 0 ;
    Bool_t BranchBase::          L1_MU11 = 0 ;
    Bool_t BranchBase::          L1_MU11_EMPTY = 0 ;
    Bool_t BranchBase::          L1_MU15 = 0 ;
    Bool_t BranchBase::          L1_MU20 = 0 ;
    Bool_t BranchBase::          L1_MU4 = 0 ;
    Bool_t BranchBase::          L1_MU4_EMPTY = 0 ;
    Bool_t BranchBase::          L1_MU4_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L1_MU4_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L1_MU4_TE50 = 0 ;
    Bool_t BranchBase::          L1_MU4_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L1_MU4_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L1_MU4_VTE50 = 0 ;
    Bool_t BranchBase::          L1_MU6 = 0 ;
    Bool_t BranchBase::          L1_MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_2g10_loose = 0 ;
    Bool_t BranchBase::          L2_2g5_loose = 0 ;
    Bool_t BranchBase::          L2_2g7_loose = 0 ;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_2mu4T_MSonly = 0 ;
    Bool_t BranchBase::          L2_2mu4_MSonly = 0 ;
    Bool_t BranchBase::          L2_2mu4_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_2mu6T_MSonly = 0 ;
    Bool_t BranchBase::          L2_2mu6_MSonly = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3_NL = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3_NZ = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM5 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_MU6 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_MV = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_NL = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_NZ = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU11 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU4 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU4_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM10 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM12 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM14 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM16 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_NL = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_NZ = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_TE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM4 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM5 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM5_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM7 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_MV = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_NL = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_NZ = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_TE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU11 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU11_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU15 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU20 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_EMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_MV_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_TE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_VTE50 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU6 = 0 ;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY = 0 ;
    Bool_t BranchBase::          L2_SeededStreamerL1Calo = 0 ;
    Bool_t BranchBase::          L2_em3_empty_larcalib = 0 ;
    Bool_t BranchBase::          L2_em5_empty_larcalib = 0 ;
    Bool_t BranchBase::          L2_g10_loose = 0 ;
    Bool_t BranchBase::          L2_g5_NoCut_cosmic = 0 ;
    Bool_t BranchBase::          L2_g5_loose = 0 ;
    Bool_t BranchBase::          L2_g7_loose = 0 ;
    Bool_t BranchBase::          L2_mu10T_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu10_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu10_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_mu13T_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu13_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu13_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_mu4 = 0 ;
    Bool_t BranchBase::          L2_mu4T = 0 ;
    Bool_t BranchBase::          L2_mu4T_IDTrkNoCut = 0 ;
    Bool_t BranchBase::          L2_mu4T_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu4T_MSonly_L1TE50 = 0 ;
    Bool_t BranchBase::          L2_mu4T_MSonly_barrel = 0 ;
    Bool_t BranchBase::          L2_mu4T_MSonly_cosmic = 0 ;
    Bool_t BranchBase::          L2_mu4T_cal = 0 ;
    Bool_t BranchBase::          L2_mu4T_cosmic = 0 ;
    Bool_t BranchBase::          L2_mu4_IDTrkNoCut = 0 ;
    Bool_t BranchBase::          L2_mu4_L1VTE50 = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly_L1TE50 = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly_barrel = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly_barrel_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_mu4_MSonly_cosmic = 0 ;
    Bool_t BranchBase::          L2_mu4_cal_empty = 0 ;
    Bool_t BranchBase::          L2_mu4_cosmic = 0 ;
    Bool_t BranchBase::          L2_mu4_mu2_MSonly_EFFS_L1ZDC = 0 ;
    Bool_t BranchBase::          L2_mu6T_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu6_MSonly = 0 ;
    Bool_t BranchBase::          L2_mu6_cal = 0 ;
    Int_t BranchBase::           mu_muid_n = 0 ;
    std::vector<float> *BranchBase::   mu_muid_E = 0 ;
    std::vector<float> *BranchBase::   mu_muid_pt = 0 ;
    std::vector<float> *BranchBase::   mu_muid_m = 0 ;
    std::vector<float> *BranchBase::   mu_muid_eta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_px = 0 ;
    std::vector<float> *BranchBase::   mu_muid_py = 0 ;
    std::vector<float> *BranchBase::   mu_muid_pz = 0 ;
    std::vector<float> *BranchBase::   mu_muid_charge = 0 ;
    std::vector<unsigned short> *BranchBase:: mu_muid_allauthor = 0 ;
    std::vector<int> *BranchBase::     mu_muid_author = 0 ;
    std::vector<float> *BranchBase::   mu_muid_beta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_isMuonLikelihood = 0 ;
    std::vector<float> *BranchBase::   mu_muid_matchchi2 = 0 ;
    std::vector<int> *BranchBase::     mu_muid_matchndof = 0 ;
    std::vector<float> *BranchBase::   mu_muid_etcone20 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_etcone30 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_etcone40 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_nucone20 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_nucone30 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_nucone40 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ptcone20 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ptcone30 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ptcone40 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_energyLossPar = 0 ;
    std::vector<float> *BranchBase::   mu_muid_energyLossErr = 0 ;
    std::vector<float> *BranchBase::   mu_muid_etCore = 0 ;
    std::vector<float> *BranchBase::   mu_muid_energyLossType = 0 ;
    std::vector<unsigned short> *BranchBase:: mu_muid_caloMuonIdTag = 0 ;
    std::vector<double> *BranchBase::  mu_muid_caloLRLikelihood = 0 ;
    std::vector<int> *BranchBase::     mu_muid_bestMatch = 0 ;
    std::vector<int> *BranchBase::     mu_muid_isStandAloneMuon = 0 ;
    std::vector<int> *BranchBase::     mu_muid_isCombinedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_muid_isLowPtReconstructedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_muid_isSegmentTaggedMuon = 0 ;
    std::vector<int> *BranchBase::     mu_muid_isCaloMuonId = 0 ;
    std::vector<int> *BranchBase::     mu_muid_alsoFoundByLowPt = 0 ;
    std::vector<int> *BranchBase::     mu_muid_alsoFoundByCaloMuonId = 0 ;
    std::vector<int> *BranchBase::     mu_muid_loose = 0 ;
    std::vector<int> *BranchBase::     mu_muid_medium = 0 ;
    std::vector<int> *BranchBase::     mu_muid_tight = 0 ;
    std::vector<float> *BranchBase::   mu_muid_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cb_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cb_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cb_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cb_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cb_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_qoverp_exPV = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_SpaceTime_detID = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_t = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_tError = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_weight = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_x = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_y = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_SpaceTime_z = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_d0_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_d0_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_d0_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_d0_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_z0_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_z0_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_z0_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_phi_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_phi_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_cov_theta_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_cov_d0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_cov_z0_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_cov_phi_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_cov_theta_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_cov_qoverp_exPV = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ms_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ms_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ms_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ms_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ms_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_id_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_me_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_ie_qoverp = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nOutliersOnTrack = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nBLHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nPixHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nBLSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nPixSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nPixHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nSCTSharedHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nSCTHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTRTOutliers = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTRTHighTOutliers = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nGangedPixels = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nPixelDeadSensors = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nSCTDeadSensors = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTRTDeadStraws = 0 ;
    std::vector<int> *BranchBase::     mu_muid_expectBLayerHit = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nCSCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nCSCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nCSCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nCSCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCEtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCEtaHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCPhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCPhiHoles = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTBIHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTBMHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTBOHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTBEEHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTBIS78Hits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTEIHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTEMHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTEOHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nMDTEEHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer1EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer2EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer3EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer1PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer2PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nRPCLayer3PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer1EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer2EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer3EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer4EtaHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer1PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer2PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer3PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_nTGCLayer4PhiHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_barrelSectors = 0 ;
    std::vector<int> *BranchBase::     mu_muid_endcapSectors = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackd0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackz0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackphi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracktheta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackqoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_d0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_d0_z0 = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_d0_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_d0_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_d0_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_z0_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_z0_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_z0_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_phi_theta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_phi_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackcov_theta_qoverp = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackfitchi2 = 0 ;
    std::vector<int> *BranchBase::     mu_muid_trackfitndof = 0 ;
    std::vector<int> *BranchBase::     mu_muid_hastrack = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackd0beam = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackz0beam = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigd0beam = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigz0beam = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackd0pv = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackz0pv = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigd0pv = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigz0pv = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_d0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_z0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_sigd0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_sigz0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_d0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_z0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_trackz0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_tracksigz0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   mu_muid_EFCB_dr = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFCB_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFCB_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFCB_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFCB_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFCB_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFCB_hasCB = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFCB_matched = 0 ;
    std::vector<float> *BranchBase::   mu_muid_EFMG_dr = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFMG_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFMG_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFMG_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFMG_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFMG_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFMG_hasMG = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFMG_matched = 0 ;
    std::vector<float> *BranchBase::   mu_muid_EFME_dr = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFME_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFME_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFME_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFME_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: mu_muid_EFME_phi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: mu_muid_EFME_hasME = 0 ;
    std::vector<int> *BranchBase::     mu_muid_EFME_matched = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_dr = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_pt = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_eta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_phi = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_id_pt = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L2CB_ms_pt = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L2CB_nPixHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L2CB_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L2CB_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L2CB_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L2CB_matched = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L1_dr = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L1_pt = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L1_eta = 0 ;
    std::vector<float> *BranchBase::   mu_muid_L1_phi = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_thrNumber = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_RoINumber = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_sectorAddress = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L1_firstCandidate = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L1_moreCandInRoI = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L1_moreCandInSector = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_source = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_hemisphere = 0 ;
    std::vector<short> *BranchBase::   mu_muid_L1_charge = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L1_vetoed = 0 ;
    std::vector<int> *BranchBase::     mu_muid_L1_matched = 0 ;
    Int_t BranchBase::           muid_n = 0 ;
    std::vector<int> *BranchBase::     muid_nScatters = 0 ;
    std::vector<double> *BranchBase::  muid_scatSignificance = 0 ;
    std::vector<double> *BranchBase::  muid_neighbourSignificance = 0 ;
    std::vector<double> *BranchBase::  muid_eta = 0 ;
    std::vector<float> *BranchBase::mu_staco_truth_dr = 0;
    std::vector<float> *BranchBase::mu_staco_truth_E = 0;
    std::vector<float> *BranchBase::mu_staco_truth_pt = 0;
    std::vector<float> *BranchBase::mu_staco_truth_eta = 0;
    std::vector<float> *BranchBase::mu_staco_truth_phi = 0;
    std::vector<int> *BranchBase::mu_staco_truth_type = 0;
    std::vector<int> *BranchBase::mu_staco_truth_status = 0;
    std::vector<int> *BranchBase::mu_staco_truth_barcode = 0;
    std::vector<int> *BranchBase::mu_staco_truth_mothertype = 0;   
    std::vector<int> *BranchBase::mu_staco_truth_motherbarcode = 0;
    std::vector<int> *BranchBase::mu_staco_truth_matched = 0;
 
    std::vector<float> *BranchBase::mu_muid_truth_dr = 0;
    std::vector<float> *BranchBase::mu_muid_truth_E = 0;
    std::vector<float> *BranchBase::mu_muid_truth_pt = 0; 
    std::vector<float> *BranchBase::mu_muid_truth_eta = 0;
    std::vector<float> *BranchBase::mu_muid_truth_phi = 0;
    std::vector<int> *BranchBase::mu_muid_truth_type = 0;
    std::vector<int> *BranchBase::mu_muid_truth_status = 0;
    std::vector<int> *BranchBase::mu_muid_truth_barcode = 0;
    std::vector<int> *BranchBase::mu_muid_truth_mothertype = 0;
    std::vector<int> *BranchBase::mu_muid_truth_motherbarcode = 0;
    std::vector<int> *BranchBase::mu_muid_truth_matched = 0;


    UInt_t BranchBase::          trig_DB_SMK = 0 ;
    UInt_t BranchBase::          trig_DB_L1PSK = 0 ;
    UInt_t BranchBase::          trig_DB_HLTPSK = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_TAV = 0 ;
    std::vector<short> *BranchBase::   trig_L2_passedPhysics = 0 ;
    std::vector<short> *BranchBase::   trig_EF_passedPhysics = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_TBP = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_TAP = 0 ;
    std::vector<short> *BranchBase::   trig_L2_passedRaw = 0 ;
    std::vector<short> *BranchBase::   trig_EF_passedRaw = 0 ;
    Bool_t BranchBase::          trig_L2_truncated = 0 ;
    Bool_t BranchBase::          trig_EF_truncated = 0 ;
    std::vector<short> *BranchBase::   trig_L2_resurrected = 0 ;
    std::vector<short> *BranchBase::   trig_EF_resurrected = 0 ;
    std::vector<short> *BranchBase::   trig_L2_passedThrough = 0 ;
    std::vector<short> *BranchBase::   trig_EF_passedThrough = 0 ;
    std::vector<short> *BranchBase::   trig_L2_wasPrescaled = 0 ;
    std::vector<short> *BranchBase::   trig_L2_wasResurrected = 0 ;
    std::vector<short> *BranchBase::   trig_EF_wasPrescaled = 0 ;
    std::vector<short> *BranchBase::   trig_EF_wasResurrected = 0 ;
    Bool_t BranchBase::          L1_2J15 = 0 ;
    Bool_t BranchBase::          L1_J10 = 0 ;
    Bool_t BranchBase::          L1_J15 = 0 ;
    Bool_t BranchBase::          L1_J30 = 0 ;
    Bool_t BranchBase::          L1_J75 = 0 ;
    Int_t BranchBase::           trig_L1_jet_n = 0 ;
    std::vector<float> *BranchBase::   trig_L1_jet_eta = 0 ;
    std::vector<float> *BranchBase::   trig_L1_jet_phi = 0 ;
    std::vector< std::vector<std::string> > *BranchBase:: trig_L1_jet_thrNames = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_L1_jet_thrValues = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_jet_thrPattern = 0 ;
    std::vector<float> *BranchBase::   trig_L1_jet_et4x4 = 0 ;
    std::vector<float> *BranchBase::   trig_L1_jet_et6x6 = 0 ;
    std::vector<float> *BranchBase::   trig_L1_jet_et8x8 = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_jet_RoIWord = 0 ;
    Int_t BranchBase::           trig_L1_emtau_n = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_eta = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_phi = 0 ;
    std::vector< std::vector<std::string> > *BranchBase:: trig_L1_emtau_thrNames = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_L1_emtau_thrValues = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_core = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_EMClus = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_tauClus = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_EMIsol = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_hadIsol = 0 ;
    std::vector<float> *BranchBase::   trig_L1_emtau_hadCore = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_emtau_thrPattern = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_2EM3 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_2EM3_NL = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_2EM3_NZ = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_2EM5 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM10 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM12 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM14 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM16 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_FIRSTEMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_MV_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_NL = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_NZ = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_TE50 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_UNPAIRED_ISO = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_UNPAIRED_NONISO = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM3_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM4 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM5 = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM5_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_L1_emtau_L1_EM7 = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L1_emtau_RoIWord = 0 ;
    Int_t BranchBase::           trig_EF_jet_n = 0 ;
    std::vector<float> *BranchBase::   trig_EF_jet_E = 0 ;
    std::vector<float> *BranchBase::   trig_EF_jet_pt = 0 ;
    std::vector<float> *BranchBase::   trig_EF_jet_m = 0 ;
    std::vector<float> *BranchBase::   trig_EF_jet_eta = 0 ;
    std::vector<float> *BranchBase::   trig_EF_jet_phi = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_a4 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_a2 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_a4hi = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_a2hi = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_EF_jet_RoIword = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j100_a4hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j150_a4hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j15_a2hi_EFFS_L1J10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j15_a2hi_EFFS_L1TE10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j15_a2hi_EFFS_L1TE20 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j15_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j15_a4hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j20_a2hi_EFFS_L1J10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j20_a2hi_EFFS_L1TE10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j20_a2hi_EFFS_L1TE20 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j20_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j20_a4hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j25_a2hi_EFFS_L1J10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j25_a2hi_EFFS_L1TE10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j25_a2hi_EFFS_L1TE20 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j25_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j30_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j40_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j50_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j75_a2hi_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_jet_EF_j75_a4hi_EFFS_L1ZDC = 0 ;
    std::vector<std::string> *BranchBase::  trig_L1_esum_thrNames = 0 ;
    Float_t BranchBase::         trig_L1_esum_ExMiss = 0 ;
    Float_t BranchBase::         trig_L1_esum_EyMiss = 0 ;
    Float_t BranchBase::         trig_L1_esum_energyT = 0 ;
    Bool_t BranchBase::          trig_L1_esum_overflowX = 0 ;
    Bool_t BranchBase::          trig_L1_esum_overflowY = 0 ;
    Bool_t BranchBase::          trig_L1_esum_overflowT = 0 ;
    UInt_t BranchBase::          trig_L1_esum_RoIWord0 = 0 ;
    UInt_t BranchBase::          trig_L1_esum_RoIWord1 = 0 ;
    UInt_t BranchBase::          trig_L1_esum_RoIWord2 = 0 ;
    Float_t BranchBase::         trig_EF_met_MEx = 0 ;
    Float_t BranchBase::         trig_EF_met_MEy = 0 ;
    Float_t BranchBase::         trig_EF_met_MEz = 0 ;
    Float_t BranchBase::         trig_EF_met_sumEt = 0 ;
    Float_t BranchBase::         trig_EF_met_sumE = 0 ;
    Int_t BranchBase::           trig_EF_met_flag = 0 ;
    std::vector<std::string> *BranchBase::  trig_EF_met_nameOfComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_MExComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_MEyComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_MEzComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_sumEtComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_sumEComponent = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_componentCalib0 = 0 ;
    std::vector<float> *BranchBase::   trig_EF_met_componentCalib1 = 0 ;
    std::vector<short> *BranchBase::   trig_EF_met_sumOfSigns = 0 ;
    std::vector<unsigned short> *BranchBase:: trig_EF_met_usedChannels = 0 ;
    std::vector<short> *BranchBase::   trig_EF_met_status = 0 ;
    Int_t BranchBase::           trig_EF_trigmuonef_n = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu4T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu4_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu6T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_2mu6_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_MU6 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_MV = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_NL = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_NZ = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_NL = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_NZ = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_MSonly_L1TE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_MSonly_barrel = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4T_cosmic = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_L1VTE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_barrel = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_barrel_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_cosmic = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_L1TE10 = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_cosmic = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu4_mu2_MSonly_EFFS_L1ZDC = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu6T_MSonly = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu6_MSonly = 0 ;
//    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu6_L1VTE50  = 0 ;
//    std::vector<int> *BranchBase::     trig_EF_trigmuonef_EF_mu6_MSonly_L1TE50  = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_RoINum = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_NSegments = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_NMdtHits = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_NRpcHits = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_NTgcHits = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_NCscHits = 0 ;
    std::vector<float> *BranchBase::   trig_EF_trigmuonef_EtaPreviousLevel = 0 ;
    std::vector<float> *BranchBase::   trig_EF_trigmuonef_PhiPreviousLevel = 0 ;
    std::vector<int> *BranchBase::     trig_EF_trigmuonef_track_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MuonType = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_charge = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_d0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_z0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_chi2 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_chi2prob = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_posX = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_posY = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_MS_posZ = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NRpcHitsPhi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NTgcHitsPhi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NCscHitsPhi = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NRpcHitsEta = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NTgcHitsEta = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NCscHitsEta = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_NMdtHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_MS_hasMS = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_charge = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_d0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_z0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_chi2 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_chi2prob = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_posX = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_posY = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_SA_posZ = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_SA_hasSA = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_pt = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_eta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_charge = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_d0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_z0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_chi2 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_chi2prob = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_posX = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_posY = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_posZ = 0 ;
    std::vector< std::vector<float> > *BranchBase:: trig_EF_trigmuonef_track_CB_matchChi2 = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_CB_NIdSctHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_CB_NIdPixelHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_CB_NTrtHits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: trig_EF_trigmuonef_track_CB_hasCB = 0 ;
    Int_t BranchBase::           bcmRDO_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_channel = 0 ;
    std::vector<int> *BranchBase::     bcmRDO_nhits = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_pulse1pos = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_pulse1width = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_pulse2pos = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_pulse2width = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_lvl1a = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_bcid = 0 ;
    std::vector< std::vector<int> > *BranchBase:: bcmRDO_lvl1id = 0 ;
    UInt_t BranchBase::          ctpRDO_nBC = 0 ;
    UInt_t BranchBase::          ctpRDO_lvl1aBC = 0 ;
    UInt_t BranchBase::          ctpRDO_time_s = 0 ;
    UInt_t BranchBase::          ctpRDO_time_ns = 0 ;
    std::vector<unsigned int> *BranchBase:: ctpRDO_pit = 0 ;
    std::vector<unsigned int> *BranchBase:: ctpRDO_tbp = 0 ;
    std::vector<unsigned int> *BranchBase:: ctpRDO_tap = 0 ;
    std::vector<unsigned int> *BranchBase:: ctpRDO_tav = 0 ;
    UInt_t BranchBase::          ctp_decisionTypeWord = 0 ;
    std::vector<std::string> *BranchBase::  ctp_decisionItems = 0 ;
    std::vector<unsigned int> *BranchBase:: ctp_decisionWords = 0 ;
    UInt_t BranchBase::          ctp_nDecisionItems = 0 ;
    UInt_t BranchBase::          mbtsLvl2_nElements = 0 ;
    std::vector<float> *BranchBase::   mbtsLvl2_energies = 0 ;
    UInt_t BranchBase::          mbtsLvl2_ntimes = 0 ;
    std::vector<float> *BranchBase::   mbtsLvl2_times = 0 ;
    UInt_t BranchBase::          lvl2_sp_nElements = 0 ;
    UInt_t BranchBase::          lvl2_sp_hPixelClusTotBins = 0 ;
    Float_t BranchBase::         lvl2_sp_hPixelClusTotMin = 0 ;
    Float_t BranchBase::         lvl2_sp_hPixelClusTotMax = 0 ;
    UInt_t BranchBase::          lvl2_sp_hPixelClusSizeBins = 0 ;
    Float_t BranchBase::         lvl2_sp_hPixelClusSizeMin = 0 ;
    Float_t BranchBase::         lvl2_sp_hPixelClusSizeMax = 0 ;
    std::vector<float> *BranchBase::   lvl2_sp_pixelClusEndcapC_contents = 0 ;
    std::vector<float> *BranchBase::   lvl2_sp_pixelClusBarrel_contents = 0 ;
    std::vector<float> *BranchBase::   lvl2_sp_pixelClusEndcapA_contents = 0 ;
    std::vector<unsigned int> *BranchBase:: lvl2_sp_droppedPixelModuleIds = 0 ;
    UInt_t BranchBase::          lvl2_sp_sctSpEndcapC = 0 ;
    UInt_t BranchBase::          lvl2_sp_sctSpBarrel = 0 ;
    UInt_t BranchBase::          lvl2_sp_sctSpEndcapA = 0 ;
    std::vector<unsigned int> *BranchBase:: lvl2_sp_droppedSctModuleIds = 0 ;
    UInt_t BranchBase::          lvl2_mbTrt_nElements = 0 ;
    UInt_t BranchBase::          lvl2_mbTrt_hTotBins = 0 ;
    Float_t BranchBase::         lvl2_mbTrt_hTotMin = 0 ;
    Float_t BranchBase::         lvl2_mbTrt_hTotMax = 0 ;
    std::vector<float> *BranchBase::   lvl2_mbTrt_endcapC_contents = 0 ;
    std::vector<float> *BranchBase::   lvl2_mbTrt_barrel_contents = 0 ;
    std::vector<float> *BranchBase::   lvl2_mbTrt_endcapA_contents = 0 ;
    UInt_t BranchBase::          ef_trk_nElements = 0 ;
    UInt_t BranchBase::          ef_trk_hZ0Bins = 0 ;
    Float_t BranchBase::         ef_trk_hZ0Min = 0 ;
    Float_t BranchBase::         ef_trk_hZ0Max = 0 ;
    UInt_t BranchBase::          ef_trk_hPtBins = 0 ;
    Float_t BranchBase::         ef_trk_hPtMin = 0 ;
    Float_t BranchBase::         ef_trk_hPtMax = 0 ;
    UInt_t BranchBase::          ef_trk_hEtaBins = 0 ;
    Float_t BranchBase::         ef_trk_hEtaMin = 0 ;
    Float_t BranchBase::         ef_trk_hEtaMax = 0 ;
    UInt_t BranchBase::          ef_trk_hPhiBins = 0 ;
    Float_t BranchBase::         ef_trk_hPhiMin = 0 ;
    Float_t BranchBase::         ef_trk_hPhiMax = 0 ;
    std::vector<float> *BranchBase::   ef_trk_z0_pt_contents = 0 ;
    std::vector<float> *BranchBase::   ef_trk_eta_phi_contents = 0 ;
    Int_t BranchBase::           trig_L2_jet_n = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_E = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_eta = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_phi = 0 ;
    std::vector<unsigned int> *BranchBase:: trig_L2_jet_RoIWord = 0 ;
    std::vector<double> *BranchBase::  trig_L2_jet_ehad0 = 0 ;
    std::vector<double> *BranchBase::  trig_L2_jet_eem0 = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_nLeadingCells = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_hecf = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_jetQuality = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_emf = 0 ;
    std::vector<float> *BranchBase::   trig_L2_jet_jetTimeCells = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_fj10_empty_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_fj25_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_j10_empty_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_j200_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_j25_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_j50_larcalib = 0 ;
    std::vector<int> *BranchBase::     trig_L2_jet_L2_j95_larcalib = 0 ;
    Int_t BranchBase::           vx_n = 0 ;
    std::vector<float> *BranchBase::   vx_x = 0 ;
    std::vector<float> *BranchBase::   vx_y = 0 ;
    std::vector<float> *BranchBase::   vx_z = 0 ;
    std::vector<float> *BranchBase::   vx_cov_x = 0 ;
    std::vector<float> *BranchBase::   vx_cov_y = 0 ;
    std::vector<float> *BranchBase::   vx_cov_z = 0 ;
    std::vector<float> *BranchBase::   vx_cov_xy = 0 ;
    std::vector<float> *BranchBase::   vx_cov_xz = 0 ;
    std::vector<float> *BranchBase::   vx_cov_yz = 0 ;
    std::vector<int> *BranchBase::     vx_type = 0 ;
    std::vector<float> *BranchBase::   vx_chi2 = 0 ;
    std::vector<int> *BranchBase::     vx_ndof = 0 ;
    std::vector<float> *BranchBase::   vx_px = 0 ;
    std::vector<float> *BranchBase::   vx_py = 0 ;
    std::vector<float> *BranchBase::   vx_pz = 0 ;
    std::vector<float> *BranchBase::   vx_E = 0 ;
    std::vector<float> *BranchBase::   vx_m = 0 ;
    std::vector<int> *BranchBase::     vx_nTracks = 0 ;
    std::vector<float> *BranchBase::   vx_sumPt = 0 ;
    std::vector<int> *BranchBase::     vx_trk_n = 0 ;
    std::vector< std::vector<float> > *BranchBase:: vx_trk_weight = 0 ;
    std::vector< std::vector<int> > *BranchBase:: vx_trk_index = 0 ;
    Int_t BranchBase::           el_n = 0 ;
    std::vector<float> *BranchBase::   el_E = 0 ;
    std::vector<float> *BranchBase::   el_Et = 0 ;
    std::vector<float> *BranchBase::   el_pt = 0 ;
    std::vector<float> *BranchBase::   el_m = 0 ;
    std::vector<float> *BranchBase::   el_eta = 0 ;
    std::vector<float> *BranchBase::   el_phi = 0 ;
    std::vector<float> *BranchBase::   el_px = 0 ;
    std::vector<float> *BranchBase::   el_py = 0 ;
    std::vector<float> *BranchBase::   el_pz = 0 ;
    std::vector<float> *BranchBase::   el_charge = 0 ;
    std::vector<int> *BranchBase::     el_author = 0 ;
    std::vector<unsigned int> *BranchBase:: el_isEM = 0 ;
    std::vector<unsigned int> *BranchBase:: el_isEMLoose = 0 ;
    std::vector<unsigned int> *BranchBase:: el_isEMMedium = 0 ;
    std::vector<unsigned int> *BranchBase:: el_isEMTight = 0 ;
    std::vector<unsigned int> *BranchBase:: el_OQ = 0 ;
    std::vector<int> *BranchBase::     el_convFlag = 0 ;
    std::vector<int> *BranchBase::     el_isConv = 0 ;
    std::vector<int> *BranchBase::     el_nConv = 0 ;
    std::vector<int> *BranchBase::     el_nSingleTrackConv = 0 ;
    std::vector<int> *BranchBase::     el_nDoubleTrackConv = 0 ;
    std::vector<unsigned int> *BranchBase:: el_OQRecalc = 0 ;
    std::vector<int> *BranchBase::     el_mediumWithoutTrack = 0 ;
    std::vector<int> *BranchBase::     el_mediumIsoWithoutTrack = 0 ;
    std::vector<int> *BranchBase::     el_tightWithoutTrack = 0 ;
    std::vector<int> *BranchBase::     el_tightIsoWithoutTrack = 0 ;
    std::vector<int> *BranchBase::     el_loose = 0 ;
    std::vector<int> *BranchBase::     el_looseIso = 0 ;
    std::vector<int> *BranchBase::     el_medium = 0 ;
    std::vector<int> *BranchBase::     el_mediumIso = 0 ;
    std::vector<int> *BranchBase::     el_tight = 0 ;
    std::vector<int> *BranchBase::     el_tightIso = 0 ;
    std::vector<int> *BranchBase::     el_loosePP = 0 ;
    std::vector<int> *BranchBase::     el_loosePPIso = 0 ;
    std::vector<int> *BranchBase::     el_mediumPP = 0 ;
    std::vector<int> *BranchBase::     el_mediumPPIso = 0 ;
    std::vector<int> *BranchBase::     el_tightPP = 0 ;
    std::vector<int> *BranchBase::     el_tightPPIso = 0 ;
    std::vector<int> *BranchBase::     el_goodOQ = 0 ;
    std::vector<float> *BranchBase::   el_Ethad = 0 ;
    std::vector<float> *BranchBase::   el_Ethad1 = 0 ;
    std::vector<float> *BranchBase::   el_f1 = 0 ;
    std::vector<float> *BranchBase::   el_f1core = 0 ;
    std::vector<float> *BranchBase::   el_Emins1 = 0 ;
    std::vector<float> *BranchBase::   el_fside = 0 ;
    std::vector<float> *BranchBase::   el_Emax2 = 0 ;
    std::vector<float> *BranchBase::   el_ws3 = 0 ;
    std::vector<float> *BranchBase::   el_wstot = 0 ;
    std::vector<float> *BranchBase::   el_emaxs1 = 0 ;
    std::vector<float> *BranchBase::   el_deltaEs = 0 ;
    std::vector<float> *BranchBase::   el_E233 = 0 ;
    std::vector<float> *BranchBase::   el_E237 = 0 ;
    std::vector<float> *BranchBase::   el_E277 = 0 ;
    std::vector<float> *BranchBase::   el_weta2 = 0 ;
    std::vector<float> *BranchBase::   el_f3 = 0 ;
    std::vector<float> *BranchBase::   el_f3core = 0 ;
    std::vector<float> *BranchBase::   el_rphiallcalo = 0 ;
    std::vector<float> *BranchBase::   el_Etcone45 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone15 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone20 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone25 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone30 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone35 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone40 = 0 ;
    std::vector<float> *BranchBase::   el_ptcone20 = 0 ;
    std::vector<float> *BranchBase::   el_ptcone30 = 0 ;
    std::vector<float> *BranchBase::   el_ptcone40 = 0 ;
    std::vector<float> *BranchBase::   el_nucone20 = 0 ;
    std::vector<float> *BranchBase::   el_nucone30 = 0 ;
    std::vector<float> *BranchBase::   el_nucone40 = 0 ;
    std::vector<float> *BranchBase::   el_Etcone15_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_Etcone20_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_Etcone25_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_Etcone30_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_Etcone35_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_Etcone40_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   el_convanglematch = 0 ;
    std::vector<float> *BranchBase::   el_convtrackmatch = 0 ;
    std::vector<float> *BranchBase::   el_pos7 = 0 ;
    std::vector<float> *BranchBase::   el_etacorrmag = 0 ;
    std::vector<float> *BranchBase::   el_deltaeta1 = 0 ;
    std::vector<float> *BranchBase::   el_deltaeta2 = 0 ;
    std::vector<float> *BranchBase::   el_deltaphi2 = 0 ;
    std::vector<float> *BranchBase::   el_deltaphiRescaled = 0 ;
    std::vector<float> *BranchBase::   el_deltaPhiRot = 0 ;
    std::vector<float> *BranchBase::   el_expectHitInBLayer = 0 ;
    std::vector<float> *BranchBase::   el_trackd0_physics = 0 ;
    std::vector<float> *BranchBase::   el_etaSampling1 = 0 ;
    std::vector<float> *BranchBase::   el_reta = 0 ;
    std::vector<float> *BranchBase::   el_rphi = 0 ;
    std::vector<float> *BranchBase::   el_EtringnoisedR03sig2 = 0 ;
    std::vector<float> *BranchBase::   el_EtringnoisedR03sig3 = 0 ;
    std::vector<float> *BranchBase::   el_EtringnoisedR03sig4 = 0 ;
    std::vector<double> *BranchBase::  el_isolationlikelihoodjets = 0 ;
    std::vector<double> *BranchBase::  el_isolationlikelihoodhqelectrons = 0 ;
    std::vector<double> *BranchBase::  el_electronweight = 0 ;
    std::vector<double> *BranchBase::  el_electronbgweight = 0 ;
    std::vector<double> *BranchBase::  el_softeweight = 0 ;
    std::vector<double> *BranchBase::  el_softebgweight = 0 ;
    std::vector<double> *BranchBase::  el_neuralnet = 0 ;
    std::vector<double> *BranchBase::  el_Hmatrix = 0 ;
    std::vector<double> *BranchBase::  el_Hmatrix5 = 0 ;
    std::vector<double> *BranchBase::  el_adaboost = 0 ;
    std::vector<double> *BranchBase::  el_softeneuralnet = 0 ;
    std::vector<float> *BranchBase::   el_zvertex = 0 ;
    std::vector<float> *BranchBase::   el_errz = 0 ;
    std::vector<float> *BranchBase::   el_etap = 0 ;
    std::vector<float> *BranchBase::   el_depth = 0 ;
    std::vector<int> *BranchBase::     el_refittedTrack_n = 0 ;
    std::vector< std::vector<int> > *BranchBase:: el_refittedTrack_author = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_chi2 = 0 ;
    std::vector< std::vector<int> > *BranchBase:: el_refittedTrack_hasBrem = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_bremRadius = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_bremZ = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_bremRadiusErr = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_bremZErr = 0 ;
    std::vector< std::vector<int> > *BranchBase:: el_refittedTrack_bremFitStatus = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_qoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_d0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_z0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_theta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_LMqoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covd0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covz0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covphi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covtheta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covqoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covd0z0 = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covz0phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covz0theta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covz0qoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covd0phi = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covd0theta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covd0qoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covphitheta = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covphiqoverp = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_refittedTrack_covthetaqoverp = 0 ;
    std::vector<float> *BranchBase::   el_Es0 = 0 ;
    std::vector<float> *BranchBase::   el_etas0 = 0 ;
    std::vector<float> *BranchBase::   el_phis0 = 0 ;
    std::vector<float> *BranchBase::   el_Es1 = 0 ;
    std::vector<float> *BranchBase::   el_etas1 = 0 ;
    std::vector<float> *BranchBase::   el_phis1 = 0 ;
    std::vector<float> *BranchBase::   el_Es2 = 0 ;
    std::vector<float> *BranchBase::   el_etas2 = 0 ;
    std::vector<float> *BranchBase::   el_phis2 = 0 ;
    std::vector<float> *BranchBase::   el_Es3 = 0 ;
    std::vector<float> *BranchBase::   el_etas3 = 0 ;
    std::vector<float> *BranchBase::   el_phis3 = 0 ;
    std::vector<float> *BranchBase::   el_E_PreSamplerB = 0 ;
    std::vector<float> *BranchBase::   el_E_EMB1 = 0 ;
    std::vector<float> *BranchBase::   el_E_EMB2 = 0 ;
    std::vector<float> *BranchBase::   el_E_EMB3 = 0 ;
    std::vector<float> *BranchBase::   el_E_PreSamplerE = 0 ;
    std::vector<float> *BranchBase::   el_E_EME1 = 0 ;
    std::vector<float> *BranchBase::   el_E_EME2 = 0 ;
    std::vector<float> *BranchBase::   el_E_EME3 = 0 ;
    std::vector<float> *BranchBase::   el_E_HEC0 = 0 ;
    std::vector<float> *BranchBase::   el_E_HEC1 = 0 ;
    std::vector<float> *BranchBase::   el_E_HEC2 = 0 ;
    std::vector<float> *BranchBase::   el_E_HEC3 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileBar0 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileBar1 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileBar2 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileGap1 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileGap2 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileGap3 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileExt0 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileExt1 = 0 ;
    std::vector<float> *BranchBase::   el_E_TileExt2 = 0 ;
    std::vector<float> *BranchBase::   el_E_FCAL0 = 0 ;
    std::vector<float> *BranchBase::   el_E_FCAL1 = 0 ;
    std::vector<float> *BranchBase::   el_E_FCAL2 = 0 ;
    std::vector<float> *BranchBase::   el_cl_E = 0 ;
    std::vector<float> *BranchBase::   el_cl_pt = 0 ;
    std::vector<float> *BranchBase::   el_cl_eta = 0 ;
    std::vector<float> *BranchBase::   el_cl_phi = 0 ;
    std::vector<float> *BranchBase::   el_firstEdens = 0 ;
    std::vector<float> *BranchBase::   el_cellmaxfrac = 0 ;
    std::vector<float> *BranchBase::   el_longitudinal = 0 ;
    std::vector<float> *BranchBase::   el_secondlambda = 0 ;
    std::vector<float> *BranchBase::   el_lateral = 0 ;
    std::vector<float> *BranchBase::   el_secondR = 0 ;
    std::vector<float> *BranchBase::   el_centerlambda = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_Es0 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_etas0 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_phis0 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_Es1 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_etas1 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_phis1 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_Es2 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_etas2 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_phis2 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_Es3 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_etas3 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_phis3 = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_E = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_pt = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_eta = 0 ;
    std::vector<float> *BranchBase::   el_rawcl_phi = 0 ;
    std::vector<float> *BranchBase::   el_trackd0 = 0 ;
    std::vector<float> *BranchBase::   el_trackz0 = 0 ;
    std::vector<float> *BranchBase::   el_trackphi = 0 ;
    std::vector<float> *BranchBase::   el_tracktheta = 0 ;
    std::vector<float> *BranchBase::   el_trackqoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackpt = 0 ;
    std::vector<float> *BranchBase::   el_tracketa = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_d0 = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_z0 = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_phi = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_theta = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_qoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_d0_z0 = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_d0_phi = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_d0_theta = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_d0_qoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_z0_phi = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_z0_theta = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_z0_qoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_phi_theta = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_phi_qoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackcov_theta_qoverp = 0 ;
    std::vector<float> *BranchBase::   el_trackfitchi2 = 0 ;
    std::vector<int> *BranchBase::     el_trackfitndof = 0 ;
    std::vector<int> *BranchBase::     el_nBLHits = 0 ;
    std::vector<int> *BranchBase::     el_nPixHits = 0 ;
    std::vector<int> *BranchBase::     el_nSCTHits = 0 ;
    std::vector<int> *BranchBase::     el_nTRTHits = 0 ;
    std::vector<int> *BranchBase::     el_nTRTHighTHits = 0 ;
    std::vector<int> *BranchBase::     el_nPixHoles = 0 ;
    std::vector<int> *BranchBase::     el_nSCTHoles = 0 ;
    std::vector<int> *BranchBase::     el_nTRTHoles = 0 ;
    std::vector<int> *BranchBase::     el_nBLSharedHits = 0 ;
    std::vector<int> *BranchBase::     el_nPixSharedHits = 0 ;
    std::vector<int> *BranchBase::     el_nSCTSharedHits = 0 ;
    std::vector<int> *BranchBase::     el_nBLayerOutliers = 0 ;
    std::vector<int> *BranchBase::     el_nPixelOutliers = 0 ;
    std::vector<int> *BranchBase::     el_nSCTOutliers = 0 ;
    std::vector<int> *BranchBase::     el_nTRTOutliers = 0 ;
    std::vector<int> *BranchBase::     el_nTRTHighTOutliers = 0 ;
    std::vector<int> *BranchBase::     el_expectBLayerHit = 0 ;
    std::vector<int> *BranchBase::     el_nSiHits = 0 ;
    std::vector<float> *BranchBase::   el_TRTHighTHitsRatio = 0 ;
    std::vector<float> *BranchBase::   el_TRTHighTOutliersRatio = 0 ;
    std::vector<float> *BranchBase::   el_pixeldEdx = 0 ;
    std::vector<int> *BranchBase::     el_nGoodHitsPixeldEdx = 0 ;
    std::vector<float> *BranchBase::   el_massPixeldEdx = 0 ;
    std::vector< std::vector<float> > *BranchBase:: el_likelihoodsPixeldEdx = 0 ;
    std::vector<float> *BranchBase::   el_eProbabilityComb = 0 ;
    std::vector<float> *BranchBase::   el_eProbabilityHT = 0 ;
    std::vector<float> *BranchBase::   el_eProbabilityToT = 0 ;
    std::vector<float> *BranchBase::   el_eProbabilityBrem = 0 ;
    std::vector<float> *BranchBase::   el_vertweight = 0 ;
    std::vector<float> *BranchBase::   el_vertx = 0 ;
    std::vector<float> *BranchBase::   el_verty = 0 ;
    std::vector<float> *BranchBase::   el_vertz = 0 ;
    std::vector<float> *BranchBase::   el_trackd0beam = 0 ;
    std::vector<float> *BranchBase::   el_trackz0beam = 0 ;
    std::vector<float> *BranchBase::   el_tracksigd0beam = 0 ;
    std::vector<float> *BranchBase::   el_tracksigz0beam = 0 ;
    std::vector<float> *BranchBase::   el_trackd0pv = 0 ;
    std::vector<float> *BranchBase::   el_trackz0pv = 0 ;
    std::vector<float> *BranchBase::   el_tracksigd0pv = 0 ;
    std::vector<float> *BranchBase::   el_tracksigz0pv = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_d0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_z0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_sigd0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_sigz0_biasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_d0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_z0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_sigd0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackIPEstimate_sigz0_unbiasedpvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_trackz0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_tracksigd0pvunbiased = 0 ;
    std::vector<float> *BranchBase::   el_tracksigz0pvunbiased = 0 ;
    std::vector<int> *BranchBase::     el_hastrack = 0 ;
    std::vector<float> *BranchBase::   el_deltaEmax2 = 0 ;
    std::vector<float> *BranchBase::   el_calibHitsShowerDepth = 0 ;
    std::vector<unsigned int> *BranchBase:: el_isIso = 0 ;
    std::vector<float> *BranchBase::   el_mvaptcone20 = 0 ;
    std::vector<float> *BranchBase::   el_mvaptcone30 = 0 ;
    std::vector<float> *BranchBase::   el_mvaptcone40 = 0 ;
    Int_t BranchBase::           ph_n = 0 ;
    std::vector<float> *BranchBase::   ph_E = 0 ;
    std::vector<float> *BranchBase::   ph_Et = 0 ;
    std::vector<float> *BranchBase::   ph_pt = 0 ;
    std::vector<float> *BranchBase::   ph_m = 0 ;
    std::vector<float> *BranchBase::   ph_eta = 0 ;
    std::vector<float> *BranchBase::   ph_phi = 0 ;
    std::vector<float> *BranchBase::   ph_px = 0 ;
    std::vector<float> *BranchBase::   ph_py = 0 ;
    std::vector<float> *BranchBase::   ph_pz = 0 ;
    std::vector<int> *BranchBase::     ph_author = 0 ;
    std::vector<int> *BranchBase::     ph_isRecovered = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_isEM = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_isEMLoose = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_isEMMedium = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_isEMTight = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_OQ = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_OQRecalc = 0 ;
    std::vector<int> *BranchBase::     ph_loose = 0 ;
    std::vector<int> *BranchBase::     ph_looseIso = 0 ;
    std::vector<int> *BranchBase::     ph_tight = 0 ;
    std::vector<int> *BranchBase::     ph_tightIso = 0 ;
    std::vector<int> *BranchBase::     ph_looseAR = 0 ;
    std::vector<int> *BranchBase::     ph_looseARIso = 0 ;
    std::vector<int> *BranchBase::     ph_tightAR = 0 ;
    std::vector<int> *BranchBase::     ph_tightARIso = 0 ;
    std::vector<int> *BranchBase::     ph_goodOQ = 0 ;
    std::vector<float> *BranchBase::   ph_Ethad = 0 ;
    std::vector<float> *BranchBase::   ph_Ethad1 = 0 ;
    std::vector<float> *BranchBase::   ph_E033 = 0 ;
    std::vector<float> *BranchBase::   ph_f1 = 0 ;
    std::vector<float> *BranchBase::   ph_f1core = 0 ;
    std::vector<float> *BranchBase::   ph_Emins1 = 0 ;
    std::vector<float> *BranchBase::   ph_fside = 0 ;
    std::vector<float> *BranchBase::   ph_Emax2 = 0 ;
    std::vector<float> *BranchBase::   ph_ws3 = 0 ;
    std::vector<float> *BranchBase::   ph_wstot = 0 ;
    std::vector<float> *BranchBase::   ph_E132 = 0 ;
    std::vector<float> *BranchBase::   ph_E1152 = 0 ;
    std::vector<float> *BranchBase::   ph_emaxs1 = 0 ;
    std::vector<float> *BranchBase::   ph_deltaEs = 0 ;
    std::vector<float> *BranchBase::   ph_E233 = 0 ;
    std::vector<float> *BranchBase::   ph_E237 = 0 ;
    std::vector<float> *BranchBase::   ph_E277 = 0 ;
    std::vector<float> *BranchBase::   ph_weta2 = 0 ;
    std::vector<float> *BranchBase::   ph_f3 = 0 ;
    std::vector<float> *BranchBase::   ph_f3core = 0 ;
    std::vector<float> *BranchBase::   ph_rphiallcalo = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone45 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone15 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone20 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone25 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone30 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone35 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone40 = 0 ;
    std::vector<float> *BranchBase::   ph_ptcone20 = 0 ;
    std::vector<float> *BranchBase::   ph_ptcone30 = 0 ;
    std::vector<float> *BranchBase::   ph_ptcone40 = 0 ;
    std::vector<float> *BranchBase::   ph_nucone20 = 0 ;
    std::vector<float> *BranchBase::   ph_nucone30 = 0 ;
    std::vector<float> *BranchBase::   ph_nucone40 = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone15_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone20_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone25_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone30_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone35_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_Etcone40_pt_corrected = 0 ;
    std::vector<float> *BranchBase::   ph_convanglematch = 0 ;
    std::vector<float> *BranchBase::   ph_convtrackmatch = 0 ;
    std::vector<float> *BranchBase::   ph_reta = 0 ;
    std::vector<float> *BranchBase::   ph_rphi = 0 ;
    std::vector<float> *BranchBase::   ph_EtringnoisedR03sig2 = 0 ;
    std::vector<float> *BranchBase::   ph_EtringnoisedR03sig3 = 0 ;
    std::vector<float> *BranchBase::   ph_EtringnoisedR03sig4 = 0 ;
    std::vector<double> *BranchBase::  ph_isolationlikelihoodjets = 0 ;
    std::vector<double> *BranchBase::  ph_isolationlikelihoodhqelectrons = 0 ;
    std::vector<double> *BranchBase::  ph_loglikelihood = 0 ;
    std::vector<double> *BranchBase::  ph_photonweight = 0 ;
    std::vector<double> *BranchBase::  ph_photonbgweight = 0 ;
    std::vector<double> *BranchBase::  ph_neuralnet = 0 ;
    std::vector<double> *BranchBase::  ph_Hmatrix = 0 ;
    std::vector<double> *BranchBase::  ph_Hmatrix5 = 0 ;
    std::vector<double> *BranchBase::  ph_adaboost = 0 ;
    std::vector<float> *BranchBase::   ph_zvertex = 0 ;
    std::vector<float> *BranchBase::   ph_errz = 0 ;
    std::vector<float> *BranchBase::   ph_etap = 0 ;
    std::vector<float> *BranchBase::   ph_depth = 0 ;
    std::vector<float> *BranchBase::   ph_cl_E = 0 ;
    std::vector<float> *BranchBase::   ph_cl_pt = 0 ;
    std::vector<float> *BranchBase::   ph_cl_eta = 0 ;
    std::vector<float> *BranchBase::   ph_cl_phi = 0 ;
    std::vector<float> *BranchBase::   ph_Es0 = 0 ;
    std::vector<float> *BranchBase::   ph_etas0 = 0 ;
    std::vector<float> *BranchBase::   ph_phis0 = 0 ;
    std::vector<float> *BranchBase::   ph_Es1 = 0 ;
    std::vector<float> *BranchBase::   ph_etas1 = 0 ;
    std::vector<float> *BranchBase::   ph_phis1 = 0 ;
    std::vector<float> *BranchBase::   ph_Es2 = 0 ;
    std::vector<float> *BranchBase::   ph_etas2 = 0 ;
    std::vector<float> *BranchBase::   ph_phis2 = 0 ;
    std::vector<float> *BranchBase::   ph_Es3 = 0 ;
    std::vector<float> *BranchBase::   ph_etas3 = 0 ;
    std::vector<float> *BranchBase::   ph_phis3 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_Es0 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_etas0 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_phis0 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_Es1 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_etas1 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_phis1 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_Es2 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_etas2 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_phis2 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_Es3 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_etas3 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_phis3 = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_E = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_pt = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_eta = 0 ;
    std::vector<float> *BranchBase::   ph_rawcl_phi = 0 ;
    std::vector<float> *BranchBase::   ph_deltaEmax2 = 0 ;
    std::vector<float> *BranchBase::   ph_calibHitsShowerDepth = 0 ;
    std::vector<unsigned int> *BranchBase:: ph_isIso = 0 ;
    std::vector<float> *BranchBase::   ph_mvaptcone20 = 0 ;
    std::vector<float> *BranchBase::   ph_mvaptcone30 = 0 ;
    std::vector<float> *BranchBase::   ph_mvaptcone40 = 0 ;
    std::vector<float> *BranchBase::   ph_topoEtcone20 = 0 ;
    std::vector<float> *BranchBase::   ph_topoEtcone40 = 0 ;
    std::vector<float> *BranchBase::   ph_topoEtcone60 = 0 ;
    //truth info
        UInt_t BranchBase::			mc_channel_number = 0;
	UInt_t BranchBase:: 			mc_event_number = 0;
	Float_t BranchBase:: 			mc_event_weight = 0;
	Int_t BranchBase::			mcVx_n = 0;
	std::vector<float> *BranchBase::	mcVx_x = 0;
	std::vector<float> *BranchBase::   	mcVx_y = 0;
	std::vector<float> *BranchBase::       	mcVx_z = 0;
	Int_t BranchBase::			mc_n = 0;
	std::vector<float> *BranchBase::	mc_gen_E = 0;
	std::vector<float> *BranchBase::	mc_gen_pt = 0;
	std::vector<float> *BranchBase::	mc_gen_eta = 0;
	std::vector<float> *BranchBase::	mc_gen_phi = 0;
	std::vector<int> *BranchBase::		mc_gen_type = 0;
	std::vector<int> *BranchBase::		mc_gen_status = 0;
	std::vector<int> *BranchBase::		mc_gen_barcode = 0;
	std::vector<int> *BranchBase::		mc_gen_mothertype = 0;
	std::vector<int> *BranchBase::		mc_gen_motherbarcode = 0;
	std::vector<int> *BranchBase::		mc_perigee_ok = 0;
	std::vector<float> *BranchBase::	mc_perigee_d0 = 0;
	std::vector<float> *BranchBase::	mc_perigee_z0 = 0;
	std::vector<float> *BranchBase::	mc_perigee_phi = 0;
	std::vector<float> *BranchBase::	mc_perigee_theta = 0;
	std::vector<float> *BranchBase::	mc_perigee_qoverp = 0;
	std::vector<float> *BranchBase::	mc_charge = 0;
	Int_t BranchBase::			mc_unstable_n = 0;
	std::vector<float> *BranchBase::	mc_unstable_gen_pt = 0;
	std::vector<float> *BranchBase::	mc_unstable_gen_eta = 0;
	std::vector<float> *BranchBase::	mc_unstable_gen_phi = 0;
	std::vector<float> *BranchBase::	mc_unstable_gen_energy = 0;
	std::vector<int> *BranchBase::		mc_unstable_pdg = 0;
	std::vector<float> *BranchBase::	mc_unstable_charge = 0;
	std::vector<int> *BranchBase::		mc_unstable_barcode = 0;
	std::vector<int> *BranchBase::		mc_unstable_status = 0;
	std::vector<int> *BranchBase::		mc_unstable_mother_pdg = 0;

    //std::vector<std::vector<int> > *BranchBase::EF_TrigMuon_Reader_pPb = 0  ;
