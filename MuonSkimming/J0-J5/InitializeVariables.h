
    Float_t BranchBase::   Fcal_Et = 0 ;
    Int_t BranchBase::     hasHiPtMuon = 0;           //Mine
    Float_t BranchBase::   nu_pt_nocuts =0;                 //Mine
    Float_t BranchBase::   nu_phi_nocuts  =0;                //Mine

 
/////////////////////////////////////////////////

    Bool_t BranchBase::          EF_2g10_loose=0;
    Bool_t BranchBase::          EF_2g5_loose=0;
    Bool_t BranchBase::          EF_2g7_loose=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1MBTS=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_2mu2_MSonly_EFFS_L1ZDC_OR=0;
    Bool_t BranchBase::          EF_2mu4T_MSonly=0;
    Bool_t BranchBase::          EF_2mu4_MSonly=0;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1MU0=0;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_2mu4_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_2mu6T_MSonly=0;
    Bool_t BranchBase::          EF_2mu6_MSonly=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_MU6=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_MV=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_NL=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU0_NZ=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU11=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU4=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU4_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM10=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM12=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM14=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM16=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_FIRSTEMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_MV_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_NL=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_NZ=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_TE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_UNPAIRED_ISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM3_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM4=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM5=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM5_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_EM7=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_MV=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_MV_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_NL=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_NZ=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_TE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU0_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU11=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU11_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU15=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU20=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_EMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_MV_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_TE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU4_VTE50=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU6=0;
    Bool_t BranchBase::          EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          EF_SeededStreamerL1Calo=0;
    Bool_t BranchBase::          EF_e5_loose_L1VTE50=0;
    Bool_t BranchBase::          EF_g10_loose=0;
    Bool_t BranchBase::          EF_g10_loose_larcalib=0;
    Bool_t BranchBase::          EF_g5_NoCut_cosmic=0;
    Bool_t BranchBase::          EF_g5_loose=0;
    Bool_t BranchBase::          EF_g5_loose_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_g5_loose_L1TE50=0;
    Bool_t BranchBase::          EF_g5_loose_larcalib=0;
    Bool_t BranchBase::          EF_g7_loose=0;
    Bool_t BranchBase::          EF_g9_etcut=0;
    Bool_t BranchBase::          EF_mu10T_MSonly=0;
    Bool_t BranchBase::          EF_mu10_MSonly=0;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_mu10_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_mu13T_MSonly=0;
    Bool_t BranchBase::          EF_mu13_MSonly=0;
    Bool_t BranchBase::          EF_mu13_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_mu13_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_mu13_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_mu13_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_mu4=0;
    Bool_t BranchBase::          EF_mu4T=0;
    Bool_t BranchBase::          EF_mu4T_IDTrkNoCut=0;
    Bool_t BranchBase::          EF_mu4T_MSonly=0;
    Bool_t BranchBase::          EF_mu4T_MSonly_L1TE50=0;
    Bool_t BranchBase::          EF_mu4T_MSonly_barrel=0;
    Bool_t BranchBase::          EF_mu4T_MSonly_cosmic=0;
    Bool_t BranchBase::          EF_mu4T_cosmic=0;
    Bool_t BranchBase::          EF_mu4_IDTrkNoCut=0;
    Bool_t BranchBase::          EF_mu4_L1VTE50=0;
    Bool_t BranchBase::          EF_mu4_MSonly=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1MBTS=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1MU0_NZ=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1TE5_NZ=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_mu4_MSonly_EFFS_L1ZDC_OR=0;
    Bool_t BranchBase::          EF_mu4_MSonly_L1TE50=0;
    Bool_t BranchBase::          EF_mu4_MSonly_barrel=0;
    Bool_t BranchBase::          EF_mu4_MSonly_barrel_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_mu4_MSonly_barrel_L1TE50=0;
    Bool_t BranchBase::          EF_mu4_MSonly_cosmic=0;
    Bool_t BranchBase::          EF_mu4_MSonly_j15_a2hi_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_mu4_MSonly_j15_a2hi_EFFS_matched=0;
    Bool_t BranchBase::          EF_mu4_barrel_L1VTE50=0;
    Bool_t BranchBase::          EF_mu4_cosmic=0;
    Bool_t BranchBase::          EF_mu4_loose=0;
    Bool_t BranchBase::          EF_mu4_mu2_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          EF_mu4_mu2_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          EF_mu4_mu2_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          EF_mu4_mu2_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          EF_mu6=0;
    Bool_t BranchBase::          EF_mu6T=0;
    Bool_t BranchBase::          EF_mu6T_IDTrkNoCut=0;
    Bool_t BranchBase::          EF_mu6T_MSonly=0;
    Bool_t BranchBase::          EF_mu6_IDTrkNoCut=0;
    Bool_t BranchBase::          EF_mu6_L1VTE50=0;
    Bool_t BranchBase::          EF_mu6_MSonly=0;
    Bool_t BranchBase::          EF_mu6_MSonly_L1TE50=0;
    Bool_t BranchBase::          L1_2EM3=0;
    Bool_t BranchBase::          L1_2EM3_NL=0;
    Bool_t BranchBase::          L1_2EM3_NZ=0;
    Bool_t BranchBase::          L1_2EM5=0;
    Bool_t BranchBase::          L1_2MU0=0;
    Bool_t BranchBase::          L1_2MU0_EMPTY=0;
    Bool_t BranchBase::          L1_2MU0_MU6=0;
    Bool_t BranchBase::          L1_2MU0_MV=0;
    Bool_t BranchBase::          L1_2MU0_NL=0;
    Bool_t BranchBase::          L1_2MU0_NZ=0;
    Bool_t BranchBase::          L1_2MU11=0;
    Bool_t BranchBase::          L1_2MU20=0;
    Bool_t BranchBase::          L1_2MU4=0;
    Bool_t BranchBase::          L1_2MU4_EMPTY=0;
    Bool_t BranchBase::          L1_2MU6=0;
    Bool_t BranchBase::          L1_2MU6_EMPTY=0;
    Bool_t BranchBase::          L1_2MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          L1_2MU6_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L1_2MU6_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L1_EM10=0;
    Bool_t BranchBase::          L1_EM12=0;
    Bool_t BranchBase::          L1_EM14=0;
    Bool_t BranchBase::          L1_EM16=0;
    Bool_t BranchBase::          L1_EM3=0;
    Bool_t BranchBase::          L1_EM3_EMPTY=0;
    Bool_t BranchBase::          L1_EM3_FIRSTEMPTY=0;
    Bool_t BranchBase::          L1_EM3_MV_VTE50=0;
    Bool_t BranchBase::          L1_EM3_NL=0;
    Bool_t BranchBase::          L1_EM3_NZ=0;
    Bool_t BranchBase::          L1_EM3_TE50=0;
    Bool_t BranchBase::          L1_EM3_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L1_EM3_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L1_EM3_VTE50=0;
    Bool_t BranchBase::          L1_EM4=0;
    Bool_t BranchBase::          L1_EM5=0;
    Bool_t BranchBase::          L1_EM5_EMPTY=0;
    Bool_t BranchBase::          L1_EM7=0;
    Bool_t BranchBase::          L1_MU0=0;
    Bool_t BranchBase::          L1_MU0_EMPTY=0;
    Bool_t BranchBase::          L1_MU0_FIRSTEMPTY=0;
    Bool_t BranchBase::          L1_MU0_MV=0;
    Bool_t BranchBase::          L1_MU0_MV_VTE50=0;
    Bool_t BranchBase::          L1_MU0_NL=0;
    Bool_t BranchBase::          L1_MU0_NZ=0;
    Bool_t BranchBase::          L1_MU0_TE50=0;
    Bool_t BranchBase::          L1_MU0_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L1_MU0_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L1_MU0_VTE50=0;
    Bool_t BranchBase::          L1_MU11=0;
    Bool_t BranchBase::          L1_MU11_EMPTY=0;
    Bool_t BranchBase::          L1_MU15=0;
    Bool_t BranchBase::          L1_MU20=0;
    Bool_t BranchBase::          L1_MU4=0;
    Bool_t BranchBase::          L1_MU4_EMPTY=0;
    Bool_t BranchBase::          L1_MU4_FIRSTEMPTY=0;
    Bool_t BranchBase::          L1_MU4_MV_VTE50=0;
    Bool_t BranchBase::          L1_MU4_TE50=0;
    Bool_t BranchBase::          L1_MU4_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L1_MU4_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L1_MU4_VTE50=0;
    Bool_t BranchBase::          L1_MU6=0;
    Bool_t BranchBase::          L1_MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_2g10_loose=0;
    Bool_t BranchBase::          L2_2g5_loose=0;
    Bool_t BranchBase::          L2_2g7_loose=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1MBTS=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_2mu2_MSonly_EFFS_L1ZDC_OR=0;
    Bool_t BranchBase::          L2_2mu4T_MSonly=0;
    Bool_t BranchBase::          L2_2mu4_MSonly=0;
    Bool_t BranchBase::          L2_2mu4_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_2mu4_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_2mu4_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_2mu4_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_2mu6T_MSonly=0;
    Bool_t BranchBase::          L2_2mu6_MSonly=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3_NL=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM3_NZ=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2EM5=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_MU6=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_MV=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_NL=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU0_NZ=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU11=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU4=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU4_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM10=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM12=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM14=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM16=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_MV_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_NL=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_NZ=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_TE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM3_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM4=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM5=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM5_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_EM7=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_MV=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_MV_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_NL=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_NZ=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_TE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU0_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU11=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU11_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU15=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU20=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_EMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_MV_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_TE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_UNPAIRED_ISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU4_VTE50=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU6=0;
    Bool_t BranchBase::          L2_L1ItemStreamer_L1_MU6_FIRSTEMPTY=0;
    Bool_t BranchBase::          L2_SeededStreamerL1Calo=0;
    Bool_t BranchBase::          L2_e5_loose_L1VTE50=0;
    Bool_t BranchBase::          L2_em3_empty_larcalib=0;
    Bool_t BranchBase::          L2_em5_empty_larcalib=0;
    Bool_t BranchBase::          L2_g10_loose=0;
    Bool_t BranchBase::          L2_g5_NoCut_cosmic=0;
    Bool_t BranchBase::          L2_g5_loose=0;
    Bool_t BranchBase::          L2_g5_loose_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_g5_loose_L1TE50=0;
    Bool_t BranchBase::          L2_g7_loose=0;
    Bool_t BranchBase::          L2_g9_etcut=0;
    Bool_t BranchBase::          L2_mu10T_MSonly=0;
    Bool_t BranchBase::          L2_mu10_MSonly=0;
    Bool_t BranchBase::          L2_mu10_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_mu10_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_mu10_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_mu10_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_mu13T_MSonly=0;
    Bool_t BranchBase::          L2_mu13_MSonly=0;
    Bool_t BranchBase::          L2_mu13_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_mu13_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_mu13_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_mu13_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_mu4=0;
    Bool_t BranchBase::          L2_mu4T=0;
    Bool_t BranchBase::          L2_mu4T_IDTrkNoCut=0;
    Bool_t BranchBase::          L2_mu4T_MSonly=0;
    Bool_t BranchBase::          L2_mu4T_MSonly_L1TE50=0;
    Bool_t BranchBase::          L2_mu4T_MSonly_barrel=0;
    Bool_t BranchBase::          L2_mu4T_MSonly_cosmic=0;
    Bool_t BranchBase::          L2_mu4T_cal=0;
    Bool_t BranchBase::          L2_mu4T_cosmic=0;
    Bool_t BranchBase::          L2_mu4_IDTrkNoCut=0;
    Bool_t BranchBase::          L2_mu4_L1VTE50=0;
    Bool_t BranchBase::          L2_mu4_MSonly=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1MBTS=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1MU0_NZ=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1TE5_NZ=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_mu4_MSonly_EFFS_L1ZDC_OR=0;
    Bool_t BranchBase::          L2_mu4_MSonly_L1TE50=0;
    Bool_t BranchBase::          L2_mu4_MSonly_barrel=0;
    Bool_t BranchBase::          L2_mu4_MSonly_barrel_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_mu4_MSonly_barrel_L1TE50=0;
    Bool_t BranchBase::          L2_mu4_MSonly_cosmic=0;
    Bool_t BranchBase::          L2_mu4_barrel_L1VTE50=0;
    Bool_t BranchBase::          L2_mu4_cal_empty=0;
    Bool_t BranchBase::          L2_mu4_cosmic=0;
    Bool_t BranchBase::          L2_mu4_loose=0;
    Bool_t BranchBase::          L2_mu4_mu2_MSonly_EFFS_L1TE10=0;
    Bool_t BranchBase::          L2_mu4_mu2_MSonly_EFFS_L1TE20=0;
    Bool_t BranchBase::          L2_mu4_mu2_MSonly_EFFS_L1TE50=0;
    Bool_t BranchBase::          L2_mu4_mu2_MSonly_EFFS_L1ZDC=0;
    Bool_t BranchBase::          L2_mu6=0;
    Bool_t BranchBase::          L2_mu6T=0;
    Bool_t BranchBase::          L2_mu6T_IDTrkNoCut=0;
    Bool_t BranchBase::          L2_mu6T_MSonly=0;
    Bool_t BranchBase::          L2_mu6_IDTrkNoCut=0;
    Bool_t BranchBase::          L2_mu6_L1VTE50=0;
    Bool_t BranchBase::          L2_mu6_MSonly=0;
    Bool_t BranchBase::          L2_mu6_MSonly_L1TE50=0;
    Bool_t BranchBase::          L2_mu6_cal=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu2_MSonly_EFFS_L1ZDC_OR=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1MU0=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu4_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu6T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_2mu6_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_MU6=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_MV=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_NL=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU0_NZ=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU11=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU4_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_FIRSTEMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_ISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_2MU6_UNPAIRED_NONISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_FIRSTEMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_MV_VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_NL=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_NZ=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_ISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_UNPAIRED_NONISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU0_VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU11_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU15=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_EMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_FIRSTEMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_MV_VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_ISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_UNPAIRED_NONISO=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU4_VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_L1ItemStreamer_L1_MU6_FIRSTEMPTY=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu13_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_IDTrkNoCut=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_MSonly_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_MSonly_barrel=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_MSonly_cosmic=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4T_cosmic=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_IDTrkNoCut=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_L1VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1MU0_NZ=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1TE5_NZ=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_EFFS_L1ZDC_OR=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_barrel=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_barrel_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_barrel_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_cosmic=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_MSonly_j15_a2hi_EFFS_matched=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_barrel_L1VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_cosmic=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_loose=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_mu2_MSonly_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_mu2_MSonly_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_mu2_MSonly_EFFS_L1TE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu4_mu2_MSonly_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6T=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6T_IDTrkNoCut=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6T_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6_IDTrkNoCut=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6_L1VTE50=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6_MSonly=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_EF_mu6_MSonly_L1TE50=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_fj10_empty_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_fj20_Ecorr=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_fj20_Ecorr_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_fj25_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j10_empty_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j15_Ecorr=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j15_Ecorr_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j200_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j20_Ecorr=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j20_Ecorr_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j25_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j50_larcalib=0;
    std::vector<int>     *BranchBase::trig_L2_jet_L2_j95_larcalib=0;
    UInt_t BranchBase::          RunNumber=0;
    UInt_t BranchBase::          EventNumber=0;
    UInt_t BranchBase::          timestamp=0;
    UInt_t BranchBase::          timestamp_ns=0;
    UInt_t BranchBase::          lbn=0;
    UInt_t BranchBase::          bcid=0;
    UInt_t BranchBase::          detmask0=0;
    UInt_t BranchBase::          detmask1=0;
    Float_t BranchBase::         actualIntPerXing=0;
    Float_t BranchBase::         averageIntPerXing=0;
    UInt_t BranchBase::          mc_channel_number=0;
    UInt_t BranchBase::          mc_event_number=0;
    Float_t BranchBase::         mc_event_weight=0;
    UInt_t BranchBase::          pixelFlags=0;
    UInt_t BranchBase::          sctFlags=0;
    UInt_t BranchBase::          trtFlags=0;
    UInt_t BranchBase::          larFlags=0;
    UInt_t BranchBase::          tileFlags=0;
    UInt_t BranchBase::          muonFlags=0;
    UInt_t BranchBase::          fwdFlags=0;
    UInt_t BranchBase::          coreFlags=0;
    UInt_t BranchBase::          pixelError=0;
    UInt_t BranchBase::          sctError=0;
    UInt_t BranchBase::          trtError=0;
    UInt_t BranchBase::          larError=0;
    UInt_t BranchBase::          tileError=0;
    UInt_t BranchBase::          muonError=0;
    UInt_t BranchBase::          fwdError=0;
    UInt_t BranchBase::          coreError=0;
    Bool_t BranchBase::          isSimulation=0;
    Bool_t BranchBase::          isCalibration=0;
    Bool_t BranchBase::          isTestBeam=0;
    Int_t BranchBase::           mb_n=0;
    std::vector<float>   *BranchBase::mb_E=0;
    std::vector<float>   *BranchBase::mb_eta=0;
    std::vector<float>   *BranchBase::mb_phi=0;
    std::vector<float>   *BranchBase::mb_time=0;
    std::vector<int>     *BranchBase::mb_quality=0;
    std::vector<int>     *BranchBase::mb_type=0;
    std::vector<int>     *BranchBase::mb_module=0;
    std::vector<int>     *BranchBase::mb_channel=0;
    Float_t BranchBase::         mbtime_timeDiff=0;
    Float_t BranchBase::         mbtime_timeA=0;
    Float_t BranchBase::         mbtime_timeC=0;
    Int_t BranchBase::           mbtime_countA=0;
    Int_t BranchBase::           mbtime_countC=0;
    Int_t BranchBase::           cccEt_Et_Nh_Calo=0;
    Float_t BranchBase::         cccEt_Et_Eh_Calo=0;
    Int_t BranchBase::           cccEt_Et_Nh_EM=0;
    Float_t BranchBase::         cccEt_Et_Eh_EM=0;
    Int_t BranchBase::           cccEt_Et_Nh_HAD=0;
    Float_t BranchBase::         cccEt_Et_Eh_HAD=0;
    Int_t BranchBase::           cccEt_Et_Nh_PresB=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_PresB=0;
    Int_t BranchBase::           cccEt_Et_Nh_EMB=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_EMB=0;
    Int_t BranchBase::           cccEt_Et_Nh_EMEC=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_EMEC=0;
    Int_t BranchBase::           cccEt_Et_Nh_Tile=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_Tile=0;
    Int_t BranchBase::           cccEt_Et_Nh_TileGap=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_TileGap=0;
    Int_t BranchBase::           cccEt_Et_Nh_HEC=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_HEC=0;
    Int_t BranchBase::           cccEt_Et_Nh_FCal=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_FCal=0;
    Int_t BranchBase::           cccEt_Et_Nh_PresE=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_PresE=0;
    Int_t BranchBase::           cccEt_Et_Nh_Scint=0;
    std::vector<float>   *BranchBase::cccEt_Et_Eh_Scint=0;
    Int_t BranchBase::           cccEt_p_Nh_Calo=0;
    Float_t BranchBase::         cccEt_p_Eh_Calo=0;
    Int_t BranchBase::           cccEt_p_Nh_EM=0;
    Float_t BranchBase::         cccEt_p_Eh_EM=0;
    Int_t BranchBase::           cccEt_p_Nh_HAD=0;
    Float_t BranchBase::         cccEt_p_Eh_HAD=0;
    Int_t BranchBase::           cccEt_p_Nh_PresB=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_PresB=0;
    Int_t BranchBase::           cccEt_p_Nh_EMB=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_EMB=0;
    Int_t BranchBase::           cccEt_p_Nh_EMEC=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_EMEC=0;
    Int_t BranchBase::           cccEt_p_Nh_Tile=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_Tile=0;
    Int_t BranchBase::           cccEt_p_Nh_TileGap=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_TileGap=0;
    Int_t BranchBase::           cccEt_p_Nh_HEC=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_HEC=0;
    Int_t BranchBase::           cccEt_p_Nh_FCal=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_FCal=0;
    Int_t BranchBase::           cccEt_p_Nh_PresE=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_PresE=0;
    Int_t BranchBase::           cccEt_p_Nh_Scint=0;
    std::vector<float>   *BranchBase::cccEt_p_Eh_Scint=0;
    Int_t BranchBase::           cccEt_n_Nh_Calo=0;
    Float_t BranchBase::         cccEt_n_Eh_Calo=0;
    Int_t BranchBase::           cccEt_n_Nh_EM=0;
    Float_t BranchBase::         cccEt_n_Eh_EM=0;
    Int_t BranchBase::           cccEt_n_Nh_HAD=0;
    Float_t BranchBase::         cccEt_n_Eh_HAD=0;
    Int_t BranchBase::           cccEt_n_Nh_PresB=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_PresB=0;
    Int_t BranchBase::           cccEt_n_Nh_EMB=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_EMB=0;
    Int_t BranchBase::           cccEt_n_Nh_EMEC=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_EMEC=0;
    Int_t BranchBase::           cccEt_n_Nh_Tile=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_Tile=0;
    Int_t BranchBase::           cccEt_n_Nh_TileGap=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_TileGap=0;
    Int_t BranchBase::           cccEt_n_Nh_HEC=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_HEC=0;
    Int_t BranchBase::           cccEt_n_Nh_FCal=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_FCal=0;
    Int_t BranchBase::           cccEt_n_Nh_PresE=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_PresE=0;
    Int_t BranchBase::           cccEt_n_Nh_Scint=0;
    std::vector<float>   *BranchBase::cccEt_n_Eh_Scint=0;
    Int_t BranchBase::           lar_ncellA=0;
    Int_t BranchBase::           lar_ncellC=0;
    Float_t BranchBase::         lar_energyA=0;
    Float_t BranchBase::         lar_energyC=0;
    Float_t BranchBase::         lar_timeA=0;
    Float_t BranchBase::         lar_timeC=0;
    Float_t BranchBase::         lar_timeDiff=0;
    Int_t BranchBase::           TotalEt_n=0;
    std::vector<float>   *BranchBase::TotalEt_layer_eta=0;
    std::vector<float>   *BranchBase::TotalEt_layer_phi=0;
    std::vector<std::vector<float> > *BranchBase::TotalEt_layer_area=0;
    std::vector<std::vector<float> > *BranchBase::TotalEt_layer_sampling=0;
    std::vector<std::vector<float> > *BranchBase::TotalEt_layer_sampling_calib=0;
    Int_t BranchBase::           trk_n=0;
    std::vector<float>   *BranchBase::trk_pt=0;
    std::vector<float>   *BranchBase::trk_eta=0;
    std::vector<float>   *BranchBase::trk_d0_wrtPV=0;
    std::vector<float>   *BranchBase::trk_z0_wrtPV=0;
    std::vector<float>   *BranchBase::trk_phi_wrtPV=0;
    std::vector<float>   *BranchBase::trk_theta_wrtPV=0;
    std::vector<float>   *BranchBase::trk_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_d0_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_z0_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_phi_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_theta_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_d0_z0_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_d0_phi_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_d0_theta_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_d0_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_z0_phi_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_z0_theta_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_z0_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_phi_theta_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_phi_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_cov_theta_qoverp_wrtPV=0;
    std::vector<float>   *BranchBase::trk_chi2=0;
    std::vector<int>     *BranchBase::trk_ndof=0;
    std::vector<int>     *BranchBase::trk_nBLHits=0;
    std::vector<int>     *BranchBase::trk_nPixHits=0;
    std::vector<int>     *BranchBase::trk_nSCTHits=0;
    std::vector<int>     *BranchBase::trk_nTRTHits=0;
    std::vector<int>     *BranchBase::trk_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::trk_nPixHoles=0;
    std::vector<int>     *BranchBase::trk_nSCTHoles=0;
    std::vector<int>     *BranchBase::trk_nTRTHoles=0;
    std::vector<int>     *BranchBase::trk_expectBLayerHit=0;
    std::vector<int>     *BranchBase::trk_nMDTHits=0;
    std::vector<int>     *BranchBase::trk_nCSCEtaHits=0;
    std::vector<int>     *BranchBase::trk_nCSCPhiHits=0;
    std::vector<int>     *BranchBase::trk_nRPCEtaHits=0;
    std::vector<int>     *BranchBase::trk_nRPCPhiHits=0;
    std::vector<int>     *BranchBase::trk_nTGCEtaHits=0;
    std::vector<int>     *BranchBase::trk_nTGCPhiHits=0;
    std::vector<int>     *BranchBase::trk_nHits=0;
    std::vector<int>     *BranchBase::trk_nHoles=0;
    std::vector<int>     *BranchBase::trk_hitPattern=0;
    std::vector<float>   *BranchBase::trk_TRTHighTHitsRatio=0;
    std::vector<float>   *BranchBase::trk_TRTHighTOutliersRatio=0;
    std::vector<int>     *BranchBase::trk_fitter=0;
    std::vector<int>     *BranchBase::trk_patternReco1=0;
    std::vector<int>     *BranchBase::trk_patternReco2=0;
    std::vector<int>     *BranchBase::trk_seedFinder=0;
    std::vector<float>   *BranchBase::trk_mc_probability=0;
    std::vector<int>     *BranchBase::trk_mc_barcode=0;
    std::vector<int>     *BranchBase::trk_mc_index=0;
    Int_t BranchBase::           trt_RDO_countRDOhitsInEvent=0;
    Int_t BranchBase::           trt_RDO_countBarrelhitsInEvent=0;
    Int_t BranchBase::           trt_RDO_countEndCaphitsInEvent=0;
    Int_t BranchBase::           trt_RDO_countEndCapAhitsInEvent=0;
    Int_t BranchBase::           trt_RDO_countEndCapChitsInEvent=0;
    Int_t BranchBase::           trt_RDO_countdeadstraws=0;
    std::vector<std::vector<float> > *BranchBase::ItrEMNoFRBkgrtower_CaloBkgrEt=0;
    std::vector<std::vector<float> > *BranchBase::ItrEMNoFRBkgrtower_CaloBkgrRMS=0;
    std::vector<std::vector<int> > *BranchBase::ItrEMNoFRBkgrtower_CaloBkgrCounts=0;
    std::vector<float>   *BranchBase::ItrEMNoFRBkgrtower_CaloBkgrEta=0;
    std::vector<std::vector<float> > *BranchBase::ItrEMNoFRBkgrlayer_CaloBkgrEt=0;
    std::vector<std::vector<float> > *BranchBase::ItrEMNoFRBkgrlayer_CaloBkgrRMS=0;
    std::vector<std::vector<int> > *BranchBase::ItrEMNoFRBkgrlayer_CaloBkgrCounts=0;
    std::vector<float>   *BranchBase::ItrEMNoFRBkgrlayer_CaloBkgrEta=0;
    Int_t BranchBase::           antikt2HINoItr_n=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_E=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_Et=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_pt=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_m=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_eta=0;
    std::vector<float>   *BranchBase::antikt2HINoItr_phi=0;
    Int_t BranchBase::           antikt2HIItrNoFR_n=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_E=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_Et=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_pt=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_m=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_eta=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_phi=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt2HIItrNoFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrNoFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrNoFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrNoFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrNoFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_n90=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_Timing=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrNoFR_TileQuality=0;
    Int_t BranchBase::           antikt4HIItrNoFR_n=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_E=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_Et=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_pt=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_m=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_eta=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_phi=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt4HIItrNoFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrNoFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrNoFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrNoFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrNoFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_n90=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_Timing=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrNoFR_TileQuality=0;
    Int_t BranchBase::           EMClusterJets_n=0;
    std::vector<float>   *BranchBase::EMClusterJets_E=0;
    std::vector<float>   *BranchBase::EMClusterJets_Et=0;
    std::vector<float>   *BranchBase::EMClusterJets_pt=0;
    std::vector<float>   *BranchBase::EMClusterJets_m=0;
    std::vector<float>   *BranchBase::EMClusterJets_eta=0;
    std::vector<float>   *BranchBase::EMClusterJets_phi=0;
    Int_t BranchBase::           antikt2HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt2HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt2HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_TileQuality=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_Comb=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_IP2D=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_IP3D=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_SV0=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_SV1=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_SV2=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_JetProb=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_SoftMuonTag=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_JetFitterTagNN=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_JetFitterCOMBNN=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_weight_GbbNN=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_truth_label=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_dRminToB=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_dRminToC=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_dRminToT=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_truth_BHadronpdg=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_vx_x=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_vx_y=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_truth_vx_z=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_signOfIP=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_signOfZIP=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_ud0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_ud0ErrwrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_uz0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_assoctrk_uz0ErrwrtPriVtx=0;
    std::vector<std::vector<short> > *BranchBase::antikt2HIItrEMFR_flavor_component_gentruthlepton_origin=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_flavor_component_gentruthlepton_slbarcode=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_ip2d_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_ip2d_pb=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_ip2d_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_ip2d_ntrk=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_ip3d_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_ip3d_pb=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_ip3d_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_ip3d_ntrk=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jetprob_ntrk=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv1_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv1_pb=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv1_isValid=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv2_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv2_pb=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv2_isValid=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_pb=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_pc=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_isValid=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfitcomb_pu=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfitcomb_pb=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfitcomb_pc=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jfitcomb_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_gbbnn_nMatchingTracks=0;
    std::vector<double>  *BranchBase::antikt2HIItrEMFR_flavor_component_gbbnn_trkJetWidth=0;
    std::vector<double>  *BranchBase::antikt2HIItrEMFR_flavor_component_gbbnn_trkJetMaxDeltaR=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_nvtx=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_nvtx1t=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_ntrkAtVx=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_efrc=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_mass=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_sig3d=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_deltaPhi=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_jfit_deltaEta=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_d0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_d0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_z0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_z0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_w2D=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_w3D=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_pJP=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_pJPneg=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_grade=0;
    std::vector<std::vector<int> > *BranchBase::antikt2HIItrEMFR_flavor_component_ipplus_trk_isFromV0=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_n2t=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_mass=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_efrc=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_x=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_y=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_z=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_err_x=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_err_y=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_err_z=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_cov_xy=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_cov_xz=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_cov_yz=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_svp_chi2=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_ndof=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_svp_ntrk=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_ntrkv=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_ntrkj=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_n2t=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_mass=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_efrc=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_x=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_y=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_z=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_err_x=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_err_y=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_err_z=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_cov_xy=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_cov_xz=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_cov_yz=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_chi2=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_ndof=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_sv0p_ntrk=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_softmuoninfo_muon_w=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_softmuoninfo_muon_pTRel=0;
    std::vector<std::vector<float> > *BranchBase::antikt2HIItrEMFR_flavor_component_softmuoninfo_muon_dRJet=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_isValid=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_n2t=0;
    std::vector<int>     *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_nVtx=0;
    std::vector<float>   *BranchBase::antikt2HIItrEMFR_flavor_component_msvp_normWeightedDist=0;
    Int_t BranchBase::           antikt3HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt3HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt3HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt3HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_TileQuality=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_Comb=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_IP2D=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_IP3D=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_SV0=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_SV1=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_SV2=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_JetProb=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_SoftMuonTag=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_JetFitterTagNN=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_JetFitterCOMBNN=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_weight_GbbNN=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_truth_label=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_dRminToB=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_dRminToC=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_dRminToT=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_truth_BHadronpdg=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_vx_x=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_vx_y=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_truth_vx_z=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_signOfIP=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_signOfZIP=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_ud0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_ud0ErrwrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_uz0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_assoctrk_uz0ErrwrtPriVtx=0;
    std::vector<std::vector<short> > *BranchBase::antikt3HIItrEMFR_flavor_component_gentruthlepton_origin=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_flavor_component_gentruthlepton_slbarcode=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_ip2d_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_ip2d_pb=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_ip2d_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_ip2d_ntrk=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_ip3d_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_ip3d_pb=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_ip3d_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_ip3d_ntrk=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jetprob_ntrk=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv1_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv1_pb=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv1_isValid=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv2_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv2_pb=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv2_isValid=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_pb=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_pc=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_isValid=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfitcomb_pu=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfitcomb_pb=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfitcomb_pc=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jfitcomb_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_gbbnn_nMatchingTracks=0;
    std::vector<double>  *BranchBase::antikt3HIItrEMFR_flavor_component_gbbnn_trkJetWidth=0;
    std::vector<double>  *BranchBase::antikt3HIItrEMFR_flavor_component_gbbnn_trkJetMaxDeltaR=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_nvtx=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_nvtx1t=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_ntrkAtVx=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_efrc=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_mass=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_sig3d=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_deltaPhi=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_jfit_deltaEta=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_d0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_d0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_z0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_z0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_w2D=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_w3D=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_pJP=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_pJPneg=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_grade=0;
    std::vector<std::vector<int> > *BranchBase::antikt3HIItrEMFR_flavor_component_ipplus_trk_isFromV0=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_n2t=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_mass=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_efrc=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_x=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_y=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_z=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_err_x=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_err_y=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_err_z=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_cov_xy=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_cov_xz=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_cov_yz=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_svp_chi2=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_ndof=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_svp_ntrk=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_ntrkv=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_ntrkj=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_n2t=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_mass=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_efrc=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_x=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_y=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_z=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_err_x=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_err_y=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_err_z=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_cov_xy=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_cov_xz=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_cov_yz=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_chi2=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_ndof=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_sv0p_ntrk=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_softmuoninfo_muon_w=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_softmuoninfo_muon_pTRel=0;
    std::vector<std::vector<float> > *BranchBase::antikt3HIItrEMFR_flavor_component_softmuoninfo_muon_dRJet=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_isValid=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_n2t=0;
    std::vector<int>     *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_nVtx=0;
    std::vector<float>   *BranchBase::antikt3HIItrEMFR_flavor_component_msvp_normWeightedDist=0;
    Int_t BranchBase::           antikt4HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt4HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt4HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_TileQuality=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_Comb=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_IP2D=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_IP3D=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_SV0=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_SV1=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_SV2=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_JetProb=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_SoftMuonTag=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_JetFitterTagNN=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_JetFitterCOMBNN=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_weight_GbbNN=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_truth_label=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_dRminToB=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_dRminToC=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_dRminToT=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_truth_BHadronpdg=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_vx_x=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_vx_y=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_truth_vx_z=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_signOfIP=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_signOfZIP=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_ud0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_ud0ErrwrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_uz0wrtPriVtx=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_assoctrk_uz0ErrwrtPriVtx=0;
    std::vector<std::vector<short> > *BranchBase::antikt4HIItrEMFR_flavor_component_gentruthlepton_origin=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_flavor_component_gentruthlepton_slbarcode=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_ip2d_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_ip2d_pb=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_ip2d_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_ip2d_ntrk=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_ip3d_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_ip3d_pb=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_ip3d_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_ip3d_ntrk=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jetprob_ntrk=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv1_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv1_pb=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv1_isValid=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv2_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv2_pb=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv2_isValid=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_pb=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_pc=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_isValid=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfitcomb_pu=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfitcomb_pb=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfitcomb_pc=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jfitcomb_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_gbbnn_nMatchingTracks=0;
    std::vector<double>  *BranchBase::antikt4HIItrEMFR_flavor_component_gbbnn_trkJetWidth=0;
    std::vector<double>  *BranchBase::antikt4HIItrEMFR_flavor_component_gbbnn_trkJetMaxDeltaR=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_nvtx=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_nvtx1t=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_ntrkAtVx=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_efrc=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_mass=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_sig3d=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_deltaPhi=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_jfit_deltaEta=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_d0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_d0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_z0val=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_z0sig=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_w2D=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_w3D=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_pJP=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_pJPneg=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_grade=0;
    std::vector<std::vector<int> > *BranchBase::antikt4HIItrEMFR_flavor_component_ipplus_trk_isFromV0=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_n2t=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_mass=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_efrc=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_x=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_y=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_z=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_err_x=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_err_y=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_err_z=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_cov_xy=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_cov_xz=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_cov_yz=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_svp_chi2=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_ndof=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_svp_ntrk=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_ntrkv=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_ntrkj=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_n2t=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_mass=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_efrc=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_x=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_y=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_z=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_err_x=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_err_y=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_err_z=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_cov_xy=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_cov_xz=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_cov_yz=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_chi2=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_ndof=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_sv0p_ntrk=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_softmuoninfo_muon_w=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_softmuoninfo_muon_pTRel=0;
    std::vector<std::vector<float> > *BranchBase::antikt4HIItrEMFR_flavor_component_softmuoninfo_muon_dRJet=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_isValid=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_ntrkv=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_ntrkj=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_n2t=0;
    std::vector<int>     *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_nVtx=0;
    std::vector<float>   *BranchBase::antikt4HIItrEMFR_flavor_component_msvp_normWeightedDist=0;
    Int_t BranchBase::           antikt5HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt5HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt5HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt5HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt5HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt5HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt5HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt5HIItrEMFR_TileQuality=0;
    Int_t BranchBase::           antikt6HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt6HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt6HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt6HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt6HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt6HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt6HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt6HIItrEMFR_TileQuality=0;
    Int_t BranchBase::           antikt8HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt8HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt8HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt8HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt8HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt8HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt8HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt8HIItrEMFR_TileQuality=0;
    Int_t BranchBase::           antikt10HIItrEM_n=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_E=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_Et=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_pt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_m=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_eta=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_phi=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_NoFlow=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_PassedFR=0;
    std::vector<int>     *BranchBase::antikt10HIItrEM_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEM_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEM_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEM_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEM_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_n90=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_n90constituents=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_Timing=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_LArQuality=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_HECQuality=0;
    std::vector<float>   *BranchBase::antikt10HIItrEM_TileQuality=0;
    Int_t BranchBase::           antikt10HIItrEMFR_n=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_E=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_Et=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_pt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_m=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_eta=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_phi=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_SubtractedEt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_CryoCorr=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_NoFlow=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_UncalibEt=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_PassedFR=0;
    std::vector<int>     *BranchBase::antikt10HIItrEMFR_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_const_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_sampling_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_sampling_et_unsubtr=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEMFR_bad_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_bad_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_bad_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEMFR_empty_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_empty_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_empty_cell_area=0;
    std::vector<std::vector<int> > *BranchBase::antikt10HIItrEMFR_total_cell_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_total_cell_et=0;
    std::vector<std::vector<float> > *BranchBase::antikt10HIItrEMFR_total_cell_area=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_n90=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_fracSamplingMax=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_SamplingMax=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_n90constituents=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_Timing=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_LArQuality=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_HECQuality=0;
    std::vector<float>   *BranchBase::antikt10HIItrEMFR_TileQuality=0;
    Int_t BranchBase::           antikt4Track_n=0;
    std::vector<float>   *BranchBase::antikt4Track_E=0;
    std::vector<float>   *BranchBase::antikt4Track_pt=0;
    std::vector<float>   *BranchBase::antikt4Track_m=0;
    std::vector<float>   *BranchBase::antikt4Track_eta=0;
    std::vector<float>   *BranchBase::antikt4Track_phi=0;
    std::vector<int>     *BranchBase::antikt4Track_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_pt=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_chi2=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_d0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_z0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_phi0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_theta_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt4Track_const_qop=0;
    std::vector<std::vector<int> > *BranchBase::antikt4Track_const_ndof=0;
    std::vector<std::vector<int> > *BranchBase::antikt4Track_const_nBLayerHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt4Track_const_nPixelHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt4Track_const_nSCTHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt4Track_const_nTRTHits=0;
    Int_t BranchBase::           antikt6Track_n=0;
    std::vector<float>   *BranchBase::antikt6Track_E=0;
    std::vector<float>   *BranchBase::antikt6Track_pt=0;
    std::vector<float>   *BranchBase::antikt6Track_m=0;
    std::vector<float>   *BranchBase::antikt6Track_eta=0;
    std::vector<float>   *BranchBase::antikt6Track_phi=0;
    std::vector<int>     *BranchBase::antikt6Track_const_n=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_pt=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_eta=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_phi=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_chi2=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_d0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_z0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_phi0_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_theta_wrtPV=0;
    std::vector<std::vector<float> > *BranchBase::antikt6Track_const_qop=0;
    std::vector<std::vector<int> > *BranchBase::antikt6Track_const_ndof=0;
    std::vector<std::vector<int> > *BranchBase::antikt6Track_const_nBLayerHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt6Track_const_nPixelHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt6Track_const_nSCTHits=0;
    std::vector<std::vector<int> > *BranchBase::antikt6Track_const_nTRTHits=0;
    Int_t BranchBase::           antikt2Truth_n=0;
    std::vector<float>   *BranchBase::antikt2Truth_E=0;
    std::vector<float>   *BranchBase::antikt2Truth_Et=0;
    std::vector<float>   *BranchBase::antikt2Truth_pt=0;
    std::vector<float>   *BranchBase::antikt2Truth_m=0;
    std::vector<float>   *BranchBase::antikt2Truth_eta=0;
    std::vector<float>   *BranchBase::antikt2Truth_phi=0;
    Int_t BranchBase::           antikt3Truth_n=0;
    std::vector<float>   *BranchBase::antikt3Truth_E=0;
    std::vector<float>   *BranchBase::antikt3Truth_Et=0;
    std::vector<float>   *BranchBase::antikt3Truth_pt=0;
    std::vector<float>   *BranchBase::antikt3Truth_m=0;
    std::vector<float>   *BranchBase::antikt3Truth_eta=0;
    std::vector<float>   *BranchBase::antikt3Truth_phi=0;
    Int_t BranchBase::           antikt4Truth_n=0;
    std::vector<float>   *BranchBase::antikt4Truth_E=0;
    std::vector<float>   *BranchBase::antikt4Truth_Et=0;
    std::vector<float>   *BranchBase::antikt4Truth_pt=0;
    std::vector<float>   *BranchBase::antikt4Truth_m=0;
    std::vector<float>   *BranchBase::antikt4Truth_eta=0;
    std::vector<float>   *BranchBase::antikt4Truth_phi=0;
    Int_t BranchBase::           antikt5Truth_n=0;
    std::vector<float>   *BranchBase::antikt5Truth_E=0;
    std::vector<float>   *BranchBase::antikt5Truth_Et=0;
    std::vector<float>   *BranchBase::antikt5Truth_pt=0;
    std::vector<float>   *BranchBase::antikt5Truth_m=0;
    std::vector<float>   *BranchBase::antikt5Truth_eta=0;
    std::vector<float>   *BranchBase::antikt5Truth_phi=0;
    Int_t BranchBase::           antikt6Truth_n=0;
    std::vector<float>   *BranchBase::antikt6Truth_E=0;
    std::vector<float>   *BranchBase::antikt6Truth_Et=0;
    std::vector<float>   *BranchBase::antikt6Truth_pt=0;
    std::vector<float>   *BranchBase::antikt6Truth_m=0;
    std::vector<float>   *BranchBase::antikt6Truth_eta=0;
    std::vector<float>   *BranchBase::antikt6Truth_phi=0;
    Int_t BranchBase::           antikt8Truth_n=0;
    std::vector<float>   *BranchBase::antikt8Truth_E=0;
    std::vector<float>   *BranchBase::antikt8Truth_Et=0;
    std::vector<float>   *BranchBase::antikt8Truth_pt=0;
    std::vector<float>   *BranchBase::antikt8Truth_m=0;
    std::vector<float>   *BranchBase::antikt8Truth_eta=0;
    std::vector<float>   *BranchBase::antikt8Truth_phi=0;
    Int_t BranchBase::           antikt10Truth_n=0;
    std::vector<float>   *BranchBase::antikt10Truth_E=0;
    std::vector<float>   *BranchBase::antikt10Truth_Et=0;
    std::vector<float>   *BranchBase::antikt10Truth_pt=0;
    std::vector<float>   *BranchBase::antikt10Truth_m=0;
    std::vector<float>   *BranchBase::antikt10Truth_eta=0;
    std::vector<float>   *BranchBase::antikt10Truth_phi=0;
    Float_t BranchBase::         JetFlow_PsiFCAL0_w=0;
    Float_t BranchBase::         JetFlow_PsiPFCAL0_w=0;
    Float_t BranchBase::         JetFlow_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::JetFlow_EtInLayer=0;
    std::vector<float>   *BranchBase::JetFlow_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         JetFlow_AvgV2fromCalo=0;
    Float_t BranchBase::         HIFlow_v1_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v1_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v1_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v1_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v1_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v1_AvgV2fromCalo=0;
    Float_t BranchBase::         HIFlow_v2_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v2_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v2_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v2_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v2_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v2_AvgV2fromCalo=0;
    std::vector<float>   *BranchBase::HIFlow_v2_PsiHICaloUtilLayers=0;
    std::vector<float>   *BranchBase::HIFlow_v2_PsiEtHICaloUtilLayers=0;
    Float_t BranchBase::         HIFlow_v2_PsiPtrack=0;
    Float_t BranchBase::         HIFlow_v2_PsiNtrack=0;
    Float_t BranchBase::         HIFlow_v2_v2EMB1sil=0;
    Float_t BranchBase::         HIFlow_v2_v2FCAL0sil=0;
    Float_t BranchBase::         HIFlow_v2_v2track=0;
    std::vector<float>   *BranchBase::HIFlow_v2_Meanv2_Psi_From_EMB1CaloCel_IDLayers=0;
    std::vector<float>   *BranchBase::HIFlow_v2_Meanv2_Psi_From_FCAL0CaloCel_IDLayers=0;
    std::vector<float>   *BranchBase::HIFlow_v2_Meanv2Et_Psi_From_EMB1CaloCel_IDLayers=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_EMBP1_InDet_EMBN1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_EMBN1_InDet_EMBP1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_EMBP1_InDet_FCALN0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_EMBN1_InDet_FCALP0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_FCALN0_InDet_EMBN1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_FCALP0_InDet_EMBP1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_FCALP0_InDet_FCALN0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2Eta_Psi_From_FCALN0_InDet_FCALP0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_EMBP1_InDet_EMBN1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_EMBN1_InDet_EMBP1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_EMBP1_InDet_FCALN0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_EMBN1_InDet_FCALP0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_FCALN0_InDet_EMBN1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_FCALP0_InDet_EMBP1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_FCALP0_InDet_FCALN0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_v2EtaEt_Psi_From_FCALN0_InDet_FCALP0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_EtaEMBN1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_EtaEMBP1=0;
    std::vector<float>   *BranchBase::HIFlow_v2_EtaFCALN0=0;
    std::vector<float>   *BranchBase::HIFlow_v2_EtaFCALP0=0;
    Float_t BranchBase::         HIFlow_v3_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v3_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v3_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v3_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v3_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v3_AvgV2fromCalo=0;
    Float_t BranchBase::         HIFlow_v4_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v4_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v4_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v4_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v4_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v4_AvgV2fromCalo=0;
    Float_t BranchBase::         HIFlow_v5_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v5_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v5_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v5_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v5_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v5_AvgV2fromCalo=0;
    Float_t BranchBase::         HIFlow_v6_PsiFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v6_PsiPFCAL0_w=0;
    Float_t BranchBase::         HIFlow_v6_PsiNFCAL0_w=0;
    std::vector<float>   *BranchBase::HIFlow_v6_EtInLayer=0;
    std::vector<float>   *BranchBase::HIFlow_v6_Meanv2Et_Psi_From_FCAL0CaloCel_IDLayers=0;
    Float_t BranchBase::         HIFlow_v6_AvgV2fromCalo=0;
    Int_t BranchBase::           cl_eg_n=0;
    std::vector<float>   *BranchBase::cl_eg_pt=0;
    std::vector<float>   *BranchBase::cl_eg_eta=0;
    std::vector<float>   *BranchBase::cl_eg_phi=0;
    std::vector<float>   *BranchBase::cl_eg_E_em=0;
    std::vector<float>   *BranchBase::cl_eg_E_had=0;
    std::vector<float>   *BranchBase::cl_eg_firstEdens=0;
    std::vector<float>   *BranchBase::cl_eg_cellmaxfrac=0;
    std::vector<float>   *BranchBase::cl_eg_longitudinal=0;
    std::vector<float>   *BranchBase::cl_eg_secondlambda=0;
    std::vector<float>   *BranchBase::cl_eg_lateral=0;
    std::vector<float>   *BranchBase::cl_eg_secondR=0;
    std::vector<float>   *BranchBase::cl_eg_centerlambda=0;
    std::vector<float>   *BranchBase::cl_eg_deltaTheta=0;
    std::vector<float>   *BranchBase::cl_eg_deltaPhi=0;
    std::vector<float>   *BranchBase::cl_eg_centermag=0;
    std::vector<float>   *BranchBase::cl_eg_time=0;
    std::vector<float>   *BranchBase::cl_eg_E_PreSamplerB=0;
    std::vector<float>   *BranchBase::cl_eg_E_EMB1=0;
    std::vector<float>   *BranchBase::cl_eg_E_EMB2=0;
    std::vector<float>   *BranchBase::cl_eg_E_EMB3=0;
    std::vector<float>   *BranchBase::cl_eg_E_PreSamplerE=0;
    std::vector<float>   *BranchBase::cl_eg_E_EME1=0;
    std::vector<float>   *BranchBase::cl_eg_E_EME2=0;
    std::vector<float>   *BranchBase::cl_eg_E_EME3=0;
    std::vector<float>   *BranchBase::cl_eg_E_HEC0=0;
    std::vector<float>   *BranchBase::cl_eg_E_HEC1=0;
    std::vector<float>   *BranchBase::cl_eg_E_HEC2=0;
    std::vector<float>   *BranchBase::cl_eg_E_HEC3=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileBar0=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileBar1=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileBar2=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileGap1=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileGap2=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileGap3=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileExt0=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileExt1=0;
    std::vector<float>   *BranchBase::cl_eg_E_TileExt2=0;
    std::vector<float>   *BranchBase::cl_eg_E_FCAL0=0;
    std::vector<float>   *BranchBase::cl_eg_E_FCAL1=0;
    std::vector<float>   *BranchBase::cl_eg_E_FCAL2=0;
    Int_t BranchBase::           mu_staco_n=0;
    std::vector<float>   *BranchBase::mu_staco_E=0;
    std::vector<float>   *BranchBase::mu_staco_pt=0;
    std::vector<float>   *BranchBase::mu_staco_m=0;
    std::vector<float>   *BranchBase::mu_staco_eta=0;
    std::vector<float>   *BranchBase::mu_staco_phi=0;
    std::vector<float>   *BranchBase::mu_staco_px=0;
    std::vector<float>   *BranchBase::mu_staco_py=0;
    std::vector<float>   *BranchBase::mu_staco_pz=0;
    std::vector<float>   *BranchBase::mu_staco_charge=0;
    std::vector<unsigned short> *BranchBase::mu_staco_allauthor=0;
    std::vector<int>     *BranchBase::mu_staco_author=0;
    std::vector<float>   *BranchBase::mu_staco_beta=0;
    std::vector<float>   *BranchBase::mu_staco_isMuonLikelihood=0;
    std::vector<float>   *BranchBase::mu_staco_matchchi2=0;
    std::vector<int>     *BranchBase::mu_staco_matchndof=0;
    std::vector<float>   *BranchBase::mu_staco_etcone20=0;
    std::vector<float>   *BranchBase::mu_staco_etcone30=0;
    std::vector<float>   *BranchBase::mu_staco_etcone40=0;
    std::vector<float>   *BranchBase::mu_staco_nucone20=0;
    std::vector<float>   *BranchBase::mu_staco_nucone30=0;
    std::vector<float>   *BranchBase::mu_staco_nucone40=0;
    std::vector<float>   *BranchBase::mu_staco_ptcone20=0;
    std::vector<float>   *BranchBase::mu_staco_ptcone30=0;
    std::vector<float>   *BranchBase::mu_staco_ptcone40=0;
    std::vector<float>   *BranchBase::mu_staco_energyLossPar=0;
    std::vector<float>   *BranchBase::mu_staco_energyLossErr=0;
    std::vector<float>   *BranchBase::mu_staco_etCore=0;
    std::vector<float>   *BranchBase::mu_staco_energyLossType=0;
    std::vector<unsigned short> *BranchBase::mu_staco_caloMuonIdTag=0;
    std::vector<double>  *BranchBase::mu_staco_caloLRLikelihood=0;
    std::vector<int>     *BranchBase::mu_staco_bestMatch=0;
    std::vector<int>     *BranchBase::mu_staco_isStandAloneMuon=0;
    std::vector<int>     *BranchBase::mu_staco_isCombinedMuon=0;
    std::vector<int>     *BranchBase::mu_staco_isLowPtReconstructedMuon=0;
    std::vector<int>     *BranchBase::mu_staco_isSegmentTaggedMuon=0;
    std::vector<int>     *BranchBase::mu_staco_isCaloMuonId=0;
    std::vector<int>     *BranchBase::mu_staco_alsoFoundByLowPt=0;
    std::vector<int>     *BranchBase::mu_staco_alsoFoundByCaloMuonId=0;
    std::vector<int>     *BranchBase::mu_staco_loose=0;
    std::vector<int>     *BranchBase::mu_staco_medium=0;
    std::vector<int>     *BranchBase::mu_staco_tight=0;
    std::vector<float>   *BranchBase::mu_staco_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cb_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cb_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cb_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cb_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cb_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ie_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ie_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ie_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ie_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ie_qoverp_exPV=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_SpaceTime_detID=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_t=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_tError=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_weight=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_x=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_y=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_SpaceTime_z=0;
    std::vector<float>   *BranchBase::mu_staco_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_d0_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_d0_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_d0_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_d0_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_z0_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_z0_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_z0_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_phi_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_phi_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_cov_theta_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_id_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_me_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_staco_ms_d0=0;
    std::vector<float>   *BranchBase::mu_staco_ms_z0=0;
    std::vector<float>   *BranchBase::mu_staco_ms_phi=0;
    std::vector<float>   *BranchBase::mu_staco_ms_theta=0;
    std::vector<float>   *BranchBase::mu_staco_ms_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_id_d0=0;
    std::vector<float>   *BranchBase::mu_staco_id_z0=0;
    std::vector<float>   *BranchBase::mu_staco_id_phi=0;
    std::vector<float>   *BranchBase::mu_staco_id_theta=0;
    std::vector<float>   *BranchBase::mu_staco_id_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_me_d0=0;
    std::vector<float>   *BranchBase::mu_staco_me_z0=0;
    std::vector<float>   *BranchBase::mu_staco_me_phi=0;
    std::vector<float>   *BranchBase::mu_staco_me_theta=0;
    std::vector<float>   *BranchBase::mu_staco_me_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_ie_d0=0;
    std::vector<float>   *BranchBase::mu_staco_ie_z0=0;
    std::vector<float>   *BranchBase::mu_staco_ie_phi=0;
    std::vector<float>   *BranchBase::mu_staco_ie_theta=0;
    std::vector<float>   *BranchBase::mu_staco_ie_qoverp=0;
    std::vector<int>     *BranchBase::mu_staco_nOutliersOnTrack=0;
    std::vector<int>     *BranchBase::mu_staco_nBLHits=0;
    std::vector<int>     *BranchBase::mu_staco_nPixHits=0;
    std::vector<int>     *BranchBase::mu_staco_nSCTHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTRTHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::mu_staco_nBLSharedHits=0;
    std::vector<int>     *BranchBase::mu_staco_nPixSharedHits=0;
    std::vector<int>     *BranchBase::mu_staco_nPixHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nSCTSharedHits=0;
    std::vector<int>     *BranchBase::mu_staco_nSCTHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nTRTOutliers=0;
    std::vector<int>     *BranchBase::mu_staco_nTRTHighTOutliers=0;
    std::vector<int>     *BranchBase::mu_staco_nGangedPixels=0;
    std::vector<int>     *BranchBase::mu_staco_nPixelDeadSensors=0;
    std::vector<int>     *BranchBase::mu_staco_nSCTDeadSensors=0;
    std::vector<int>     *BranchBase::mu_staco_nTRTDeadStraws=0;
    std::vector<int>     *BranchBase::mu_staco_expectBLayerHit=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nCSCEtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nCSCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nCSCPhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nCSCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCEtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCPhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCEtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCPhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTBIHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTBMHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTBOHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTBEEHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTBIS78Hits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTEIHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTEMHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTEOHits=0;
    std::vector<int>     *BranchBase::mu_staco_nMDTEEHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer1EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer2EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer3EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer1PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer2PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nRPCLayer3PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer1EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer2EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer3EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer4EtaHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer1PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer2PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer3PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_nTGCLayer4PhiHits=0;
    std::vector<int>     *BranchBase::mu_staco_barrelSectors=0;
    std::vector<int>     *BranchBase::mu_staco_endcapSectors=0;
    std::vector<float>   *BranchBase::mu_staco_trackd0=0;
    std::vector<float>   *BranchBase::mu_staco_trackz0=0;
    std::vector<float>   *BranchBase::mu_staco_trackphi=0;
    std::vector<float>   *BranchBase::mu_staco_tracktheta=0;
    std::vector<float>   *BranchBase::mu_staco_trackqoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_d0=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_z0=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_phi=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_theta=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_d0_z0=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_d0_phi=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_d0_theta=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_d0_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_z0_phi=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_z0_theta=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_z0_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_phi_theta=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_phi_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackcov_theta_qoverp=0;
    std::vector<float>   *BranchBase::mu_staco_trackfitchi2=0;
    std::vector<int>     *BranchBase::mu_staco_trackfitndof=0;
    std::vector<int>     *BranchBase::mu_staco_hastrack=0;
    std::vector<float>   *BranchBase::mu_staco_trackd0beam=0;
    std::vector<float>   *BranchBase::mu_staco_trackz0beam=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigd0beam=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigz0beam=0;
    std::vector<float>   *BranchBase::mu_staco_trackd0pv=0;
    std::vector<float>   *BranchBase::mu_staco_trackz0pv=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigd0pv=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigz0pv=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_d0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_z0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_sigd0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_sigz0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_d0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_z0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_sigd0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackIPEstimate_sigz0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackd0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_trackz0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigd0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_tracksigz0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_staco_truth_dr=0;
    std::vector<float>   *BranchBase::mu_staco_truth_E=0;
    std::vector<float>   *BranchBase::mu_staco_truth_pt=0;
    std::vector<float>   *BranchBase::mu_staco_truth_eta=0;
    std::vector<float>   *BranchBase::mu_staco_truth_phi=0;
    std::vector<int>     *BranchBase::mu_staco_truth_type=0;
    std::vector<int>     *BranchBase::mu_staco_truth_status=0;
    std::vector<int>     *BranchBase::mu_staco_truth_barcode=0;
    std::vector<int>     *BranchBase::mu_staco_truth_mothertype=0;
    std::vector<int>     *BranchBase::mu_staco_truth_motherbarcode=0;
    std::vector<int>     *BranchBase::mu_staco_truth_matched=0;
    std::vector<float>   *BranchBase::mu_staco_EFCB_dr=0;
    std::vector<int>     *BranchBase::mu_staco_EFCB_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFCB_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFCB_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFCB_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFCB_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFCB_hasCB=0;
    std::vector<int>     *BranchBase::mu_staco_EFCB_matched=0;
    std::vector<float>   *BranchBase::mu_staco_EFMG_dr=0;
    std::vector<int>     *BranchBase::mu_staco_EFMG_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFMG_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFMG_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFMG_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFMG_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFMG_hasMG=0;
    std::vector<int>     *BranchBase::mu_staco_EFMG_matched=0;
    std::vector<float>   *BranchBase::mu_staco_EFME_dr=0;
    std::vector<int>     *BranchBase::mu_staco_EFME_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFME_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFME_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFME_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_staco_EFME_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_staco_EFME_hasME=0;
    std::vector<int>     *BranchBase::mu_staco_EFME_matched=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_dr=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_pt=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_eta=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_phi=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_id_pt=0;
    std::vector<float>   *BranchBase::mu_staco_L2CB_ms_pt=0;
    std::vector<int>     *BranchBase::mu_staco_L2CB_nPixHits=0;
    std::vector<int>     *BranchBase::mu_staco_L2CB_nSCTHits=0;
    std::vector<int>     *BranchBase::mu_staco_L2CB_nTRTHits=0;
    std::vector<int>     *BranchBase::mu_staco_L2CB_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::mu_staco_L2CB_matched=0;
    std::vector<float>   *BranchBase::mu_staco_L1_dr=0;
    std::vector<float>   *BranchBase::mu_staco_L1_pt=0;
    std::vector<float>   *BranchBase::mu_staco_L1_eta=0;
    std::vector<float>   *BranchBase::mu_staco_L1_phi=0;
    std::vector<short>   *BranchBase::mu_staco_L1_thrNumber=0;
    std::vector<short>   *BranchBase::mu_staco_L1_RoINumber=0;
    std::vector<short>   *BranchBase::mu_staco_L1_sectorAddress=0;
    std::vector<int>     *BranchBase::mu_staco_L1_firstCandidate=0;
    std::vector<int>     *BranchBase::mu_staco_L1_moreCandInRoI=0;
    std::vector<int>     *BranchBase::mu_staco_L1_moreCandInSector=0;
    std::vector<short>   *BranchBase::mu_staco_L1_source=0;
    std::vector<short>   *BranchBase::mu_staco_L1_hemisphere=0;
    std::vector<short>   *BranchBase::mu_staco_L1_charge=0;
    std::vector<int>     *BranchBase::mu_staco_L1_vetoed=0;
    std::vector<int>     *BranchBase::mu_staco_L1_matched=0;
    Int_t BranchBase::           mu_muid_n=0;
    std::vector<float>   *BranchBase::mu_muid_E=0;
    std::vector<float>   *BranchBase::mu_muid_pt=0;
    std::vector<float>   *BranchBase::mu_muid_m=0;
    std::vector<float>   *BranchBase::mu_muid_eta=0;
    std::vector<float>   *BranchBase::mu_muid_phi=0;
    std::vector<float>   *BranchBase::mu_muid_px=0;
    std::vector<float>   *BranchBase::mu_muid_py=0;
    std::vector<float>   *BranchBase::mu_muid_pz=0;
    std::vector<float>   *BranchBase::mu_muid_charge=0;
    std::vector<unsigned short> *BranchBase::mu_muid_allauthor=0;
    std::vector<int>     *BranchBase::mu_muid_author=0;
    std::vector<float>   *BranchBase::mu_muid_beta=0;
    std::vector<float>   *BranchBase::mu_muid_isMuonLikelihood=0;
    std::vector<float>   *BranchBase::mu_muid_matchchi2=0;
    std::vector<int>     *BranchBase::mu_muid_matchndof=0;
    std::vector<float>   *BranchBase::mu_muid_etcone20=0;
    std::vector<float>   *BranchBase::mu_muid_etcone30=0;
    std::vector<float>   *BranchBase::mu_muid_etcone40=0;
    std::vector<float>   *BranchBase::mu_muid_nucone20=0;
    std::vector<float>   *BranchBase::mu_muid_nucone30=0;
    std::vector<float>   *BranchBase::mu_muid_nucone40=0;
    std::vector<float>   *BranchBase::mu_muid_ptcone20=0;
    std::vector<float>   *BranchBase::mu_muid_ptcone30=0;
    std::vector<float>   *BranchBase::mu_muid_ptcone40=0;
    std::vector<float>   *BranchBase::mu_muid_energyLossPar=0;
    std::vector<float>   *BranchBase::mu_muid_energyLossErr=0;
    std::vector<float>   *BranchBase::mu_muid_etCore=0;
    std::vector<float>   *BranchBase::mu_muid_energyLossType=0;
    std::vector<unsigned short> *BranchBase::mu_muid_caloMuonIdTag=0;
    std::vector<double>  *BranchBase::mu_muid_caloLRLikelihood=0;
    std::vector<int>     *BranchBase::mu_muid_bestMatch=0;
    std::vector<int>     *BranchBase::mu_muid_isStandAloneMuon=0;
    std::vector<int>     *BranchBase::mu_muid_isCombinedMuon=0;
    std::vector<int>     *BranchBase::mu_muid_isLowPtReconstructedMuon=0;
    std::vector<int>     *BranchBase::mu_muid_isSegmentTaggedMuon=0;
    std::vector<int>     *BranchBase::mu_muid_isCaloMuonId=0;
    std::vector<int>     *BranchBase::mu_muid_alsoFoundByLowPt=0;
    std::vector<int>     *BranchBase::mu_muid_alsoFoundByCaloMuonId=0;
    std::vector<int>     *BranchBase::mu_muid_loose=0;
    std::vector<int>     *BranchBase::mu_muid_medium=0;
    std::vector<int>     *BranchBase::mu_muid_tight=0;
    std::vector<float>   *BranchBase::mu_muid_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cb_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cb_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cb_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cb_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cb_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ie_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ie_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ie_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ie_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ie_qoverp_exPV=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_SpaceTime_detID=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_t=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_tError=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_weight=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_x=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_y=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_SpaceTime_z=0;
    std::vector<float>   *BranchBase::mu_muid_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_d0_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_d0_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_d0_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_d0_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_z0_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_z0_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_z0_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_phi_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_phi_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_cov_theta_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_id_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_cov_d0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_cov_z0_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_cov_phi_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_cov_theta_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_me_cov_qoverp_exPV=0;
    std::vector<float>   *BranchBase::mu_muid_ms_d0=0;
    std::vector<float>   *BranchBase::mu_muid_ms_z0=0;
    std::vector<float>   *BranchBase::mu_muid_ms_phi=0;
    std::vector<float>   *BranchBase::mu_muid_ms_theta=0;
    std::vector<float>   *BranchBase::mu_muid_ms_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_id_d0=0;
    std::vector<float>   *BranchBase::mu_muid_id_z0=0;
    std::vector<float>   *BranchBase::mu_muid_id_phi=0;
    std::vector<float>   *BranchBase::mu_muid_id_theta=0;
    std::vector<float>   *BranchBase::mu_muid_id_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_me_d0=0;
    std::vector<float>   *BranchBase::mu_muid_me_z0=0;
    std::vector<float>   *BranchBase::mu_muid_me_phi=0;
    std::vector<float>   *BranchBase::mu_muid_me_theta=0;
    std::vector<float>   *BranchBase::mu_muid_me_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_ie_d0=0;
    std::vector<float>   *BranchBase::mu_muid_ie_z0=0;
    std::vector<float>   *BranchBase::mu_muid_ie_phi=0;
    std::vector<float>   *BranchBase::mu_muid_ie_theta=0;
    std::vector<float>   *BranchBase::mu_muid_ie_qoverp=0;
    std::vector<int>     *BranchBase::mu_muid_nOutliersOnTrack=0;
    std::vector<int>     *BranchBase::mu_muid_nBLHits=0;
    std::vector<int>     *BranchBase::mu_muid_nPixHits=0;
    std::vector<int>     *BranchBase::mu_muid_nSCTHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTRTHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::mu_muid_nBLSharedHits=0;
    std::vector<int>     *BranchBase::mu_muid_nPixSharedHits=0;
    std::vector<int>     *BranchBase::mu_muid_nPixHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nSCTSharedHits=0;
    std::vector<int>     *BranchBase::mu_muid_nSCTHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nTRTOutliers=0;
    std::vector<int>     *BranchBase::mu_muid_nTRTHighTOutliers=0;
    std::vector<int>     *BranchBase::mu_muid_nGangedPixels=0;
    std::vector<int>     *BranchBase::mu_muid_nPixelDeadSensors=0;
    std::vector<int>     *BranchBase::mu_muid_nSCTDeadSensors=0;
    std::vector<int>     *BranchBase::mu_muid_nTRTDeadStraws=0;
    std::vector<int>     *BranchBase::mu_muid_expectBLayerHit=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nCSCEtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nCSCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nCSCPhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nCSCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCEtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCPhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCEtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCEtaHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCPhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCPhiHoles=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTBIHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTBMHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTBOHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTBEEHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTBIS78Hits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTEIHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTEMHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTEOHits=0;
    std::vector<int>     *BranchBase::mu_muid_nMDTEEHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer1EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer2EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer3EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer1PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer2PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nRPCLayer3PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer1EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer2EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer3EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer4EtaHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer1PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer2PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer3PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_nTGCLayer4PhiHits=0;
    std::vector<int>     *BranchBase::mu_muid_barrelSectors=0;
    std::vector<int>     *BranchBase::mu_muid_endcapSectors=0;
    std::vector<float>   *BranchBase::mu_muid_trackd0=0;
    std::vector<float>   *BranchBase::mu_muid_trackz0=0;
    std::vector<float>   *BranchBase::mu_muid_trackphi=0;
    std::vector<float>   *BranchBase::mu_muid_tracktheta=0;
    std::vector<float>   *BranchBase::mu_muid_trackqoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_d0=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_z0=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_phi=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_theta=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_d0_z0=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_d0_phi=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_d0_theta=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_d0_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_z0_phi=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_z0_theta=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_z0_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_phi_theta=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_phi_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackcov_theta_qoverp=0;
    std::vector<float>   *BranchBase::mu_muid_trackfitchi2=0;
    std::vector<int>     *BranchBase::mu_muid_trackfitndof=0;
    std::vector<int>     *BranchBase::mu_muid_hastrack=0;
    std::vector<float>   *BranchBase::mu_muid_trackd0beam=0;
    std::vector<float>   *BranchBase::mu_muid_trackz0beam=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigd0beam=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigz0beam=0;
    std::vector<float>   *BranchBase::mu_muid_trackd0pv=0;
    std::vector<float>   *BranchBase::mu_muid_trackz0pv=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigd0pv=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigz0pv=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_d0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_z0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_sigd0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_sigz0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_d0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_z0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_sigd0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackIPEstimate_sigz0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackd0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_trackz0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigd0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_tracksigz0pvunbiased=0;
    std::vector<float>   *BranchBase::mu_muid_truth_dr=0;
    std::vector<float>   *BranchBase::mu_muid_truth_E=0;
    std::vector<float>   *BranchBase::mu_muid_truth_pt=0;
    std::vector<float>   *BranchBase::mu_muid_truth_eta=0;
    std::vector<float>   *BranchBase::mu_muid_truth_phi=0;
    std::vector<int>     *BranchBase::mu_muid_truth_type=0;
    std::vector<int>     *BranchBase::mu_muid_truth_status=0;
    std::vector<int>     *BranchBase::mu_muid_truth_barcode=0;
    std::vector<int>     *BranchBase::mu_muid_truth_mothertype=0;
    std::vector<int>     *BranchBase::mu_muid_truth_motherbarcode=0;
    std::vector<int>     *BranchBase::mu_muid_truth_matched=0;
    std::vector<float>   *BranchBase::mu_muid_EFCB_dr=0;
    std::vector<int>     *BranchBase::mu_muid_EFCB_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFCB_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFCB_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFCB_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFCB_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFCB_hasCB=0;
    std::vector<int>     *BranchBase::mu_muid_EFCB_matched=0;
    std::vector<float>   *BranchBase::mu_muid_EFMG_dr=0;
    std::vector<int>     *BranchBase::mu_muid_EFMG_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFMG_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFMG_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFMG_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFMG_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFMG_hasMG=0;
    std::vector<int>     *BranchBase::mu_muid_EFMG_matched=0;
    std::vector<float>   *BranchBase::mu_muid_EFME_dr=0;
    std::vector<int>     *BranchBase::mu_muid_EFME_n=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFME_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFME_pt=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFME_eta=0;
    std::vector<std::vector<float> > *BranchBase::mu_muid_EFME_phi=0;
    std::vector<std::vector<int> > *BranchBase::mu_muid_EFME_hasME=0;
    std::vector<int>     *BranchBase::mu_muid_EFME_matched=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_dr=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_pt=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_eta=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_phi=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_id_pt=0;
    std::vector<float>   *BranchBase::mu_muid_L2CB_ms_pt=0;
    std::vector<int>     *BranchBase::mu_muid_L2CB_nPixHits=0;
    std::vector<int>     *BranchBase::mu_muid_L2CB_nSCTHits=0;
    std::vector<int>     *BranchBase::mu_muid_L2CB_nTRTHits=0;
    std::vector<int>     *BranchBase::mu_muid_L2CB_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::mu_muid_L2CB_matched=0;
    std::vector<float>   *BranchBase::mu_muid_L1_dr=0;
    std::vector<float>   *BranchBase::mu_muid_L1_pt=0;
    std::vector<float>   *BranchBase::mu_muid_L1_eta=0;
    std::vector<float>   *BranchBase::mu_muid_L1_phi=0;
    std::vector<short>   *BranchBase::mu_muid_L1_thrNumber=0;
    std::vector<short>   *BranchBase::mu_muid_L1_RoINumber=0;
    std::vector<short>   *BranchBase::mu_muid_L1_sectorAddress=0;
    std::vector<int>     *BranchBase::mu_muid_L1_firstCandidate=0;
    std::vector<int>     *BranchBase::mu_muid_L1_moreCandInRoI=0;
    std::vector<int>     *BranchBase::mu_muid_L1_moreCandInSector=0;
    std::vector<short>   *BranchBase::mu_muid_L1_source=0;
    std::vector<short>   *BranchBase::mu_muid_L1_hemisphere=0;
    std::vector<short>   *BranchBase::mu_muid_L1_charge=0;
    std::vector<int>     *BranchBase::mu_muid_L1_vetoed=0;
    std::vector<int>     *BranchBase::mu_muid_L1_matched=0;
    Int_t BranchBase::           muid_n=0;
    std::vector<int>     *BranchBase::muid_nScatters=0;
    std::vector<double>  *BranchBase::muid_scatSignificance=0;
    std::vector<double>  *BranchBase::muid_neighbourSignificance=0;
    std::vector<double>  *BranchBase::muid_eta=0;
    UInt_t BranchBase::          trig_DB_SMK=0;
    UInt_t BranchBase::          trig_DB_L1PSK=0;
    UInt_t BranchBase::          trig_DB_HLTPSK=0;
    std::vector<unsigned int> *BranchBase::trig_L1_TAV=0;
    std::vector<short>   *BranchBase::trig_L2_passedPhysics=0;
    std::vector<short>   *BranchBase::trig_EF_passedPhysics=0;
    std::vector<unsigned int> *BranchBase::trig_L1_TBP=0;
    std::vector<unsigned int> *BranchBase::trig_L1_TAP=0;
    std::vector<short>   *BranchBase::trig_L2_passedRaw=0;
    std::vector<short>   *BranchBase::trig_EF_passedRaw=0;
    Bool_t BranchBase::          trig_L2_truncated=0;
    Bool_t BranchBase::          trig_EF_truncated=0;
    std::vector<short>   *BranchBase::trig_L2_resurrected=0;
    std::vector<short>   *BranchBase::trig_EF_resurrected=0;
    std::vector<short>   *BranchBase::trig_L2_passedThrough=0;
    std::vector<short>   *BranchBase::trig_EF_passedThrough=0;
    std::vector<short>   *BranchBase::trig_L2_wasPrescaled=0;
    std::vector<short>   *BranchBase::trig_L2_wasResurrected=0;
    std::vector<short>   *BranchBase::trig_EF_wasPrescaled=0;
    std::vector<short>   *BranchBase::trig_EF_wasResurrected=0;
    Bool_t BranchBase::          L1_2J15=0;
    Bool_t BranchBase::          L1_J10=0;
    Bool_t BranchBase::          L1_J15=0;
    Bool_t BranchBase::          L1_J30=0;
    Bool_t BranchBase::          L1_J75=0;
    Int_t BranchBase::           trig_L1_jet_n=0;
    std::vector<float>   *BranchBase::trig_L1_jet_eta=0;
    std::vector<float>   *BranchBase::trig_L1_jet_phi=0;
    std::vector<std::vector<std::string> > *BranchBase::trig_L1_jet_thrNames=0;
    std::vector<std::vector<float> > *BranchBase::trig_L1_jet_thrValues=0;
    std::vector<unsigned int> *BranchBase::trig_L1_jet_thrPattern=0;
    std::vector<float>   *BranchBase::trig_L1_jet_et4x4=0;
    std::vector<float>   *BranchBase::trig_L1_jet_et6x6=0;
    std::vector<float>   *BranchBase::trig_L1_jet_et8x8=0;
    std::vector<unsigned int> *BranchBase::trig_L1_jet_RoIWord=0;
    Int_t BranchBase::           trig_L1_emtau_n=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_eta=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_phi=0;
    std::vector<std::vector<std::string> > *BranchBase::trig_L1_emtau_thrNames=0;
    std::vector<std::vector<float> > *BranchBase::trig_L1_emtau_thrValues=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_core=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_EMClus=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_tauClus=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_EMIsol=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_hadIsol=0;
    std::vector<float>   *BranchBase::trig_L1_emtau_hadCore=0;
    std::vector<unsigned int> *BranchBase::trig_L1_emtau_thrPattern=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_2EM3=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_2EM3_NL=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_2EM3_NZ=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_2EM5=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM10=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM12=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM14=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM16=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_EMPTY=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_FIRSTEMPTY=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_MV_VTE50=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_NL=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_NZ=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_TE50=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_UNPAIRED_ISO=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_UNPAIRED_NONISO=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM3_VTE50=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM4=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM5=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM5_EMPTY=0;
    std::vector<int>     *BranchBase::trig_L1_emtau_L1_EM7=0;
    std::vector<unsigned int> *BranchBase::trig_L1_emtau_RoIWord=0;
    Int_t BranchBase::           trig_EF_jet_n=0;
    std::vector<float>   *BranchBase::trig_EF_jet_E=0;
    std::vector<float>   *BranchBase::trig_EF_jet_pt=0;
    std::vector<float>   *BranchBase::trig_EF_jet_m=0;
    std::vector<float>   *BranchBase::trig_EF_jet_eta=0;
    std::vector<float>   *BranchBase::trig_EF_jet_phi=0;
    std::vector<int>     *BranchBase::trig_EF_jet_a4=0;
    std::vector<int>     *BranchBase::trig_EF_jet_a2=0;
    std::vector<int>     *BranchBase::trig_EF_jet_a4hi=0;
    std::vector<int>     *BranchBase::trig_EF_jet_a2hi=0;
    std::vector<unsigned int> *BranchBase::trig_EF_jet_RoIword=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_fj20_Ecorr=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j100_a4hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j150_a4hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_Ecorr=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a2hi_EFFS_L1J10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a2hi_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a2hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a2hi_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a4_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a4hi_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a4hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j15_a4hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_Ecorr=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a2hi_EFFS_L1J10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a2hi_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a2hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a2hi_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a4_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a4hi_EFFS_L1MBTS=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a4hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j20_a4hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j25_a2hi_EFFS_L1J10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j25_a2hi_EFFS_L1TE10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j25_a2hi_EFFS_L1TE20=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j25_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j30_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j40_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j40_a4_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j50_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j75_a2hi_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j75_a4_EFFS_L1ZDC=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j75_a4hi_EFFS_L1J10=0;
    std::vector<int>     *BranchBase::trig_EF_jet_EF_j75_a4hi_EFFS_L1ZDC=0;
    std::vector<std::string>  *BranchBase::trig_L1_esum_thrNames=0;
    Float_t BranchBase::         trig_L1_esum_ExMiss=0;
    Float_t BranchBase::         trig_L1_esum_EyMiss=0;
    Float_t BranchBase::         trig_L1_esum_energyT=0;
    Bool_t BranchBase::          trig_L1_esum_overflowX=0;
    Bool_t BranchBase::          trig_L1_esum_overflowY=0;
    Bool_t BranchBase::          trig_L1_esum_overflowT=0;
    UInt_t BranchBase::          trig_L1_esum_RoIWord0=0;
    UInt_t BranchBase::          trig_L1_esum_RoIWord1=0;
    UInt_t BranchBase::          trig_L1_esum_RoIWord2=0;
    Float_t BranchBase::         trig_EF_met_MEx=0;
    Float_t BranchBase::         trig_EF_met_MEy=0;
    Float_t BranchBase::         trig_EF_met_MEz=0;
    Float_t BranchBase::         trig_EF_met_sumEt=0;
    Float_t BranchBase::         trig_EF_met_sumE=0;
    Int_t BranchBase::           trig_EF_met_flag=0;
    std::vector<std::string>  *BranchBase::trig_EF_met_nameOfComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_MExComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_MEyComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_MEzComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_sumEtComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_sumEComponent=0;
    std::vector<float>   *BranchBase::trig_EF_met_componentCalib0=0;
    std::vector<float>   *BranchBase::trig_EF_met_componentCalib1=0;
    std::vector<short>   *BranchBase::trig_EF_met_sumOfSigns=0;
    std::vector<unsigned short> *BranchBase::trig_EF_met_usedChannels=0;
    std::vector<short>   *BranchBase::trig_EF_met_status=0;
    Int_t BranchBase::           trig_EF_ph_n=0;
    std::vector<float>   *BranchBase::trig_EF_ph_E=0;
    std::vector<float>   *BranchBase::trig_EF_ph_Et=0;
    std::vector<float>   *BranchBase::trig_EF_ph_pt=0;
    std::vector<float>   *BranchBase::trig_EF_ph_m=0;
    std::vector<float>   *BranchBase::trig_EF_ph_eta=0;
    std::vector<float>   *BranchBase::trig_EF_ph_phi=0;
    std::vector<float>   *BranchBase::trig_EF_ph_px=0;
    std::vector<float>   *BranchBase::trig_EF_ph_py=0;
    std::vector<float>   *BranchBase::trig_EF_ph_pz=0;
    std::vector<int>     *BranchBase::trig_EF_ph_author=0;
    std::vector<int>     *BranchBase::trig_EF_ph_isRecovered=0;
    std::vector<unsigned int> *BranchBase::trig_EF_ph_isEM=0;
    std::vector<unsigned int> *BranchBase::trig_EF_ph_isEMLoose=0;
    std::vector<unsigned int> *BranchBase::trig_EF_ph_isEMMedium=0;
    std::vector<unsigned int> *BranchBase::trig_EF_ph_isEMTight=0;
    std::vector<int>     *BranchBase::trig_EF_ph_convFlag=0;
    std::vector<int>     *BranchBase::trig_EF_ph_isConv=0;
    std::vector<int>     *BranchBase::trig_EF_ph_nConv=0;
    std::vector<int>     *BranchBase::trig_EF_ph_nSingleTrackConv=0;
    std::vector<int>     *BranchBase::trig_EF_ph_nDoubleTrackConv=0;
    std::vector<int>     *BranchBase::trig_EF_ph_loose=0;
    std::vector<int>     *BranchBase::trig_EF_ph_looseIso=0;
    std::vector<int>     *BranchBase::trig_EF_ph_tight=0;
    std::vector<int>     *BranchBase::trig_EF_ph_tightIso=0;
    std::vector<int>     *BranchBase::trig_EF_ph_looseAR=0;
    std::vector<int>     *BranchBase::trig_EF_ph_looseARIso=0;
    std::vector<int>     *BranchBase::trig_EF_ph_tightAR=0;
    std::vector<int>     *BranchBase::trig_EF_ph_tightARIso=0;
    Int_t BranchBase::           trig_EF_trigmuonef_n=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_RoINum=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_NSegments=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_NMdtHits=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_NRpcHits=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_NTgcHits=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_NCscHits=0;
    std::vector<float>   *BranchBase::trig_EF_trigmuonef_EtaPreviousLevel=0;
    std::vector<float>   *BranchBase::trig_EF_trigmuonef_PhiPreviousLevel=0;
    std::vector<int>     *BranchBase::trig_EF_trigmuonef_track_n=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MuonType=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_pt=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_eta=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_phi=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_charge=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_d0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_z0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_chi2=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_chi2prob=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_posX=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_posY=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_MS_posZ=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NRpcHitsPhi=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NTgcHitsPhi=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NCscHitsPhi=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NRpcHitsEta=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NTgcHitsEta=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NCscHitsEta=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_NMdtHits=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_MS_hasMS=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_pt=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_eta=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_phi=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_charge=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_d0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_z0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_chi2=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_chi2prob=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_posX=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_posY=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_SA_posZ=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_SA_hasSA=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_pt=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_eta=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_phi=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_charge=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_d0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_z0=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_chi2=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_chi2prob=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_posX=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_posY=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_posZ=0;
    std::vector<std::vector<float> > *BranchBase::trig_EF_trigmuonef_track_CB_matchChi2=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_CB_NIdSctHits=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_CB_NIdPixelHits=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_CB_NTrtHits=0;
    std::vector<std::vector<int> > *BranchBase::trig_EF_trigmuonef_track_CB_hasCB=0;
    Int_t BranchBase::           bcmRDO_n=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_channel=0;
    std::vector<int>     *BranchBase::bcmRDO_nhits=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_pulse1pos=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_pulse1width=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_pulse2pos=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_pulse2width=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_lvl1a=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_bcid=0;
    std::vector<std::vector<int> > *BranchBase::bcmRDO_lvl1id=0;
    UInt_t BranchBase::          ctpRDO_nBC=0;
    UInt_t BranchBase::          ctpRDO_lvl1aBC=0;
    UInt_t BranchBase::          ctpRDO_time_s=0;
    UInt_t BranchBase::          ctpRDO_time_ns=0;
    std::vector<unsigned int> *BranchBase::ctpRDO_pit=0;
    std::vector<unsigned int> *BranchBase::ctpRDO_tbp=0;
    std::vector<unsigned int> *BranchBase::ctpRDO_tap=0;
    std::vector<unsigned int> *BranchBase::ctpRDO_tav=0;
    UInt_t BranchBase::          ctp_decisionTypeWord=0;
    std::vector<std::string>  *BranchBase::ctp_decisionItems=0;
    std::vector<unsigned int> *BranchBase::ctp_decisionWords=0;
    UInt_t BranchBase::          ctp_nDecisionItems=0;
    UInt_t BranchBase::          mbtsLvl2_nElements=0;
    std::vector<float>   *BranchBase::mbtsLvl2_energies=0;
    UInt_t BranchBase::          mbtsLvl2_ntimes=0;
    std::vector<float>   *BranchBase::mbtsLvl2_times=0;
    UInt_t BranchBase::          lvl2_sp_nElements=0;
    UInt_t BranchBase::          lvl2_sp_hPixelClusTotBins=0;
    Float_t BranchBase::         lvl2_sp_hPixelClusTotMin=0;
    Float_t BranchBase::         lvl2_sp_hPixelClusTotMax=0;
    UInt_t BranchBase::          lvl2_sp_hPixelClusSizeBins=0;
    Float_t BranchBase::         lvl2_sp_hPixelClusSizeMin=0;
    Float_t BranchBase::         lvl2_sp_hPixelClusSizeMax=0;
    std::vector<float>   *BranchBase::lvl2_sp_pixelClusEndcapC_contents=0;
    std::vector<float>   *BranchBase::lvl2_sp_pixelClusBarrel_contents=0;
    std::vector<float>   *BranchBase::lvl2_sp_pixelClusEndcapA_contents=0;
    std::vector<unsigned int> *BranchBase::lvl2_sp_droppedPixelModuleIds=0;
    UInt_t BranchBase::          lvl2_sp_sctSpEndcapC=0;
    UInt_t BranchBase::          lvl2_sp_sctSpBarrel=0;
    UInt_t BranchBase::          lvl2_sp_sctSpEndcapA=0;
    std::vector<unsigned int> *BranchBase::lvl2_sp_droppedSctModuleIds=0;
    UInt_t BranchBase::          lvl2_mbTrt_nElements=0;
    UInt_t BranchBase::          lvl2_mbTrt_hTotBins=0;
    Float_t BranchBase::         lvl2_mbTrt_hTotMin=0;
    Float_t BranchBase::         lvl2_mbTrt_hTotMax=0;
    std::vector<float>   *BranchBase::lvl2_mbTrt_endcapC_contents=0;
    std::vector<float>   *BranchBase::lvl2_mbTrt_barrel_contents=0;
    std::vector<float>   *BranchBase::lvl2_mbTrt_endcapA_contents=0;
    UInt_t BranchBase::          ef_trk_nElements=0;
    UInt_t BranchBase::          ef_trk_hZ0Bins=0;
    Float_t BranchBase::         ef_trk_hZ0Min=0;
    Float_t BranchBase::         ef_trk_hZ0Max=0;
    UInt_t BranchBase::          ef_trk_hPtBins=0;
    Float_t BranchBase::         ef_trk_hPtMin=0;
    Float_t BranchBase::         ef_trk_hPtMax=0;
    UInt_t BranchBase::          ef_trk_hEtaBins=0;
    Float_t BranchBase::         ef_trk_hEtaMin=0;
    Float_t BranchBase::         ef_trk_hEtaMax=0;
    UInt_t BranchBase::          ef_trk_hPhiBins=0;
    Float_t BranchBase::         ef_trk_hPhiMin=0;
    Float_t BranchBase::         ef_trk_hPhiMax=0;
    std::vector<float>   *BranchBase::ef_trk_z0_pt_contents=0;
    std::vector<float>   *BranchBase::ef_trk_eta_phi_contents=0;
    Int_t BranchBase::           trig_L2_jet_n=0;
    std::vector<float>   *BranchBase::trig_L2_jet_E=0;
    std::vector<float>   *BranchBase::trig_L2_jet_eta=0;
    std::vector<float>   *BranchBase::trig_L2_jet_phi=0;
    std::vector<unsigned int> *BranchBase::trig_L2_jet_RoIWord=0;
    std::vector<double>  *BranchBase::trig_L2_jet_ehad0=0;
    std::vector<double>  *BranchBase::trig_L2_jet_eem0=0;
    std::vector<int>     *BranchBase::trig_L2_jet_nLeadingCells=0;
    std::vector<float>   *BranchBase::trig_L2_jet_hecf=0;
    std::vector<float>   *BranchBase::trig_L2_jet_jetQuality=0;
    std::vector<float>   *BranchBase::trig_L2_jet_emf=0;
    std::vector<float>   *BranchBase::trig_L2_jet_jetTimeCells=0;
    Int_t BranchBase::           vx_n=0;
    std::vector<float>   *BranchBase::vx_x=0;
    std::vector<float>   *BranchBase::vx_y=0;
    std::vector<float>   *BranchBase::vx_z=0;
    std::vector<float>   *BranchBase::vx_cov_x=0;
    std::vector<float>   *BranchBase::vx_cov_y=0;
    std::vector<float>   *BranchBase::vx_cov_z=0;
    std::vector<float>   *BranchBase::vx_cov_xy=0;
    std::vector<float>   *BranchBase::vx_cov_xz=0;
    std::vector<float>   *BranchBase::vx_cov_yz=0;
    std::vector<int>     *BranchBase::vx_type=0;
    std::vector<float>   *BranchBase::vx_chi2=0;
    std::vector<int>     *BranchBase::vx_ndof=0;
    std::vector<float>   *BranchBase::vx_px=0;
    std::vector<float>   *BranchBase::vx_py=0;
    std::vector<float>   *BranchBase::vx_pz=0;
    std::vector<float>   *BranchBase::vx_E=0;
    std::vector<float>   *BranchBase::vx_m=0;
    std::vector<int>     *BranchBase::vx_nTracks=0;
    std::vector<float>   *BranchBase::vx_sumPt=0;
    std::vector<float>   *BranchBase::vx_sumWeightInliers=0;
    std::vector<float>   *BranchBase::vx_sumWeightOutliers=0;
    std::vector<float>   *BranchBase::vx_sumWeightPileup=0;
    std::vector<float>   *BranchBase::vx_sumWeightFakes=0;
    std::vector<int>     *BranchBase::vx_nInliers=0;
    std::vector<int>     *BranchBase::vx_nOutliers=0;
    std::vector<int>     *BranchBase::vx_nPileUp=0;
    std::vector<int>     *BranchBase::vx_nFakes=0;
    std::vector<float>   *BranchBase::vx_purity=0;
    std::vector<std::vector<float> > *BranchBase::vx_trk_weight=0;
    std::vector<int>     *BranchBase::vx_trk_n=0;
    std::vector<std::vector<int> > *BranchBase::vx_trk_index=0;
    Int_t BranchBase::           el_n=0;
    std::vector<float>   *BranchBase::el_E=0;
    std::vector<float>   *BranchBase::el_Et=0;
    std::vector<float>   *BranchBase::el_pt=0;
    std::vector<float>   *BranchBase::el_m=0;
    std::vector<float>   *BranchBase::el_eta=0;
    std::vector<float>   *BranchBase::el_phi=0;
    std::vector<float>   *BranchBase::el_px=0;
    std::vector<float>   *BranchBase::el_py=0;
    std::vector<float>   *BranchBase::el_pz=0;
    std::vector<float>   *BranchBase::el_charge=0;
    std::vector<int>     *BranchBase::el_author=0;
    std::vector<unsigned int> *BranchBase::el_isEM=0;
    std::vector<unsigned int> *BranchBase::el_isEMLoose=0;
    std::vector<unsigned int> *BranchBase::el_isEMMedium=0;
    std::vector<unsigned int> *BranchBase::el_isEMTight=0;
    std::vector<unsigned int> *BranchBase::el_OQ=0;
    std::vector<unsigned int> *BranchBase::el_OQRecalc=0;
    std::vector<int>     *BranchBase::el_type=0;
    std::vector<int>     *BranchBase::el_origin=0;
    std::vector<int>     *BranchBase::el_typebkg=0;
    std::vector<int>     *BranchBase::el_originbkg=0;
    std::vector<int>     *BranchBase::el_mediumWithoutTrack=0;
    std::vector<int>     *BranchBase::el_mediumIsoWithoutTrack=0;
    std::vector<int>     *BranchBase::el_tightWithoutTrack=0;
    std::vector<int>     *BranchBase::el_tightIsoWithoutTrack=0;
    std::vector<int>     *BranchBase::el_loose=0;
    std::vector<int>     *BranchBase::el_looseIso=0;
    std::vector<int>     *BranchBase::el_medium=0;
    std::vector<int>     *BranchBase::el_mediumIso=0;
    std::vector<int>     *BranchBase::el_tight=0;
    std::vector<int>     *BranchBase::el_tightIso=0;
    std::vector<int>     *BranchBase::el_loosePP=0;
    std::vector<int>     *BranchBase::el_loosePPIso=0;
    std::vector<int>     *BranchBase::el_mediumPP=0;
    std::vector<int>     *BranchBase::el_mediumPPIso=0;
    std::vector<int>     *BranchBase::el_tightPP=0;
    std::vector<int>     *BranchBase::el_tightPPIso=0;
    std::vector<int>     *BranchBase::el_goodOQ=0;
    std::vector<float>   *BranchBase::el_Ethad=0;
    std::vector<float>   *BranchBase::el_Ethad1=0;
    std::vector<float>   *BranchBase::el_f1=0;
    std::vector<float>   *BranchBase::el_f1core=0;
    std::vector<float>   *BranchBase::el_Emins1=0;
    std::vector<float>   *BranchBase::el_fside=0;
    std::vector<float>   *BranchBase::el_Emax2=0;
    std::vector<float>   *BranchBase::el_ws3=0;
    std::vector<float>   *BranchBase::el_wstot=0;
    std::vector<float>   *BranchBase::el_emaxs1=0;
    std::vector<float>   *BranchBase::el_deltaEs=0;
    std::vector<float>   *BranchBase::el_E233=0;
    std::vector<float>   *BranchBase::el_E237=0;
    std::vector<float>   *BranchBase::el_E277=0;
    std::vector<float>   *BranchBase::el_weta2=0;
    std::vector<float>   *BranchBase::el_f3=0;
    std::vector<float>   *BranchBase::el_f3core=0;
    std::vector<float>   *BranchBase::el_rphiallcalo=0;
    std::vector<float>   *BranchBase::el_Etcone45=0;
    std::vector<float>   *BranchBase::el_Etcone15=0;
    std::vector<float>   *BranchBase::el_Etcone20=0;
    std::vector<float>   *BranchBase::el_Etcone25=0;
    std::vector<float>   *BranchBase::el_Etcone30=0;
    std::vector<float>   *BranchBase::el_Etcone35=0;
    std::vector<float>   *BranchBase::el_Etcone40=0;
    std::vector<float>   *BranchBase::el_ptcone20=0;
    std::vector<float>   *BranchBase::el_ptcone30=0;
    std::vector<float>   *BranchBase::el_ptcone40=0;
    std::vector<float>   *BranchBase::el_nucone20=0;
    std::vector<float>   *BranchBase::el_nucone30=0;
    std::vector<float>   *BranchBase::el_nucone40=0;
    std::vector<float>   *BranchBase::el_Etcone15_pt_corrected=0;
    std::vector<float>   *BranchBase::el_Etcone20_pt_corrected=0;
    std::vector<float>   *BranchBase::el_Etcone25_pt_corrected=0;
    std::vector<float>   *BranchBase::el_Etcone30_pt_corrected=0;
    std::vector<float>   *BranchBase::el_Etcone35_pt_corrected=0;
    std::vector<float>   *BranchBase::el_Etcone40_pt_corrected=0;
    std::vector<float>   *BranchBase::el_convanglematch=0;
    std::vector<float>   *BranchBase::el_convtrackmatch=0;
    std::vector<float>   *BranchBase::el_pos7=0;
    std::vector<float>   *BranchBase::el_etacorrmag=0;
    std::vector<float>   *BranchBase::el_deltaeta1=0;
    std::vector<float>   *BranchBase::el_deltaeta2=0;
    std::vector<float>   *BranchBase::el_deltaphi2=0;
    std::vector<float>   *BranchBase::el_deltaphiRescaled=0;
    std::vector<float>   *BranchBase::el_deltaPhiRot=0;
    std::vector<float>   *BranchBase::el_expectHitInBLayer=0;
    std::vector<float>   *BranchBase::el_trackd0_physics=0;
    std::vector<float>   *BranchBase::el_etaSampling1=0;
    std::vector<float>   *BranchBase::el_reta=0;
    std::vector<float>   *BranchBase::el_rphi=0;
    std::vector<float>   *BranchBase::el_EtringnoisedR03sig2=0;
    std::vector<float>   *BranchBase::el_EtringnoisedR03sig3=0;
    std::vector<float>   *BranchBase::el_EtringnoisedR03sig4=0;
    std::vector<double>  *BranchBase::el_isolationlikelihoodjets=0;
    std::vector<double>  *BranchBase::el_isolationlikelihoodhqelectrons=0;
    std::vector<double>  *BranchBase::el_electronweight=0;
    std::vector<double>  *BranchBase::el_electronbgweight=0;
    std::vector<double>  *BranchBase::el_softeweight=0;
    std::vector<double>  *BranchBase::el_softebgweight=0;
    std::vector<double>  *BranchBase::el_neuralnet=0;
    std::vector<double>  *BranchBase::el_Hmatrix=0;
    std::vector<double>  *BranchBase::el_Hmatrix5=0;
    std::vector<double>  *BranchBase::el_adaboost=0;
    std::vector<double>  *BranchBase::el_softeneuralnet=0;
    std::vector<float>   *BranchBase::el_zvertex=0;
    std::vector<float>   *BranchBase::el_errz=0;
    std::vector<float>   *BranchBase::el_etap=0;
    std::vector<float>   *BranchBase::el_depth=0;
    std::vector<int>     *BranchBase::el_refittedTrack_n=0;
    std::vector<std::vector<int> > *BranchBase::el_refittedTrack_author=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_chi2=0;
    std::vector<std::vector<int> > *BranchBase::el_refittedTrack_hasBrem=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_bremRadius=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_bremZ=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_bremRadiusErr=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_bremZErr=0;
    std::vector<std::vector<int> > *BranchBase::el_refittedTrack_bremFitStatus=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_qoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_d0=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_z0=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_theta=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_phi=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_LMqoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covd0=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covz0=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covphi=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covtheta=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covqoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covd0z0=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covz0phi=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covz0theta=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covz0qoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covd0phi=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covd0theta=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covd0qoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covphitheta=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covphiqoverp=0;
    std::vector<std::vector<float> > *BranchBase::el_refittedTrack_covthetaqoverp=0;
    std::vector<float>   *BranchBase::el_Es0=0;
    std::vector<float>   *BranchBase::el_etas0=0;
    std::vector<float>   *BranchBase::el_phis0=0;
    std::vector<float>   *BranchBase::el_Es1=0;
    std::vector<float>   *BranchBase::el_etas1=0;
    std::vector<float>   *BranchBase::el_phis1=0;
    std::vector<float>   *BranchBase::el_Es2=0;
    std::vector<float>   *BranchBase::el_etas2=0;
    std::vector<float>   *BranchBase::el_phis2=0;
    std::vector<float>   *BranchBase::el_Es3=0;
    std::vector<float>   *BranchBase::el_etas3=0;
    std::vector<float>   *BranchBase::el_phis3=0;
    std::vector<float>   *BranchBase::el_E_PreSamplerB=0;
    std::vector<float>   *BranchBase::el_E_EMB1=0;
    std::vector<float>   *BranchBase::el_E_EMB2=0;
    std::vector<float>   *BranchBase::el_E_EMB3=0;
    std::vector<float>   *BranchBase::el_E_PreSamplerE=0;
    std::vector<float>   *BranchBase::el_E_EME1=0;
    std::vector<float>   *BranchBase::el_E_EME2=0;
    std::vector<float>   *BranchBase::el_E_EME3=0;
    std::vector<float>   *BranchBase::el_E_HEC0=0;
    std::vector<float>   *BranchBase::el_E_HEC1=0;
    std::vector<float>   *BranchBase::el_E_HEC2=0;
    std::vector<float>   *BranchBase::el_E_HEC3=0;
    std::vector<float>   *BranchBase::el_E_TileBar0=0;
    std::vector<float>   *BranchBase::el_E_TileBar1=0;
    std::vector<float>   *BranchBase::el_E_TileBar2=0;
    std::vector<float>   *BranchBase::el_E_TileGap1=0;
    std::vector<float>   *BranchBase::el_E_TileGap2=0;
    std::vector<float>   *BranchBase::el_E_TileGap3=0;
    std::vector<float>   *BranchBase::el_E_TileExt0=0;
    std::vector<float>   *BranchBase::el_E_TileExt1=0;
    std::vector<float>   *BranchBase::el_E_TileExt2=0;
    std::vector<float>   *BranchBase::el_E_FCAL0=0;
    std::vector<float>   *BranchBase::el_E_FCAL1=0;
    std::vector<float>   *BranchBase::el_E_FCAL2=0;
    std::vector<float>   *BranchBase::el_cl_E=0;
    std::vector<float>   *BranchBase::el_cl_pt=0;
    std::vector<float>   *BranchBase::el_cl_eta=0;
    std::vector<float>   *BranchBase::el_cl_phi=0;
    std::vector<float>   *BranchBase::el_rawcl_Es0=0;
    std::vector<float>   *BranchBase::el_rawcl_etas0=0;
    std::vector<float>   *BranchBase::el_rawcl_phis0=0;
    std::vector<float>   *BranchBase::el_rawcl_Es1=0;
    std::vector<float>   *BranchBase::el_rawcl_etas1=0;
    std::vector<float>   *BranchBase::el_rawcl_phis1=0;
    std::vector<float>   *BranchBase::el_rawcl_Es2=0;
    std::vector<float>   *BranchBase::el_rawcl_etas2=0;
    std::vector<float>   *BranchBase::el_rawcl_phis2=0;
    std::vector<float>   *BranchBase::el_rawcl_Es3=0;
    std::vector<float>   *BranchBase::el_rawcl_etas3=0;
    std::vector<float>   *BranchBase::el_rawcl_phis3=0;
    std::vector<float>   *BranchBase::el_rawcl_E=0;
    std::vector<float>   *BranchBase::el_rawcl_pt=0;
    std::vector<float>   *BranchBase::el_rawcl_eta=0;
    std::vector<float>   *BranchBase::el_rawcl_phi=0;
    std::vector<float>   *BranchBase::el_trackd0=0;
    std::vector<float>   *BranchBase::el_trackz0=0;
    std::vector<float>   *BranchBase::el_trackphi=0;
    std::vector<float>   *BranchBase::el_tracktheta=0;
    std::vector<float>   *BranchBase::el_trackqoverp=0;
    std::vector<float>   *BranchBase::el_trackpt=0;
    std::vector<float>   *BranchBase::el_tracketa=0;
    std::vector<float>   *BranchBase::el_trackcov_d0=0;
    std::vector<float>   *BranchBase::el_trackcov_z0=0;
    std::vector<float>   *BranchBase::el_trackcov_phi=0;
    std::vector<float>   *BranchBase::el_trackcov_theta=0;
    std::vector<float>   *BranchBase::el_trackcov_qoverp=0;
    std::vector<float>   *BranchBase::el_trackcov_d0_z0=0;
    std::vector<float>   *BranchBase::el_trackcov_d0_phi=0;
    std::vector<float>   *BranchBase::el_trackcov_d0_theta=0;
    std::vector<float>   *BranchBase::el_trackcov_d0_qoverp=0;
    std::vector<float>   *BranchBase::el_trackcov_z0_phi=0;
    std::vector<float>   *BranchBase::el_trackcov_z0_theta=0;
    std::vector<float>   *BranchBase::el_trackcov_z0_qoverp=0;
    std::vector<float>   *BranchBase::el_trackcov_phi_theta=0;
    std::vector<float>   *BranchBase::el_trackcov_phi_qoverp=0;
    std::vector<float>   *BranchBase::el_trackcov_theta_qoverp=0;
    std::vector<float>   *BranchBase::el_trackfitchi2=0;
    std::vector<int>     *BranchBase::el_trackfitndof=0;
    std::vector<int>     *BranchBase::el_nBLHits=0;
    std::vector<int>     *BranchBase::el_nPixHits=0;
    std::vector<int>     *BranchBase::el_nSCTHits=0;
    std::vector<int>     *BranchBase::el_nTRTHits=0;
    std::vector<int>     *BranchBase::el_nTRTHighTHits=0;
    std::vector<int>     *BranchBase::el_nPixHoles=0;
    std::vector<int>     *BranchBase::el_nSCTHoles=0;
    std::vector<int>     *BranchBase::el_nTRTHoles=0;
    std::vector<int>     *BranchBase::el_nBLSharedHits=0;
    std::vector<int>     *BranchBase::el_nPixSharedHits=0;
    std::vector<int>     *BranchBase::el_nSCTSharedHits=0;
    std::vector<int>     *BranchBase::el_nBLayerOutliers=0;
    std::vector<int>     *BranchBase::el_nPixelOutliers=0;
    std::vector<int>     *BranchBase::el_nSCTOutliers=0;
    std::vector<int>     *BranchBase::el_nTRTOutliers=0;
    std::vector<int>     *BranchBase::el_nTRTHighTOutliers=0;
    std::vector<int>     *BranchBase::el_expectBLayerHit=0;
    std::vector<int>     *BranchBase::el_nSiHits=0;
    std::vector<float>   *BranchBase::el_TRTHighTHitsRatio=0;
    std::vector<float>   *BranchBase::el_TRTHighTOutliersRatio=0;
    std::vector<float>   *BranchBase::el_pixeldEdx=0;
    std::vector<int>     *BranchBase::el_nGoodHitsPixeldEdx=0;
    std::vector<float>   *BranchBase::el_massPixeldEdx=0;
    std::vector<std::vector<float> > *BranchBase::el_likelihoodsPixeldEdx=0;
    std::vector<float>   *BranchBase::el_eProbabilityComb=0;
    std::vector<float>   *BranchBase::el_eProbabilityHT=0;
    std::vector<float>   *BranchBase::el_eProbabilityToT=0;
    std::vector<float>   *BranchBase::el_eProbabilityBrem=0;
    std::vector<float>   *BranchBase::el_vertweight=0;
    std::vector<float>   *BranchBase::el_vertx=0;
    std::vector<float>   *BranchBase::el_verty=0;
    std::vector<float>   *BranchBase::el_vertz=0;
    std::vector<float>   *BranchBase::el_trackd0beam=0;
    std::vector<float>   *BranchBase::el_trackz0beam=0;
    std::vector<float>   *BranchBase::el_tracksigd0beam=0;
    std::vector<float>   *BranchBase::el_tracksigz0beam=0;
    std::vector<float>   *BranchBase::el_trackd0pv=0;
    std::vector<float>   *BranchBase::el_trackz0pv=0;
    std::vector<float>   *BranchBase::el_tracksigd0pv=0;
    std::vector<float>   *BranchBase::el_tracksigz0pv=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_d0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_z0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_sigd0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_sigz0_biasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_d0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_z0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_sigd0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackIPEstimate_sigz0_unbiasedpvunbiased=0;
    std::vector<float>   *BranchBase::el_trackd0pvunbiased=0;
    std::vector<float>   *BranchBase::el_trackz0pvunbiased=0;
    std::vector<float>   *BranchBase::el_tracksigd0pvunbiased=0;
    std::vector<float>   *BranchBase::el_tracksigz0pvunbiased=0;
    std::vector<int>     *BranchBase::el_hastrack=0;
    std::vector<float>   *BranchBase::el_deltaEmax2=0;
    std::vector<float>   *BranchBase::el_calibHitsShowerDepth=0;
    std::vector<unsigned int> *BranchBase::el_isIso=0;
    std::vector<float>   *BranchBase::el_mvaptcone20=0;
    std::vector<float>   *BranchBase::el_mvaptcone30=0;
    std::vector<float>   *BranchBase::el_mvaptcone40=0;
    std::vector<float>   *BranchBase::el_EF_dr=0;
    std::vector<float>   *BranchBase::el_L2_dr=0;
    std::vector<float>   *BranchBase::el_L1_dr=0;
    std::vector<int>     *BranchBase::el_L1_index=0;
    Int_t BranchBase::           ph_n=0;
    std::vector<float>   *BranchBase::ph_E=0;
    std::vector<float>   *BranchBase::ph_Et=0;
    std::vector<float>   *BranchBase::ph_pt=0;
    std::vector<float>   *BranchBase::ph_m=0;
    std::vector<float>   *BranchBase::ph_eta=0;
    std::vector<float>   *BranchBase::ph_phi=0;
    std::vector<float>   *BranchBase::ph_px=0;
    std::vector<float>   *BranchBase::ph_py=0;
    std::vector<float>   *BranchBase::ph_pz=0;
    std::vector<int>     *BranchBase::ph_author=0;
    std::vector<int>     *BranchBase::ph_isRecovered=0;
    std::vector<unsigned int> *BranchBase::ph_isEM=0;
    std::vector<unsigned int> *BranchBase::ph_isEMLoose=0;
    std::vector<unsigned int> *BranchBase::ph_isEMMedium=0;
    std::vector<unsigned int> *BranchBase::ph_isEMTight=0;
    std::vector<unsigned int> *BranchBase::ph_OQ=0;
    std::vector<unsigned int> *BranchBase::ph_OQRecalc=0;
    std::vector<int>     *BranchBase::ph_type=0;
    std::vector<int>     *BranchBase::ph_origin=0;
    std::vector<int>     *BranchBase::ph_loose=0;
    std::vector<int>     *BranchBase::ph_looseIso=0;
    std::vector<int>     *BranchBase::ph_tight=0;
    std::vector<int>     *BranchBase::ph_tightIso=0;
    std::vector<int>     *BranchBase::ph_looseAR=0;
    std::vector<int>     *BranchBase::ph_looseARIso=0;
    std::vector<int>     *BranchBase::ph_tightAR=0;
    std::vector<int>     *BranchBase::ph_tightARIso=0;
    std::vector<int>     *BranchBase::ph_goodOQ=0;
    std::vector<float>   *BranchBase::ph_Ethad=0;
    std::vector<float>   *BranchBase::ph_Ethad1=0;
    std::vector<float>   *BranchBase::ph_E033=0;
    std::vector<float>   *BranchBase::ph_f1=0;
    std::vector<float>   *BranchBase::ph_f1core=0;
    std::vector<float>   *BranchBase::ph_Emins1=0;
    std::vector<float>   *BranchBase::ph_fside=0;
    std::vector<float>   *BranchBase::ph_Emax2=0;
    std::vector<float>   *BranchBase::ph_ws3=0;
    std::vector<float>   *BranchBase::ph_wstot=0;
    std::vector<float>   *BranchBase::ph_E132=0;
    std::vector<float>   *BranchBase::ph_E1152=0;
    std::vector<float>   *BranchBase::ph_emaxs1=0;
    std::vector<float>   *BranchBase::ph_deltaEs=0;
    std::vector<float>   *BranchBase::ph_E233=0;
    std::vector<float>   *BranchBase::ph_E237=0;
    std::vector<float>   *BranchBase::ph_E277=0;
    std::vector<float>   *BranchBase::ph_weta2=0;
    std::vector<float>   *BranchBase::ph_f3=0;
    std::vector<float>   *BranchBase::ph_f3core=0;
    std::vector<float>   *BranchBase::ph_rphiallcalo=0;
    std::vector<float>   *BranchBase::ph_Etcone45=0;
    std::vector<float>   *BranchBase::ph_Etcone15=0;
    std::vector<float>   *BranchBase::ph_Etcone20=0;
    std::vector<float>   *BranchBase::ph_Etcone25=0;
    std::vector<float>   *BranchBase::ph_Etcone30=0;
    std::vector<float>   *BranchBase::ph_Etcone35=0;
    std::vector<float>   *BranchBase::ph_Etcone40=0;
    std::vector<float>   *BranchBase::ph_ptcone20=0;
    std::vector<float>   *BranchBase::ph_ptcone30=0;
    std::vector<float>   *BranchBase::ph_ptcone40=0;
    std::vector<float>   *BranchBase::ph_nucone20=0;
    std::vector<float>   *BranchBase::ph_nucone30=0;
    std::vector<float>   *BranchBase::ph_nucone40=0;
    std::vector<float>   *BranchBase::ph_Etcone15_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_Etcone20_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_Etcone25_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_Etcone30_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_Etcone35_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_Etcone40_pt_corrected=0;
    std::vector<float>   *BranchBase::ph_convanglematch=0;
    std::vector<float>   *BranchBase::ph_convtrackmatch=0;
    std::vector<float>   *BranchBase::ph_reta=0;
    std::vector<float>   *BranchBase::ph_rphi=0;
    std::vector<float>   *BranchBase::ph_EtringnoisedR03sig2=0;
    std::vector<float>   *BranchBase::ph_EtringnoisedR03sig3=0;
    std::vector<float>   *BranchBase::ph_EtringnoisedR03sig4=0;
    std::vector<double>  *BranchBase::ph_isolationlikelihoodjets=0;
    std::vector<double>  *BranchBase::ph_isolationlikelihoodhqelectrons=0;
    std::vector<double>  *BranchBase::ph_loglikelihood=0;
    std::vector<double>  *BranchBase::ph_photonweight=0;
    std::vector<double>  *BranchBase::ph_photonbgweight=0;
    std::vector<double>  *BranchBase::ph_neuralnet=0;
    std::vector<double>  *BranchBase::ph_Hmatrix=0;
    std::vector<double>  *BranchBase::ph_Hmatrix5=0;
    std::vector<double>  *BranchBase::ph_adaboost=0;
    std::vector<float>   *BranchBase::ph_zvertex=0;
    std::vector<float>   *BranchBase::ph_errz=0;
    std::vector<float>   *BranchBase::ph_etap=0;
    std::vector<float>   *BranchBase::ph_depth=0;
    std::vector<float>   *BranchBase::ph_cl_E=0;
    std::vector<float>   *BranchBase::ph_cl_pt=0;
    std::vector<float>   *BranchBase::ph_cl_eta=0;
    std::vector<float>   *BranchBase::ph_cl_phi=0;
    std::vector<float>   *BranchBase::ph_Es0=0;
    std::vector<float>   *BranchBase::ph_etas0=0;
    std::vector<float>   *BranchBase::ph_phis0=0;
    std::vector<float>   *BranchBase::ph_Es1=0;
    std::vector<float>   *BranchBase::ph_etas1=0;
    std::vector<float>   *BranchBase::ph_phis1=0;
    std::vector<float>   *BranchBase::ph_Es2=0;
    std::vector<float>   *BranchBase::ph_etas2=0;
    std::vector<float>   *BranchBase::ph_phis2=0;
    std::vector<float>   *BranchBase::ph_Es3=0;
    std::vector<float>   *BranchBase::ph_etas3=0;
    std::vector<float>   *BranchBase::ph_phis3=0;
    std::vector<float>   *BranchBase::ph_rawcl_Es0=0;
    std::vector<float>   *BranchBase::ph_rawcl_etas0=0;
    std::vector<float>   *BranchBase::ph_rawcl_phis0=0;
    std::vector<float>   *BranchBase::ph_rawcl_Es1=0;
    std::vector<float>   *BranchBase::ph_rawcl_etas1=0;
    std::vector<float>   *BranchBase::ph_rawcl_phis1=0;
    std::vector<float>   *BranchBase::ph_rawcl_Es2=0;
    std::vector<float>   *BranchBase::ph_rawcl_etas2=0;
    std::vector<float>   *BranchBase::ph_rawcl_phis2=0;
    std::vector<float>   *BranchBase::ph_rawcl_Es3=0;
    std::vector<float>   *BranchBase::ph_rawcl_etas3=0;
    std::vector<float>   *BranchBase::ph_rawcl_phis3=0;
    std::vector<float>   *BranchBase::ph_rawcl_E=0;
    std::vector<float>   *BranchBase::ph_rawcl_pt=0;
    std::vector<float>   *BranchBase::ph_rawcl_eta=0;
    std::vector<float>   *BranchBase::ph_rawcl_phi=0;
    std::vector<int>     *BranchBase::ph_truth_isConv=0;
    std::vector<int>     *BranchBase::ph_truth_isBrem=0;
    std::vector<int>     *BranchBase::ph_truth_isFromHardProc=0;
    std::vector<int>     *BranchBase::ph_truth_isPhotonFromHardProc=0;
    std::vector<float>   *BranchBase::ph_truth_Rconv=0;
    std::vector<float>   *BranchBase::ph_truth_zconv=0;
    std::vector<float>   *BranchBase::ph_deltaEmax2=0;
    std::vector<float>   *BranchBase::ph_calibHitsShowerDepth=0;
    std::vector<unsigned int> *BranchBase::ph_isIso=0;
    std::vector<float>   *BranchBase::ph_mvaptcone20=0;
    std::vector<float>   *BranchBase::ph_mvaptcone30=0;
    std::vector<float>   *BranchBase::ph_mvaptcone40=0;
    std::vector<float>   *BranchBase::ph_EF_dr=0;
    std::vector<int>     *BranchBase::ph_EF_index=0;
    std::vector<float>   *BranchBase::ph_L2_dr=0;
    std::vector<float>   *BranchBase::ph_L1_dr=0;
    std::vector<int>     *BranchBase::ph_L1_index=0;
    Int_t BranchBase::           mcVx_n=0;
    std::vector<float>   *BranchBase::mcVx_x=0;
    std::vector<float>   *BranchBase::mcVx_y=0;
    std::vector<float>   *BranchBase::mcVx_z=0;
    Int_t BranchBase::           mc_n=0;
    std::vector<float>   *BranchBase::mc_gen_E=0;
    std::vector<float>   *BranchBase::mc_gen_pt=0;
    std::vector<float>   *BranchBase::mc_gen_eta=0;
    std::vector<float>   *BranchBase::mc_gen_phi=0;
    std::vector<int>     *BranchBase::mc_gen_type=0;
    std::vector<int>     *BranchBase::mc_gen_status=0;
    std::vector<int>     *BranchBase::mc_gen_barcode=0;
    std::vector<int>     *BranchBase::mc_gen_mothertype=0;
    std::vector<int>     *BranchBase::mc_gen_motherbarcode=0;
    std::vector<int>     *BranchBase::mc_perigee_ok=0;
    std::vector<float>   *BranchBase::mc_perigee_d0=0;
    std::vector<float>   *BranchBase::mc_perigee_z0=0;
    std::vector<float>   *BranchBase::mc_perigee_phi=0;
    std::vector<float>   *BranchBase::mc_perigee_theta=0;
    std::vector<float>   *BranchBase::mc_perigee_qoverp=0;
    std::vector<float>   *BranchBase::mc_charge=0;
    std::vector<int>     *BranchBase::mc_child_n=0;
    std::vector<std::vector<int> > *BranchBase::mc_child_barcode=0;
    std::vector<std::vector<int> > *BranchBase::mc_child_pdg=0;
    std::vector<float>   *BranchBase::mc_begVtx_x=0;
    std::vector<float>   *BranchBase::mc_begVtx_y=0;
    std::vector<float>   *BranchBase::mc_begVtx_z=0;
    std::vector<float>   *BranchBase::mc_begVtx_barcode=0;
    std::vector<float>   *BranchBase::mc_endVtx_x=0;
    std::vector<float>   *BranchBase::mc_endVtx_y=0;
    std::vector<float>   *BranchBase::mc_endVtx_z=0;
    std::vector<float>   *BranchBase::mc_endVtx_barcode=0;
    Int_t BranchBase::           mc_unstable_n=0;
    std::vector<float>   *BranchBase::mc_unstable_gen_pt=0;
    std::vector<float>   *BranchBase::mc_unstable_gen_eta=0;
    std::vector<float>   *BranchBase::mc_unstable_gen_phi=0;
    std::vector<float>   *BranchBase::mc_unstable_gen_energy=0;
    std::vector<int>     *BranchBase::mc_unstable_perigee_ok=0;
    std::vector<float>   *BranchBase::mc_unstable_perigee_d0=0;
    std::vector<float>   *BranchBase::mc_unstable_perigee_z0=0;
    std::vector<float>   *BranchBase::mc_unstable_perigee_phi=0;
    std::vector<float>   *BranchBase::mc_unstable_perigee_theta=0;
    std::vector<float>   *BranchBase::mc_unstable_perigee_qoverp=0;
    std::vector<int>     *BranchBase::mc_unstable_pdg=0;
    std::vector<float>   *BranchBase::mc_unstable_charge=0;
    std::vector<int>     *BranchBase::mc_unstable_barcode=0;
    std::vector<int>     *BranchBase::mc_unstable_status=0;
    std::vector<int>     *BranchBase::mc_unstable_mother_pdg=0;
    std::vector<int>     *BranchBase::mc_unstable_mother_barcode=0;
    std::vector<int>     *BranchBase::mc_unstable_child_n=0;
    std::vector<std::vector<int> > *BranchBase::mc_unstable_child_barcode=0;
    std::vector<float>   *BranchBase::mc_unstable_begVtx_x=0;
    std::vector<float>   *BranchBase::mc_unstable_begVtx_y=0;
    std::vector<float>   *BranchBase::mc_unstable_begVtx_z=0;
    std::vector<float>   *BranchBase::mc_unstable_begVtx_barcode=0;
    std::vector<float>   *BranchBase::mc_unstable_endVtx_x=0;
    std::vector<float>   *BranchBase::mc_unstable_endVtx_y=0;
    std::vector<float>   *BranchBase::mc_unstable_endVtx_z=0;
    std::vector<float>   *BranchBase::mc_unstable_endVtx_barcode=0;

