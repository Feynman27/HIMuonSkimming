//
// File generated by rootcint at Mon Aug 19 04:05:15 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MuonSlim MuonSlim;
      #else
      class MuonSlim  {
         public:
         //friend XX;
         ::TChain* ntupleToRead; //
         ::TFile* output; //
         ::TFile* fMB; //
         ::TH1F* hM; //
         ::TH1F* hZDY; //
         ::TH1F* hJETS15; //
         ::TH1F* hJETS20; //
         ::TH1F* hJETS25; //
         ::TH1F* hJETS30; //
         ::TTree* tree; //
         ::TTree* tMB; //
         string sMC; //
         string sMCJ2; //
         string sMB; //
         string sHP; //
         string sHipHP; //
         string sPP; //
         string sMSUP; //
         string sMSLOW; //
         string sIDUP; //
         string sIDLOW; //
         ::TRandom3 r; //
         bool doSmearSyst; //
         ::TString outName; //
         float mu_muid_truth_dr[30]; //
         float mu_muid_truth_E[30]; //
         float mu_muid_truth_pt[30]; //
         float mu_muid_truth_eta[30]; //
         float mu_muid_truth_phi[30]; //
         int mu_muid_nPixHits[30]; //
         int mu_muid_nBLHits[30]; //
         int mu_muid_nSCTHits[30]; //
         int mu_muid_nPixHoles[30]; //
         int mu_muid_nSCTHoles[30]; //
         int mu_muid_matchndof[30]; //
         int mu_muid_expectBLayerHit[30]; //
         int mu_muid_nPixelDeadSensors[30]; //
         int mu_muid_nSCTDeadSensors[30]; //
         int mu_muid_nTRTOutliers[30]; //
         float mu_muid_d0_exPV[30]; //
         float mu_muid_z0_exPV[30]; //
         float mu_muid_id_d0_exPV[30]; //
         float mu_muid_id_qoverp[30]; //
         float mu_muid_me_qoverp[30]; //
         float mu_muid_matchchi2[30]; //
         int mu_muid_truth_type[30]; //
         int mu_muid_truth_barcode[30]; //
         int mu_muid_truth_mothertype[30]; //
         int mu_muid_truth_motherbarcode[30]; //
         int mu_muid_truth_matched[30]; //
         int mu_muid_n; //
         int muid_npairs; //
         int trig_EF_trigmuonef_n; //
         int Mymu_muid_n; //
         int Myantikt2HIItrEM_n; //
         int Mytrig_EF_trigmuonef_n; //
         int Mymc_mu_n; //
         int Mymc_gamma_n; //
         int trig_EF_trigmuonef_track_n[30]; //
         int isGoodMuon[30]; //
         int mu_muid_nTRTHits[30]; //
         int RunNumber; //
         int EventNumber; //
         int EF_mu4_MSonly_L1TE50; //
         int EF_mu4_L1VTE50; //
         int EF_mu10_MSonly_EFFS_L1ZDC; //
         int EF_mu10_MSonly_EFFS_L1TE20; //
         int EF_mu10_MSonly_EFFS_L1TE10; //
         int EF_mu10; //
         int EF_mu4; //
         int EF_mu8; //
         int EF_mu4_j40_a4hi_EFFS_matched; //
         int EF_mu4_IDTrkNoCut; //
         int EF_L1MBTS_2_NoAlg; //
         int EF_mu8_IDTrkNoCut; //
         int EF_L1MBTS_1_1_NoAlg; //
         int EF_mbZdc_a_c_L1VTE50_trk; //
         int EF_L1TE50_NoAlg; //
         int L1_MU0; //
         int mu_muid_isCombinedMuon[30]; //
         int mu_muid_L1_matched[30]; //
         int mu_muid_isStandAloneMuon[30]; //
         float mu_muid_ms_d0[30]; //
         float mu_muid_ms_z0[30]; //
         int mc_mu_n; //
         int mc_gamma_n; //
         float mc_mu_gen_E[30]; //
         float mc_mu_gen_pt[30]; //
         float mc_mu_gen_eta[30]; //
         float mc_mu_gen_phi[30]; //
         float mc_mu_charge[30]; //
         int mc_mu_gen_mothertype[30]; //
         int mc_mu_gen_type[30]; //
         int mc_nu_n; //
         float mc_nu_gen_E[30]; //
         float mc_nu_gen_pt[30]; //
         float mc_nu_gen_eta[30]; //
         float mc_nu_gen_phi[30]; //
         float mc_nu_charge[30]; //
         int mc_nu_gen_mothertype[30]; //
         int mc_nu_gen_type[30]; //
         float mc_gen_WbosonMass[30]; //
         float mc_gen_WbosonPt[30]; //
         float mc_gen_WbosonRapidity[30]; //
         float mc_gen_WbosonPseudoRapidity[30]; //
         float mc_gen_WbosonPhi[30]; //
         float mc_gamma_gen_E[30]; //
         float mc_gamma_gen_pt[30]; //
         float mc_gamma_gen_eta[30]; //
         float mc_gamma_gen_phi[30]; //
         float mc_gamma_charge[30]; //
         int mc_gamma_gen_mothertype[30]; //
         int mc_gamma_gen_type[30]; //
         float Mymc_mu_gen_E[30]; //
         float Mymc_mu_gen_pt[30]; //
         float Mymc_mu_gen_eta[30]; //
         float Mymc_mu_gen_phi[30]; //
         float Mymc_mu_charge[30]; //
         int Mymc_mu_gen_type[30]; //
         int Mymc_mu_gen_mothertype[30]; //
         float Mymc_nu_gen_E[30]; //
         float Mymc_nu_gen_pt[30]; //
         float Mymc_nu_gen_eta[30]; //
         float Mymc_nu_gen_phi[30]; //
         float Mymc_nu_charge[30]; //
         int Mymc_nu_gen_type[30]; //
         int Mymc_nu_gen_mothertype[30]; //
         float Mymc_gen_WbosonNominalPhi[30]; //
         float Mymc_gen_WbosonNominalMass[30]; //
         float Mymc_gen_WbosonNominalPt[30]; //
         float Mymc_gen_WbosonNominalRapidity[30]; //
         float Mymc_gen_WbosonNominalPseudoRapidity[30]; //
         float Mymc_gen_WbosonCorrectedPhi[30]; //
         float Mymc_gen_WbosonCorrectedMass[30]; //
         float Mymc_gen_WbosonCorrectedPt[30]; //
         float Mymc_gen_WbosonCorrectedRapidity[30]; //
         float Mymc_gen_WbosonCorrectedPseudoRapidity[30]; //
         float dPhiWJet[30]; //
         float Mymc_gamma_gen_E[30]; //
         float Mymc_gamma_gen_pt[30]; //
         float Mymc_gamma_gen_eta[30]; //
         float Mymc_gamma_gen_phi[30]; //
         float Mymc_gamma_charge[30]; //
         int Mymc_gamma_gen_type[30]; //
         int Mymc_gamma_gen_mothertype[30]; //
         int trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]; //
         int trig_EF_trigmuonef_EF_mu4_L1VTE50[30]; //
         int trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]; //
         int trig_EF_trigmuonef_EF_mu10[30]; //
         int trig_EF_trigmuonef_EF_mu4[30]; //
         int trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]; //
         int trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]; //
         int trig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]; //
         int trig_EF_trigmuonef_EF_mu8[30]; //
         int trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]; //
         int trig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]; //
         double pTCB_smeared[30]; //
         double mTCB_smeared[30]; //
         double pTMS_smeared[30]; //
         double pTID_smeared[30]; //
         float pt_tru[30]; //
         float E_tru[30]; //
         float eta_tru[30]; //
         float phi_tru[30]; //
         int truthMatched_muid[30]; //
         float mu_muid_pt[30]; //
         float mu_muid_eta[30]; //
         float mu_muid_id_phi_exPV[30]; //
         float mu_muid_ms_theta[30]; //
         float mu_muid_ms_phi[30]; //
         float muid_scatSignificance[30]; //
         float mu_muid_charge[30]; //
         float Fcal_Et; //
         float Centrality; //
         float mbtime_timeA; //
         float mbtime_timeC; //
         float vx_x; //
         float vx_y; //
         float vx_z; //
         float vx_xNt; //
         float vx_yNt; //
         float vx_zNt; //
         vector< float >* cccEt_p_Eh_FCal; //
         float caloMET; //
         float caloMEx; //
         float caloMEy; //
         float MET_RefFinal_et; //
         float MET_RefFinal_etx; //
         float MET_RefFinal_ety; //
         float MET_RefFinal_phi; //
         float MET_RefFinal_sumet; //
         float subtractedMPT; //
         float nu_pt500; //
         float nu_px500; //
         float nu_py500; //
         float nu_pz500; //
         float nu_theta500; //
         float nu_eta500; //
         float nu_phi500; //
         float nu_pt1000; //
         float nu_px1000; //
         float nu_py1000; //
         float nu_pz1000; //
         float nu_theta1000; //
         float nu_eta1000; //
         float nu_phi1000; //
         float nu_pt2000; //
         float nu_px2000; //
         float nu_py2000; //
         float nu_pz2000; //
         float nu_theta2000; //
         float nu_eta2000; //
         float nu_phi2000; //
         float nu_pt3000; //
         float nu_px3000; //
         float nu_py3000; //
         float nu_pz3000; //
         float nu_theta3000; //
         float nu_eta3000; //
         float nu_phi3000; //
         float nu_pt4000; //
         float nu_px4000; //
         float nu_py4000; //
         float nu_theta4000; //
         float nu_eta4000; //
         float nu_phi4000; //
         float nu_pt5000; //
         float nu_px5000; //
         float nu_py5000; //
         float nu_theta5000; //
         float nu_eta5000; //
         float nu_phi5000; //
         int hasHiPtMuon; //
         float scaledMPT[30]; //
         float mu_muid_phi[30]; //
         float mu_muid_me_qoverp_exPV[30]; //
         float mu_muid_ptcone20[30]; //
         float mu_muid_ptcone30[30]; //
         float mu_muid_ptcone40[30]; //
         float mu_muid_etcone20[30]; //
         float mu_muid_etcone30[30]; //
         float mu_muid_etcone40[30]; //
         float mu_muid_ptcone10ID05[30]; //
         float mu_muid_ptcone15ID05[30]; //
         float mu_muid_ptcone20ID05[30]; //
         float mu_muid_ptcone30ID05[30]; //
         float mu_muid_ptcone40ID05[30]; //
         float mu_muid_ptcone50ID05[30]; //
         float mu_muid_ptcone10ID075[30]; //
         float mu_muid_ptcone15ID075[30]; //
         float mu_muid_ptcone20ID075[30]; //
         float mu_muid_ptcone30ID075[30]; //
         float mu_muid_ptcone40ID075[30]; //
         float mu_muid_ptcone50ID075[30]; //
         float mu_muid_ptcone10ID1[30]; //
         float mu_muid_ptcone15ID1[30]; //
         float mu_muid_ptcone20ID1[30]; //
         float mu_muid_ptcone30ID1[30]; //
         float mu_muid_ptcone40ID1[30]; //
         float mu_muid_ptcone50ID1[30]; //
         float mu_muid_ptcone10ID2[30]; //
         float mu_muid_ptcone15ID2[30]; //
         float mu_muid_ptcone20ID2[30]; //
         float mu_muid_ptcone30ID2[30]; //
         float mu_muid_ptcone40ID2[30]; //
         float mu_muid_ptcone50ID2[30]; //
         float mu_muid_ptcone10ID3[30]; //
         float mu_muid_ptcone15ID3[30]; //
         float mu_muid_ptcone20ID3[30]; //
         float mu_muid_ptcone30ID3[30]; //
         float mu_muid_ptcone40ID3[30]; //
         float mu_muid_ptcone50ID3[30]; //
         float mu_muid_ptcone10ID4[30]; //
         float mu_muid_ptcone15ID4[30]; //
         float mu_muid_ptcone20ID4[30]; //
         float mu_muid_ptcone30ID4[30]; //
         float mu_muid_ptcone40ID4[30]; //
         float mu_muid_ptcone50ID4[30]; //
         float mu_muid_ptcone10ID5[30]; //
         float mu_muid_ptcone15ID5[30]; //
         float mu_muid_ptcone20ID5[30]; //
         float mu_muid_ptcone30ID5[30]; //
         float mu_muid_ptcone40ID5[30]; //
         float mu_muid_ptcone50ID5[30]; //
         float mu_muid_ptcone10ID6[30]; //
         float mu_muid_ptcone15ID6[30]; //
         float mu_muid_ptcone20ID6[30]; //
         float mu_muid_ptcone30ID6[30]; //
         float mu_muid_ptcone40ID6[30]; //
         float mu_muid_ptcone50ID6[30]; //
         float mu_muid_id_z0_exPV[30]; //
         float mu_muid_me_z0[30]; //
         float mu_muid_ms_qoverp[30]; //
         float mu_muid_id_qoverp_exPV[30]; //
         float mu_muid_id_theta_exPV[30]; //
         vector< vector< float, allocator< float >  >  >* trig_EF_trigmuonef_track_MS_phi; //
         vector< vector< float, allocator< float >  >  >* trig_EF_trigmuonef_track_MS_eta; //
         vector< vector< int, allocator< int >  >  >* trig_EF_trigmuonef_track_MS_hasMS; //
         int jetBranch; //
         int hiPtJets; //
         int antikt2HIItrEM_n; //
         float antikt2HIItrEM_E[100]; //
         float antikt2HIItrEM_pt[100]; //
         float antikt2HIItrEM_eta[100]; //
         float antikt2HIItrEM_phi[100]; //
         int AntiKt4TopoEM_n; //
         float AntiKt4TopoEM_E[100]; //
         float AntiKt4TopoEM_pt[100]; //
         float AntiKt4TopoEM_eta[100]; //
         float AntiKt4TopoEM_phi[100]; //
         int njets; //
         float jet_E[100]; //
         float jet_Et[100]; //
         float jet_phi[100]; //
         float jet_pt[100]; //
         float jet_eta[100]; //
         vector< vector< float, allocator< float >  >  >* mujetdR; //
         vector< vector< float, allocator< float >  >  >* trigMu4dR; //
         vector< vector< float, allocator< float >  >  >* trigMu10dR; //
         vector< vector< float, allocator< float >  >  >* massCB; //
         vector< vector< float, allocator< float >  >  >* dphiMuJet; //
         vector< vector< float, allocator< float >  >  >* detaMuJet; //
         int JETS; //
         int JETS1; //
         vector< vector< float, allocator< float >  >  >* mugammadR; //
         vector< float > mugammadR_one; //
         vector< vector< float, allocator< float >  >  >* dphiMuGamma; //
         vector< float > dphiMuGamma_one; //
         vector< vector< float, allocator< float >  >  >* detaMuGamma; //
         vector< float > detaMuGamma_one; //
         int val[30]; //
         int valSA[30]; //
         int prompt[30]; //
         int ntrt[30]; //
         int run; //
         int event; //
         int EFtrig1; //
         int EFtrig2; //
         int EFtrig3; //
         int EFtrig4; //
         int EFtrig5; //
         int EFtrig_hip1; //
         int EFtrig_hip2; //
         int EFtrig_hip3; //
         int EFtrig_hip4; //
         int EFtrig_hip5; //
         int EFtrig_hipMB; //
         float pt[30]; //
         float ptMS[30]; //
         float ptID[30]; //
         float phi[30]; //
         float eta[30]; //
         float phiMS[30]; //
         float etaMS[30]; //
         float thetaMS[30]; //
         float z0[30]; //
         float z0SA[30]; //
         float eLoss[30]; //
         float charge[30]; //
         float scat[30]; //
         float comp[30]; //
         float fcal; //
         float mbts; //
         float centrality; //
         float ptcone20[30]; //
         float ptcone30[30]; //
         float ptcone40[30]; //
         float etcone20[30]; //
         float etcone30[30]; //
         float etcone40[30]; //
         float ptcone10ID05[30]; //
         float ptcone15ID05[30]; //
         float ptcone20ID05[30]; //
         float ptcone30ID05[30]; //
         float ptcone40ID05[30]; //
         float ptcone50ID05[30]; //
         float ptcone10ID075[30]; //
         float ptcone15ID075[30]; //
         float ptcone20ID075[30]; //
         float ptcone30ID075[30]; //
         float ptcone40ID075[30]; //
         float ptcone50ID075[30]; //
         float ptcone10ID1[30]; //
         float ptcone15ID1[30]; //
         float ptcone20ID1[30]; //
         float ptcone30ID1[30]; //
         float ptcone40ID1[30]; //
         float ptcone50ID1[30]; //
         float ptcone10ID2[30]; //
         float ptcone15ID2[30]; //
         float ptcone20ID2[30]; //
         float ptcone30ID2[30]; //
         float ptcone40ID2[30]; //
         float ptcone50ID2[30]; //
         float ptcone10ID3[30]; //
         float ptcone15ID3[30]; //
         float ptcone20ID3[30]; //
         float ptcone30ID3[30]; //
         float ptcone40ID3[30]; //
         float ptcone50ID3[30]; //
         float ptcone10ID4[30]; //
         float ptcone15ID4[30]; //
         float ptcone20ID4[30]; //
         float ptcone30ID4[30]; //
         float ptcone40ID4[30]; //
         float ptcone50ID4[30]; //
         float ptcone10ID5[30]; //
         float ptcone15ID5[30]; //
         float ptcone20ID5[30]; //
         float ptcone30ID5[30]; //
         float ptcone40ID5[30]; //
         float ptcone50ID5[30]; //
         float ptcone10ID6[30]; //
         float ptcone15ID6[30]; //
         float ptcone20ID6[30]; //
         float ptcone30ID6[30]; //
         float ptcone40ID6[30]; //
         float ptcone50ID6[30]; //
         float ptSA[30]; //
         float mt[30]; //
         float mtCalo[30]; //
         float yW[30]; //
         float ptW[30]; //
         float etaW[30]; //
         float phi_munu[30]; //
         float phi_munuSm[30]; //
         float caloMETNt; //
         float caloMExNt; //
         float caloMEyNt; //
         float caloMETPhiNt; //
         float caloSumEtNt; //
         float nu_ptNt; //
         float nu_pxNt; //
         float nu_pyNt; //
         float nu_pzNt; //
         float nu_phiNt; //
         float nu_phiSwingBy30CCW; //
         float nu_phiSwingBy15CCW; //
         float nu_phiSwingBy15CW; //
         float nu_phiSwingBy30CW; //
         float nu_etaNt; //
         float nu_thetaNt; //
         float nu_pt500Nominal; //
         float nu_px500Nominal; //
         float nu_py500Nominal; //
         float nu_phi500Nominal; //
         float nu_eta500Nominal; //
         float nu_theta500Nominal; //
         float nu_pt1000Nominal; //
         float nu_px1000Nominal; //
         float nu_py1000Nominal; //
         float nu_phi1000Nominal; //
         float nu_eta1000Nominal; //
         float nu_theta1000Nominal; //
         float nu_pt2000Nominal; //
         float nu_px2000Nominal; //
         float nu_py2000Nominal; //
         float nu_phi2000Nominal; //
         float nu_eta2000Nominal; //
         float nu_theta2000Nominal; //
         float nu_pt3000Nominal; //
         float nu_px3000Nominal; //
         float nu_py3000Nominal; //
         float nu_phi3000Nominal; //
         float nu_eta3000Nominal; //
         float nu_theta3000Nominal; //
         float nu_pt4000Nominal; //
         float nu_px4000Nominal; //
         float nu_py4000Nominal; //
         float nu_phi4000Nominal; //
         float nu_eta4000Nominal; //
         float nu_theta4000Nominal; //
         float nu_pt5000Nominal; //
         float nu_px5000Nominal; //
         float nu_py5000Nominal; //
         float nu_phi5000Nominal; //
         float nu_eta5000Nominal; //
         float nu_theta5000Nominal; //
         int EF_mu4_MSonly_L1TE50Nt; //
         int EF_mu4_L1VTE50Nt; //
         int EF_mbZdc_a_c_L1VTE50_trkNt; //
         int EF_L1TE50_NoAlgNt; //
         int EF_mu8Nt; //
         int EF_mu4_j40_a4hi_EFFS_matchedNt; //
         int EF_mu4_IDTrkNoCutNt; //
         int EF_L1MBTS_2_NoAlgNt; //
         int EF_mu8_IDTrkNoCutNt; //
         int EF_L1MBTS_1_1_NoAlgNt; //
         int EF_mu8_Matched20[30]; //
         int EF_mu4_j40_a4hi_EFFS_matched_Matched20[30]; //
         int EF_mu4_IDTrkNoCut_Matched20[30]; //
         int EF_mu8_IDTrkNoCut_Matched20[30]; //
         int EF_mu10_MSonly_EFFS_L1ZDC_Matched20[30]; //
         int EF_mu10_MSonly_EFFS_L1TE10_Matched20[30]; //
         int EF_mu10_MSonly_EFFS_L1TE20_Matched20[30]; //
         int EF_mu4_Matched20[30]; //
         int EF_mu10_Matched20[30]; //
         int EF_mu4_L1VTE50_Matched20[30]; //
         int EF_mu4_MSonly_L1TE50_Matched20[30]; //
         int L1Matched[30]; //
         int EF_mu10_MSonly_EFFS_L1ZDCNt; //
         int EF_mu10_MSonly_EFFS_L1TE20Nt; //
         int EF_mu10_MSonly_EFFS_L1TE10Nt; //
         int EF_mu10Nt; //
         int EF_mu4Nt; //
         int L1_MU0Nt; //
         int hasHiPtMuonNt; //
         int ZDY[30]; //
         float thetaID[30]; //
         float etaID[30]; //
         float phiID[30]; //
         float mpxMB; //
         float nu_pxMB; //
         float mpyMB; //
         float nu_pyMB; //
         float centralityMB; //
         int runNumberMB; //
         int eventNumberMB; //
         int trigger1; //
         int trigger2; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void MuonSlim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MuonSlim_Dictionary();
   static void *new_MuonSlim(void *p = 0);
   static void *newArray_MuonSlim(Long_t size, void *p);
   static void delete_MuonSlim(void *p);
   static void deleteArray_MuonSlim(void *p);
   static void destruct_MuonSlim(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::MuonSlim*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MuonSlim) == sizeof(::ROOT::Shadow::MuonSlim));
      ::MuonSlim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MuonSlim),0);
      static ::ROOT::TGenericClassInfo 
         instance("MuonSlim", "./MuonSlim.h", 29,
                  typeid(::MuonSlim), DefineBehavior(ptr, ptr),
                  &MuonSlim_ShowMembers, &MuonSlim_Dictionary, isa_proxy, 4,
                  sizeof(::MuonSlim) );
      instance.SetNew(&new_MuonSlim);
      instance.SetNewArray(&newArray_MuonSlim);
      instance.SetDelete(&delete_MuonSlim);
      instance.SetDeleteArray(&deleteArray_MuonSlim);
      instance.SetDestructor(&destruct_MuonSlim);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::MuonSlim*)
   {
      return GenerateInitInstanceLocal((::MuonSlim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MuonSlim*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MuonSlim_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::MuonSlim*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void MuonSlim_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MuonSlim.
      typedef ::ROOT::Shadow::MuonSlim ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::MuonSlim*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ntupleToRead", &sobj->ntupleToRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*output", &sobj->output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMB", &sobj->fMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hM", &sobj->hM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hZDY", &sobj->hZDY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hJETS15", &sobj->hJETS15);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hJETS20", &sobj->hJETS20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hJETS25", &sobj->hJETS25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hJETS30", &sobj->hJETS30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree", &sobj->tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tMB", &sobj->tMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sMC", (void*)&sobj->sMC);
      R__insp.InspectMember("string", (void*)&sobj->sMC, "sMC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sMCJ2", (void*)&sobj->sMCJ2);
      R__insp.InspectMember("string", (void*)&sobj->sMCJ2, "sMCJ2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sMB", (void*)&sobj->sMB);
      R__insp.InspectMember("string", (void*)&sobj->sMB, "sMB.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHP", (void*)&sobj->sHP);
      R__insp.InspectMember("string", (void*)&sobj->sHP, "sHP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sHipHP", (void*)&sobj->sHipHP);
      R__insp.InspectMember("string", (void*)&sobj->sHipHP, "sHipHP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sPP", (void*)&sobj->sPP);
      R__insp.InspectMember("string", (void*)&sobj->sPP, "sPP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sMSUP", (void*)&sobj->sMSUP);
      R__insp.InspectMember("string", (void*)&sobj->sMSUP, "sMSUP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sMSLOW", (void*)&sobj->sMSLOW);
      R__insp.InspectMember("string", (void*)&sobj->sMSLOW, "sMSLOW.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sIDUP", (void*)&sobj->sIDUP);
      R__insp.InspectMember("string", (void*)&sobj->sIDUP, "sIDUP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sIDLOW", (void*)&sobj->sIDLOW);
      R__insp.InspectMember("string", (void*)&sobj->sIDLOW, "sIDLOW.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r", &sobj->r);
      R__insp.InspectMember(sobj->r, "r.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doSmearSyst", &sobj->doSmearSyst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "outName", &sobj->outName);
      R__insp.InspectMember(sobj->outName, "outName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_dr[30]", sobj->mu_muid_truth_dr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_E[30]", sobj->mu_muid_truth_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_pt[30]", sobj->mu_muid_truth_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_eta[30]", sobj->mu_muid_truth_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_phi[30]", sobj->mu_muid_truth_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nPixHits[30]", sobj->mu_muid_nPixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nBLHits[30]", sobj->mu_muid_nBLHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nSCTHits[30]", sobj->mu_muid_nSCTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nPixHoles[30]", sobj->mu_muid_nPixHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nSCTHoles[30]", sobj->mu_muid_nSCTHoles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_matchndof[30]", sobj->mu_muid_matchndof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_expectBLayerHit[30]", sobj->mu_muid_expectBLayerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nPixelDeadSensors[30]", sobj->mu_muid_nPixelDeadSensors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nSCTDeadSensors[30]", sobj->mu_muid_nSCTDeadSensors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nTRTOutliers[30]", sobj->mu_muid_nTRTOutliers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_d0_exPV[30]", sobj->mu_muid_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_z0_exPV[30]", sobj->mu_muid_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_d0_exPV[30]", sobj->mu_muid_id_d0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_qoverp[30]", sobj->mu_muid_id_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_me_qoverp[30]", sobj->mu_muid_me_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_matchchi2[30]", sobj->mu_muid_matchchi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_type[30]", sobj->mu_muid_truth_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_barcode[30]", sobj->mu_muid_truth_barcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_mothertype[30]", sobj->mu_muid_truth_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_motherbarcode[30]", sobj->mu_muid_truth_motherbarcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_truth_matched[30]", sobj->mu_muid_truth_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_n", &sobj->mu_muid_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muid_npairs", &sobj->muid_npairs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_n", &sobj->trig_EF_trigmuonef_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymu_muid_n", &sobj->Mymu_muid_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Myantikt2HIItrEM_n", &sobj->Myantikt2HIItrEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mytrig_EF_trigmuonef_n", &sobj->Mytrig_EF_trigmuonef_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_n", &sobj->Mymc_mu_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_n", &sobj->Mymc_gamma_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_track_n[30]", sobj->trig_EF_trigmuonef_track_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGoodMuon[30]", sobj->isGoodMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_nTRTHits[30]", sobj->mu_muid_nTRTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RunNumber", &sobj->RunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventNumber", &sobj->EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_MSonly_L1TE50", &sobj->EF_mu4_MSonly_L1TE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_L1VTE50", &sobj->EF_mu4_L1VTE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1ZDC", &sobj->EF_mu10_MSonly_EFFS_L1ZDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE20", &sobj->EF_mu10_MSonly_EFFS_L1TE20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE10", &sobj->EF_mu10_MSonly_EFFS_L1TE10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10", &sobj->EF_mu10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4", &sobj->EF_mu4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8", &sobj->EF_mu8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_j40_a4hi_EFFS_matched", &sobj->EF_mu4_j40_a4hi_EFFS_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_IDTrkNoCut", &sobj->EF_mu4_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1MBTS_2_NoAlg", &sobj->EF_L1MBTS_2_NoAlg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8_IDTrkNoCut", &sobj->EF_mu8_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1MBTS_1_1_NoAlg", &sobj->EF_L1MBTS_1_1_NoAlg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mbZdc_a_c_L1VTE50_trk", &sobj->EF_mbZdc_a_c_L1VTE50_trk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1TE50_NoAlg", &sobj->EF_L1TE50_NoAlg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1_MU0", &sobj->L1_MU0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_isCombinedMuon[30]", sobj->mu_muid_isCombinedMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_L1_matched[30]", sobj->mu_muid_L1_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_isStandAloneMuon[30]", sobj->mu_muid_isStandAloneMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ms_d0[30]", sobj->mu_muid_ms_d0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ms_z0[30]", sobj->mu_muid_ms_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_n", &sobj->mc_mu_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_n", &sobj->mc_gamma_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_E[30]", sobj->mc_mu_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_pt[30]", sobj->mc_mu_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_eta[30]", sobj->mc_mu_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_phi[30]", sobj->mc_mu_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_charge[30]", sobj->mc_mu_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_mothertype[30]", sobj->mc_mu_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_mu_gen_type[30]", sobj->mc_mu_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_n", &sobj->mc_nu_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_E[30]", sobj->mc_nu_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_pt[30]", sobj->mc_nu_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_eta[30]", sobj->mc_nu_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_phi[30]", sobj->mc_nu_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_charge[30]", sobj->mc_nu_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_mothertype[30]", sobj->mc_nu_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_nu_gen_type[30]", sobj->mc_nu_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gen_WbosonMass[30]", sobj->mc_gen_WbosonMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gen_WbosonPt[30]", sobj->mc_gen_WbosonPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gen_WbosonRapidity[30]", sobj->mc_gen_WbosonRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gen_WbosonPseudoRapidity[30]", sobj->mc_gen_WbosonPseudoRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gen_WbosonPhi[30]", sobj->mc_gen_WbosonPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_E[30]", sobj->mc_gamma_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_pt[30]", sobj->mc_gamma_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_eta[30]", sobj->mc_gamma_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_phi[30]", sobj->mc_gamma_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_charge[30]", sobj->mc_gamma_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_mothertype[30]", sobj->mc_gamma_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc_gamma_gen_type[30]", sobj->mc_gamma_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_E[30]", sobj->Mymc_mu_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_pt[30]", sobj->Mymc_mu_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_eta[30]", sobj->Mymc_mu_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_phi[30]", sobj->Mymc_mu_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_charge[30]", sobj->Mymc_mu_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_type[30]", sobj->Mymc_mu_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_mu_gen_mothertype[30]", sobj->Mymc_mu_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_E[30]", sobj->Mymc_nu_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_pt[30]", sobj->Mymc_nu_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_eta[30]", sobj->Mymc_nu_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_phi[30]", sobj->Mymc_nu_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_charge[30]", sobj->Mymc_nu_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_type[30]", sobj->Mymc_nu_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_nu_gen_mothertype[30]", sobj->Mymc_nu_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonNominalPhi[30]", sobj->Mymc_gen_WbosonNominalPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonNominalMass[30]", sobj->Mymc_gen_WbosonNominalMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonNominalPt[30]", sobj->Mymc_gen_WbosonNominalPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonNominalRapidity[30]", sobj->Mymc_gen_WbosonNominalRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonNominalPseudoRapidity[30]", sobj->Mymc_gen_WbosonNominalPseudoRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonCorrectedPhi[30]", sobj->Mymc_gen_WbosonCorrectedPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonCorrectedMass[30]", sobj->Mymc_gen_WbosonCorrectedMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonCorrectedPt[30]", sobj->Mymc_gen_WbosonCorrectedPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonCorrectedRapidity[30]", sobj->Mymc_gen_WbosonCorrectedRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gen_WbosonCorrectedPseudoRapidity[30]", sobj->Mymc_gen_WbosonCorrectedPseudoRapidity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dPhiWJet[30]", sobj->dPhiWJet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_E[30]", sobj->Mymc_gamma_gen_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_pt[30]", sobj->Mymc_gamma_gen_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_eta[30]", sobj->Mymc_gamma_gen_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_phi[30]", sobj->Mymc_gamma_gen_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_charge[30]", sobj->Mymc_gamma_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_type[30]", sobj->Mymc_gamma_gen_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mymc_gamma_gen_mothertype[30]", sobj->Mymc_gamma_gen_mothertype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]", sobj->trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu4_L1VTE50[30]", sobj->trig_EF_trigmuonef_EF_mu4_L1VTE50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]", sobj->trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu10[30]", sobj->trig_EF_trigmuonef_EF_mu10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu4[30]", sobj->trig_EF_trigmuonef_EF_mu4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]", sobj->trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]", sobj->trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]", sobj->trig_EF_trigmuonef_EF_mu8_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu8[30]", sobj->trig_EF_trigmuonef_EF_mu8);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]", sobj->trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]", sobj->trig_EF_trigmuonef_EF_mu4_IDTrkNoCut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTCB_smeared[30]", sobj->pTCB_smeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTCB_smeared[30]", sobj->mTCB_smeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTMS_smeared[30]", sobj->pTMS_smeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTID_smeared[30]", sobj->pTID_smeared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt_tru[30]", sobj->pt_tru);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E_tru[30]", sobj->E_tru);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta_tru[30]", sobj->eta_tru);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_tru[30]", sobj->phi_tru);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "truthMatched_muid[30]", sobj->truthMatched_muid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_pt[30]", sobj->mu_muid_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_eta[30]", sobj->mu_muid_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_phi_exPV[30]", sobj->mu_muid_id_phi_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ms_theta[30]", sobj->mu_muid_ms_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ms_phi[30]", sobj->mu_muid_ms_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muid_scatSignificance[30]", sobj->muid_scatSignificance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_charge[30]", sobj->mu_muid_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Fcal_Et", &sobj->Fcal_Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Centrality", &sobj->Centrality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbtime_timeA", &sobj->mbtime_timeA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbtime_timeC", &sobj->mbtime_timeC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_x", &sobj->vx_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_y", &sobj->vx_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_z", &sobj->vx_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_xNt", &sobj->vx_xNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_yNt", &sobj->vx_yNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx_zNt", &sobj->vx_zNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cccEt_p_Eh_FCal", &sobj->cccEt_p_Eh_FCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMET", &sobj->caloMET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMEx", &sobj->caloMEx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMEy", &sobj->caloMEy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_RefFinal_et", &sobj->MET_RefFinal_et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_RefFinal_etx", &sobj->MET_RefFinal_etx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_RefFinal_ety", &sobj->MET_RefFinal_ety);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_RefFinal_phi", &sobj->MET_RefFinal_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MET_RefFinal_sumet", &sobj->MET_RefFinal_sumet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subtractedMPT", &sobj->subtractedMPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt500", &sobj->nu_pt500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px500", &sobj->nu_px500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py500", &sobj->nu_py500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pz500", &sobj->nu_pz500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta500", &sobj->nu_theta500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta500", &sobj->nu_eta500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi500", &sobj->nu_phi500);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt1000", &sobj->nu_pt1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px1000", &sobj->nu_px1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py1000", &sobj->nu_py1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pz1000", &sobj->nu_pz1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta1000", &sobj->nu_theta1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta1000", &sobj->nu_eta1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi1000", &sobj->nu_phi1000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt2000", &sobj->nu_pt2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px2000", &sobj->nu_px2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py2000", &sobj->nu_py2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pz2000", &sobj->nu_pz2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta2000", &sobj->nu_theta2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta2000", &sobj->nu_eta2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi2000", &sobj->nu_phi2000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt3000", &sobj->nu_pt3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px3000", &sobj->nu_px3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py3000", &sobj->nu_py3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pz3000", &sobj->nu_pz3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta3000", &sobj->nu_theta3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta3000", &sobj->nu_eta3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi3000", &sobj->nu_phi3000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt4000", &sobj->nu_pt4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px4000", &sobj->nu_px4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py4000", &sobj->nu_py4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta4000", &sobj->nu_theta4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta4000", &sobj->nu_eta4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi4000", &sobj->nu_phi4000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt5000", &sobj->nu_pt5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px5000", &sobj->nu_px5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py5000", &sobj->nu_py5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta5000", &sobj->nu_theta5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta5000", &sobj->nu_eta5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi5000", &sobj->nu_phi5000);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasHiPtMuon", &sobj->hasHiPtMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scaledMPT[30]", sobj->scaledMPT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_phi[30]", sobj->mu_muid_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_me_qoverp_exPV[30]", sobj->mu_muid_me_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20[30]", sobj->mu_muid_ptcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30[30]", sobj->mu_muid_ptcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40[30]", sobj->mu_muid_ptcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_etcone20[30]", sobj->mu_muid_etcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_etcone30[30]", sobj->mu_muid_etcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_etcone40[30]", sobj->mu_muid_etcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID05[30]", sobj->mu_muid_ptcone10ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID05[30]", sobj->mu_muid_ptcone15ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID05[30]", sobj->mu_muid_ptcone20ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID05[30]", sobj->mu_muid_ptcone30ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID05[30]", sobj->mu_muid_ptcone40ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID05[30]", sobj->mu_muid_ptcone50ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID075[30]", sobj->mu_muid_ptcone10ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID075[30]", sobj->mu_muid_ptcone15ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID075[30]", sobj->mu_muid_ptcone20ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID075[30]", sobj->mu_muid_ptcone30ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID075[30]", sobj->mu_muid_ptcone40ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID075[30]", sobj->mu_muid_ptcone50ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID1[30]", sobj->mu_muid_ptcone10ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID1[30]", sobj->mu_muid_ptcone15ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID1[30]", sobj->mu_muid_ptcone20ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID1[30]", sobj->mu_muid_ptcone30ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID1[30]", sobj->mu_muid_ptcone40ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID1[30]", sobj->mu_muid_ptcone50ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID2[30]", sobj->mu_muid_ptcone10ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID2[30]", sobj->mu_muid_ptcone15ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID2[30]", sobj->mu_muid_ptcone20ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID2[30]", sobj->mu_muid_ptcone30ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID2[30]", sobj->mu_muid_ptcone40ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID2[30]", sobj->mu_muid_ptcone50ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID3[30]", sobj->mu_muid_ptcone10ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID3[30]", sobj->mu_muid_ptcone15ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID3[30]", sobj->mu_muid_ptcone20ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID3[30]", sobj->mu_muid_ptcone30ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID3[30]", sobj->mu_muid_ptcone40ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID3[30]", sobj->mu_muid_ptcone50ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID4[30]", sobj->mu_muid_ptcone10ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID4[30]", sobj->mu_muid_ptcone15ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID4[30]", sobj->mu_muid_ptcone20ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID4[30]", sobj->mu_muid_ptcone30ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID4[30]", sobj->mu_muid_ptcone40ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID4[30]", sobj->mu_muid_ptcone50ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID5[30]", sobj->mu_muid_ptcone10ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID5[30]", sobj->mu_muid_ptcone15ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID5[30]", sobj->mu_muid_ptcone20ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID5[30]", sobj->mu_muid_ptcone30ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID5[30]", sobj->mu_muid_ptcone40ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID5[30]", sobj->mu_muid_ptcone50ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone10ID6[30]", sobj->mu_muid_ptcone10ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone15ID6[30]", sobj->mu_muid_ptcone15ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone20ID6[30]", sobj->mu_muid_ptcone20ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone30ID6[30]", sobj->mu_muid_ptcone30ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone40ID6[30]", sobj->mu_muid_ptcone40ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ptcone50ID6[30]", sobj->mu_muid_ptcone50ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_z0_exPV[30]", sobj->mu_muid_id_z0_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_me_z0[30]", sobj->mu_muid_me_z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_ms_qoverp[30]", sobj->mu_muid_ms_qoverp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_qoverp_exPV[30]", sobj->mu_muid_id_qoverp_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mu_muid_id_theta_exPV[30]", sobj->mu_muid_id_theta_exPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trig_EF_trigmuonef_track_MS_phi", &sobj->trig_EF_trigmuonef_track_MS_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trig_EF_trigmuonef_track_MS_eta", &sobj->trig_EF_trigmuonef_track_MS_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trig_EF_trigmuonef_track_MS_hasMS", &sobj->trig_EF_trigmuonef_track_MS_hasMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetBranch", &sobj->jetBranch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hiPtJets", &sobj->hiPtJets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antikt2HIItrEM_n", &sobj->antikt2HIItrEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antikt2HIItrEM_E[100]", sobj->antikt2HIItrEM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antikt2HIItrEM_pt[100]", sobj->antikt2HIItrEM_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antikt2HIItrEM_eta[100]", sobj->antikt2HIItrEM_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "antikt2HIItrEM_phi[100]", sobj->antikt2HIItrEM_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AntiKt4TopoEM_n", &sobj->AntiKt4TopoEM_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AntiKt4TopoEM_E[100]", sobj->AntiKt4TopoEM_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AntiKt4TopoEM_pt[100]", sobj->AntiKt4TopoEM_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AntiKt4TopoEM_eta[100]", sobj->AntiKt4TopoEM_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "AntiKt4TopoEM_phi[100]", sobj->AntiKt4TopoEM_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "njets", &sobj->njets);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jet_E[100]", sobj->jet_E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jet_Et[100]", sobj->jet_Et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jet_phi[100]", sobj->jet_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jet_pt[100]", sobj->jet_pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jet_eta[100]", sobj->jet_eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mujetdR", &sobj->mujetdR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigMu4dR", &sobj->trigMu4dR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigMu10dR", &sobj->trigMu10dR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*massCB", &sobj->massCB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dphiMuJet", &sobj->dphiMuJet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detaMuJet", &sobj->detaMuJet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JETS", &sobj->JETS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "JETS1", &sobj->JETS1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mugammadR", &sobj->mugammadR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mugammadR_one", (void*)&sobj->mugammadR_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->mugammadR_one, "mugammadR_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dphiMuGamma", &sobj->dphiMuGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dphiMuGamma_one", (void*)&sobj->dphiMuGamma_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->dphiMuGamma_one, "dphiMuGamma_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detaMuGamma", &sobj->detaMuGamma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detaMuGamma_one", (void*)&sobj->detaMuGamma_one);
      R__insp.InspectMember("vector<float>", (void*)&sobj->detaMuGamma_one, "detaMuGamma_one.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "val[30]", sobj->val);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valSA[30]", sobj->valSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prompt[30]", sobj->prompt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntrt[30]", sobj->ntrt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &sobj->run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", &sobj->event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig1", &sobj->EFtrig1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig2", &sobj->EFtrig2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig3", &sobj->EFtrig3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig4", &sobj->EFtrig4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig5", &sobj->EFtrig5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hip1", &sobj->EFtrig_hip1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hip2", &sobj->EFtrig_hip2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hip3", &sobj->EFtrig_hip3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hip4", &sobj->EFtrig_hip4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hip5", &sobj->EFtrig_hip5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EFtrig_hipMB", &sobj->EFtrig_hipMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt[30]", sobj->pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptMS[30]", sobj->ptMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptID[30]", sobj->ptID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi[30]", sobj->phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta[30]", sobj->eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiMS[30]", sobj->phiMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaMS[30]", sobj->etaMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaMS[30]", sobj->thetaMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0[30]", sobj->z0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z0SA[30]", sobj->z0SA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLoss[30]", sobj->eLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge[30]", sobj->charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scat[30]", sobj->scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "comp[30]", sobj->comp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcal", &sobj->fcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mbts", &sobj->mbts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centrality", &sobj->centrality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20[30]", sobj->ptcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30[30]", sobj->ptcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40[30]", sobj->ptcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etcone20[30]", sobj->etcone20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etcone30[30]", sobj->etcone30);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etcone40[30]", sobj->etcone40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID05[30]", sobj->ptcone10ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID05[30]", sobj->ptcone15ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID05[30]", sobj->ptcone20ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID05[30]", sobj->ptcone30ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID05[30]", sobj->ptcone40ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID05[30]", sobj->ptcone50ID05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID075[30]", sobj->ptcone10ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID075[30]", sobj->ptcone15ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID075[30]", sobj->ptcone20ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID075[30]", sobj->ptcone30ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID075[30]", sobj->ptcone40ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID075[30]", sobj->ptcone50ID075);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID1[30]", sobj->ptcone10ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID1[30]", sobj->ptcone15ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID1[30]", sobj->ptcone20ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID1[30]", sobj->ptcone30ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID1[30]", sobj->ptcone40ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID1[30]", sobj->ptcone50ID1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID2[30]", sobj->ptcone10ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID2[30]", sobj->ptcone15ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID2[30]", sobj->ptcone20ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID2[30]", sobj->ptcone30ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID2[30]", sobj->ptcone40ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID2[30]", sobj->ptcone50ID2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID3[30]", sobj->ptcone10ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID3[30]", sobj->ptcone15ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID3[30]", sobj->ptcone20ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID3[30]", sobj->ptcone30ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID3[30]", sobj->ptcone40ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID3[30]", sobj->ptcone50ID3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID4[30]", sobj->ptcone10ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID4[30]", sobj->ptcone15ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID4[30]", sobj->ptcone20ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID4[30]", sobj->ptcone30ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID4[30]", sobj->ptcone40ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID4[30]", sobj->ptcone50ID4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID5[30]", sobj->ptcone10ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID5[30]", sobj->ptcone15ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID5[30]", sobj->ptcone20ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID5[30]", sobj->ptcone30ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID5[30]", sobj->ptcone40ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID5[30]", sobj->ptcone50ID5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone10ID6[30]", sobj->ptcone10ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone15ID6[30]", sobj->ptcone15ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone20ID6[30]", sobj->ptcone20ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone30ID6[30]", sobj->ptcone30ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone40ID6[30]", sobj->ptcone40ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptcone50ID6[30]", sobj->ptcone50ID6);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSA[30]", sobj->ptSA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mt[30]", sobj->mt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtCalo[30]", sobj->mtCalo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yW[30]", sobj->yW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptW[30]", sobj->ptW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaW[30]", sobj->etaW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_munu[30]", sobj->phi_munu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi_munuSm[30]", sobj->phi_munuSm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETNt", &sobj->caloMETNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMExNt", &sobj->caloMExNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMEyNt", &sobj->caloMEyNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloMETPhiNt", &sobj->caloMETPhiNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloSumEtNt", &sobj->caloSumEtNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_ptNt", &sobj->nu_ptNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pxNt", &sobj->nu_pxNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pyNt", &sobj->nu_pyNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pzNt", &sobj->nu_pzNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phiNt", &sobj->nu_phiNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phiSwingBy30CCW", &sobj->nu_phiSwingBy30CCW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phiSwingBy15CCW", &sobj->nu_phiSwingBy15CCW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phiSwingBy15CW", &sobj->nu_phiSwingBy15CW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phiSwingBy30CW", &sobj->nu_phiSwingBy30CW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_etaNt", &sobj->nu_etaNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_thetaNt", &sobj->nu_thetaNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt500Nominal", &sobj->nu_pt500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px500Nominal", &sobj->nu_px500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py500Nominal", &sobj->nu_py500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi500Nominal", &sobj->nu_phi500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta500Nominal", &sobj->nu_eta500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta500Nominal", &sobj->nu_theta500Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt1000Nominal", &sobj->nu_pt1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px1000Nominal", &sobj->nu_px1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py1000Nominal", &sobj->nu_py1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi1000Nominal", &sobj->nu_phi1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta1000Nominal", &sobj->nu_eta1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta1000Nominal", &sobj->nu_theta1000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt2000Nominal", &sobj->nu_pt2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px2000Nominal", &sobj->nu_px2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py2000Nominal", &sobj->nu_py2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi2000Nominal", &sobj->nu_phi2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta2000Nominal", &sobj->nu_eta2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta2000Nominal", &sobj->nu_theta2000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt3000Nominal", &sobj->nu_pt3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px3000Nominal", &sobj->nu_px3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py3000Nominal", &sobj->nu_py3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi3000Nominal", &sobj->nu_phi3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta3000Nominal", &sobj->nu_eta3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta3000Nominal", &sobj->nu_theta3000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt4000Nominal", &sobj->nu_pt4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px4000Nominal", &sobj->nu_px4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py4000Nominal", &sobj->nu_py4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi4000Nominal", &sobj->nu_phi4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta4000Nominal", &sobj->nu_eta4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta4000Nominal", &sobj->nu_theta4000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pt5000Nominal", &sobj->nu_pt5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_px5000Nominal", &sobj->nu_px5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_py5000Nominal", &sobj->nu_py5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_phi5000Nominal", &sobj->nu_phi5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_eta5000Nominal", &sobj->nu_eta5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_theta5000Nominal", &sobj->nu_theta5000Nominal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_MSonly_L1TE50Nt", &sobj->EF_mu4_MSonly_L1TE50Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_L1VTE50Nt", &sobj->EF_mu4_L1VTE50Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mbZdc_a_c_L1VTE50_trkNt", &sobj->EF_mbZdc_a_c_L1VTE50_trkNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1TE50_NoAlgNt", &sobj->EF_L1TE50_NoAlgNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8Nt", &sobj->EF_mu8Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_j40_a4hi_EFFS_matchedNt", &sobj->EF_mu4_j40_a4hi_EFFS_matchedNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_IDTrkNoCutNt", &sobj->EF_mu4_IDTrkNoCutNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1MBTS_2_NoAlgNt", &sobj->EF_L1MBTS_2_NoAlgNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8_IDTrkNoCutNt", &sobj->EF_mu8_IDTrkNoCutNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_L1MBTS_1_1_NoAlgNt", &sobj->EF_L1MBTS_1_1_NoAlgNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8_Matched20[30]", sobj->EF_mu8_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_j40_a4hi_EFFS_matched_Matched20[30]", sobj->EF_mu4_j40_a4hi_EFFS_matched_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_IDTrkNoCut_Matched20[30]", sobj->EF_mu4_IDTrkNoCut_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu8_IDTrkNoCut_Matched20[30]", sobj->EF_mu8_IDTrkNoCut_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1ZDC_Matched20[30]", sobj->EF_mu10_MSonly_EFFS_L1ZDC_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE10_Matched20[30]", sobj->EF_mu10_MSonly_EFFS_L1TE10_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE20_Matched20[30]", sobj->EF_mu10_MSonly_EFFS_L1TE20_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_Matched20[30]", sobj->EF_mu4_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_Matched20[30]", sobj->EF_mu10_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_L1VTE50_Matched20[30]", sobj->EF_mu4_L1VTE50_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4_MSonly_L1TE50_Matched20[30]", sobj->EF_mu4_MSonly_L1TE50_Matched20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1Matched[30]", sobj->L1Matched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1ZDCNt", &sobj->EF_mu10_MSonly_EFFS_L1ZDCNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE20Nt", &sobj->EF_mu10_MSonly_EFFS_L1TE20Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10_MSonly_EFFS_L1TE10Nt", &sobj->EF_mu10_MSonly_EFFS_L1TE10Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu10Nt", &sobj->EF_mu10Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EF_mu4Nt", &sobj->EF_mu4Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L1_MU0Nt", &sobj->L1_MU0Nt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasHiPtMuonNt", &sobj->hasHiPtMuonNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDY[30]", sobj->ZDY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaID[30]", sobj->thetaID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "etaID[30]", sobj->etaID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiID[30]", sobj->phiID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mpxMB", &sobj->mpxMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pxMB", &sobj->nu_pxMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mpyMB", &sobj->mpyMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nu_pyMB", &sobj->nu_pyMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centralityMB", &sobj->centralityMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumberMB", &sobj->runNumberMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumberMB", &sobj->eventNumberMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger1", &sobj->trigger1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger2", &sobj->trigger2);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_MuonSlim(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonSlim : new ::MuonSlim;
   }
   static void *newArray_MuonSlim(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MuonSlim[nElements] : new ::MuonSlim[nElements];
   }
   // Wrapper around operator delete
   static void delete_MuonSlim(void *p) {
      delete ((::MuonSlim*)p);
   }
   static void deleteArray_MuonSlim(void *p) {
      delete [] ((::MuonSlim*)p);
   }
   static void destruct_MuonSlim(void *p) {
      typedef ::MuonSlim current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::MuonSlim

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

namespace ROOT {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<int> >

/********************************************************
* Dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("MuonSlim.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* MuonSlim */
static int G__Dict_631_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->SlimHISingleMuon(*((TString*) G__int(libp->para[0])), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->ppMuonSelector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->HICombinedMuonSelectorHP((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->HICombinedMuonSelectorMB((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->HIStandAloneCombinedMuonSelector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MuonSlim*) G__getstructoffset())->MatchTrigger((int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSlim*) G__getstructoffset())->SetBranches();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->getSubtractedMpt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->getScaledMpt((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->randomEventMPx((int) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->randomEventMPy((int) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->randomEventCentrality((int) G__int(libp->para[0]), (TFile*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->getMpxCorrection((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->getMpyCorrection((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((MuonSlim*) G__getstructoffset())->AssignCentrality((float) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((MuonSlim*) G__getstructoffset())->getArgStr(*((TString*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::string>* pobj;
         vector<std::string> xobj = ((MuonSlim*) G__getstructoffset())->getFileList(*((TString*) G__int(libp->para[0])));
         pobj = new vector<std::string>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MuonSlim*) G__getstructoffset())->openFromFileList(*((TString*) G__int(libp->para[0])), (TChain*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_631_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSlim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSlim[n];
     } else {
       p = new((void*) gvp) MuonSlim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MuonSlim;
     } else {
       p = new((void*) gvp) MuonSlim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MuonSlim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_631_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MuonSlim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MuonSlim(*(MuonSlim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_MuonSlim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MuonSlim G__TMuonSlim;
static int G__Dict_631_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MuonSlim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MuonSlim*) (soff+(sizeof(MuonSlim)*i)))->~G__TMuonSlim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MuonSlim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MuonSlim*) (soff))->~G__TMuonSlim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_631_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MuonSlim* dest = (MuonSlim*) G__getstructoffset();
   *dest = *(MuonSlim*) libp->para[0].ref;
   const MuonSlim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* MuonSlim */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<float> >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),1,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),257,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",104,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* MuonSlim */
static void G__setup_memvarMuonSlim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_MuonSlim));
   { MuonSlim *p; p=(MuonSlim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TChain),-1,-1,4,"ntupleToRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,4,"output=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TFile),-1,-1,4,"fMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hZDY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hJETS15=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hJETS20=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hJETS25=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TH1F),-1,-1,4,"hJETS30=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TTree),-1,-1,4,"tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TTree),-1,-1,4,"tMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sMCJ2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sHP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sHipHP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sPP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sMSUP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sMSLOW=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sIDUP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,4,"sIDLOW=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TRandom3),-1,-1,4,"r=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"doSmearSyst=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_TString),-1,-1,4,"outName=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_truth_dr[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_truth_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_truth_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_truth_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_truth_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nPixHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nBLHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nSCTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nPixHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nSCTHoles[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_matchndof[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_expectBLayerHit[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nPixelDeadSensors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nSCTDeadSensors[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nTRTOutliers[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_d0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_me_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_matchchi2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_truth_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_truth_barcode[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_truth_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_truth_motherbarcode[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_truth_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"muid_npairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymu_muid_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Myantikt2HIItrEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mytrig_EF_trigmuonef_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_mu_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_gamma_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_track_n[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"isGoodMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_nTRTHits[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"RunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_MSonly_L1TE50=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_L1VTE50=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1ZDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE20=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE10=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_j40_a4hi_EFFS_matched=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_IDTrkNoCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1MBTS_2_NoAlg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8_IDTrkNoCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1MBTS_1_1_NoAlg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mbZdc_a_c_L1VTE50_trk=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1TE50_NoAlg=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"L1_MU0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_isCombinedMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_L1_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mu_muid_isStandAloneMuon[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ms_d0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ms_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_mu_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_gamma_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_mu_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_mu_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_mu_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_mu_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_mu_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_mu_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_mu_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_nu_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_nu_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_nu_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_nu_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_nu_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_nu_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_nu_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_nu_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gen_WbosonMass[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gen_WbosonPt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gen_WbosonRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gen_WbosonPseudoRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gen_WbosonPhi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gamma_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gamma_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gamma_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gamma_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mc_gamma_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_gamma_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mc_gamma_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_mu_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_mu_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_mu_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_mu_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_mu_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_mu_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_mu_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_nu_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_nu_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_nu_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_nu_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_nu_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_nu_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_nu_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonNominalPhi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonNominalMass[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonNominalPt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonNominalRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonNominalPseudoRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonCorrectedPhi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonCorrectedMass[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonCorrectedPt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonCorrectedRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gen_WbosonCorrectedPseudoRapidity[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"dPhiWJet[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gamma_gen_E[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gamma_gen_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gamma_gen_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gamma_gen_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Mymc_gamma_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_gamma_gen_type[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"Mymc_gamma_gen_mothertype[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu4_MSonly_L1TE50[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu4_L1VTE50[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1ZDC[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu10[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu10_MSonly_EFFS_L1TE10[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu8_IDTrkNoCut[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu8[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu4_j40_a4hi_EFFS_matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trig_EF_trigmuonef_EF_mu4_IDTrkNoCut[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTCB_smeared[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mTCB_smeared[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTMS_smeared[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pTID_smeared[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pt_tru[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"E_tru[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta_tru[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi_tru[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"truthMatched_muid[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_phi_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ms_theta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ms_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"muid_scatSignificance[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Fcal_Et=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"Centrality=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mbtime_timeA=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mbtime_timeC=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_xNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_yNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"vx_zNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"cccEt_p_Eh_FCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMET=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMEx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMEy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"MET_RefFinal_et=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"MET_RefFinal_etx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"MET_RefFinal_ety=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"MET_RefFinal_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"MET_RefFinal_sumet=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"subtractedMPT=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pz500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi500=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pz1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi1000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pz2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi2000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pz3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi3000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi4000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi5000=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hasHiPtMuon=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"scaledMPT[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_me_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_etcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_etcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_etcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone10ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone15ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone20ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone30ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone40ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ptcone50ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_z0_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_me_z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_ms_qoverp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_qoverp_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mu_muid_id_theta_exPV[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"trig_EF_trigmuonef_track_MS_phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"trig_EF_trigmuonef_track_MS_eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,4,"trig_EF_trigmuonef_track_MS_hasMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"jetBranch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hiPtJets=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"antikt2HIItrEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"antikt2HIItrEM_E[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"antikt2HIItrEM_pt[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"antikt2HIItrEM_eta[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"antikt2HIItrEM_phi[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"AntiKt4TopoEM_n=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"AntiKt4TopoEM_E[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"AntiKt4TopoEM_pt[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"AntiKt4TopoEM_eta[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"AntiKt4TopoEM_phi[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"njets=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"jet_E[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"jet_Et[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"jet_phi[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"jet_pt[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"jet_eta[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"mujetdR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"trigMu4dR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"trigMu10dR=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"massCB=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"dphiMuJet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"detaMuJet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"JETS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"JETS1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"mugammadR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"mugammadR_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"dphiMuGamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"dphiMuGamma_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<float> >"),-1,4,"detaMuGamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"detaMuGamma_one=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"val[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"valSA[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"prompt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ntrt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"run=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"event=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hip1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hip2=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hip3=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hip4=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hip5=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EFtrig_hipMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptMS[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phiMS[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etaMS[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"thetaMS[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z0[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z0SA[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eLoss[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"charge[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"scat[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"comp[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"fcal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mbts=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"centrality=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etcone20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etcone30[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etcone40[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID05[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID075[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID1[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID2[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID3[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID4[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID5[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone10ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone15ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone20ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone30ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone40ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptcone50ID6[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptSA[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mt[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mtCalo[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"yW[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ptW[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etaW[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi_munu[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi_munuSm[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMETNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMExNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMEyNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloMETPhiNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"caloSumEtNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_ptNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pxNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pyNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pzNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phiNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phiSwingBy30CCW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phiSwingBy15CCW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phiSwingBy15CW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phiSwingBy30CW=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_etaNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_thetaNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta500Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta1000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta2000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta3000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta4000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pt5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_px5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_py5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_phi5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_eta5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_theta5000Nominal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_MSonly_L1TE50Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_L1VTE50Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mbZdc_a_c_L1VTE50_trkNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1TE50_NoAlgNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_j40_a4hi_EFFS_matchedNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_IDTrkNoCutNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1MBTS_2_NoAlgNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8_IDTrkNoCutNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_L1MBTS_1_1_NoAlgNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_j40_a4hi_EFFS_matched_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_IDTrkNoCut_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu8_IDTrkNoCut_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1ZDC_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE10_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE20_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_L1VTE50_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4_MSonly_L1TE50_Matched20[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"L1Matched[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1ZDCNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE20Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10_MSonly_EFFS_L1TE10Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu10Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"EF_mu4Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"L1_MU0Nt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hasHiPtMuonNt=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"ZDY[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"thetaID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"etaID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phiID[30]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mpxMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pxMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"mpyMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"nu_pyMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"centralityMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runNumberMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"eventNumberMB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trigger1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"trigger2=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncMuonSlim(void) {
   /* MuonSlim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_MuonSlim));
   G__memfunc_setup("SlimHISingleMuon",1575,G__Dict_631_0_1, 105, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - inputFiles g - - 0 - isMB "
"g - - 0 - isHP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ppMuonSelector",1472,G__Dict_631_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HICombinedMuonSelectorHP",2346,G__Dict_631_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HICombinedMuonSelectorMB",2337,G__Dict_631_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HIStandAloneCombinedMuonSelector",3195,G__Dict_631_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatchTrigger",1217,G__Dict_631_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - imu f - - 0 - dR "
"i - - 0 - triggerIndex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranches",1106,G__Dict_631_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSubtractedMpt",1666,G__Dict_631_0_8, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScaledMpt",1213,G__Dict_631_0_9, 102, -1, -1, 0, 3, 1, 1, 0, 
"f - - 0 - subMPT f - - 0 - scalefactor "
"f - - 0 - ptmu", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("randomEventMPx",1432,G__Dict_631_0_10, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i U 'TFile' - 0 - fMB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("randomEventMPy",1433,G__Dict_631_0_11, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i U 'TFile' - 0 - fMB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("randomEventCentrality",2210,G__Dict_631_0_12, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i U 'TFile' - 0 - fMB", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMpxCorrection",1677,G__Dict_631_0_13, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Centrality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMpyCorrection",1678,G__Dict_631_0_14, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - Centrality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AssignCentrality",1668,G__Dict_631_0_15, 102, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - fcal_Et", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArgStr",915,G__Dict_631_0_16, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - inputfiletxt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFileList",1116,G__Dict_631_0_17, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), G__defined_typename("vector<std::string>"), 0, 1, 1, 1, 0, "u 'TString' - 0 - inputfiletxt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openFromFileList",1634,G__Dict_631_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - inputfiletxt U 'TChain' - 0 - chain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MuonSlim",820,G__Dict_631_0_19, 105, G__get_linked_tagnum(&G__DictLN_MuonSlim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MuonSlim", 820, G__Dict_631_0_20, (int) ('i'), G__get_linked_tagnum(&G__DictLN_MuonSlim), -1, 0, 1, 1, 1, 0, "u 'MuonSlim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MuonSlim", 946, G__Dict_631_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_631_0_22, (int) ('u'), G__get_linked_tagnum(&G__DictLN_MuonSlim), -1, 1, 1, 1, 1, 0, "u 'MuonSlim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__DictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictLN_MuonSlim = { "MuonSlim" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TString.tagnum = -1 ;
  G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictLN_TTree.tagnum = -1 ;
  G__DictLN_TFile.tagnum = -1 ;
  G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_TChain.tagnum = -1 ;
  G__DictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictLN_TH1F.tagnum = -1 ;
  G__DictLN_TRandom3.tagnum = -1 ;
  G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictLN_MuonSlim.tagnum = -1 ;
  G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TString);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TTree);
   G__get_linked_tagnum_fwd(&G__DictLN_TFile);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TChain);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__DictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_MuonSlim),sizeof(MuonSlim),-1,263424,(char*)NULL,G__setup_memvarMuonSlim,G__setup_memfuncMuonSlim);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

